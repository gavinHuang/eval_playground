question_id,question,evidence,difficulty,expected_sql,expected_result,Cortex_Analyst_sql,Cortex_Analyst_result,Cortex_Analyst_match,Cortex_Analyst_error,Cortex_Analyst_sql_exec_error
1470,How many gas stations in CZE has Premium gas?,,simple,SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium',"[(1114,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
), premium_stations AS (
  SELECT DISTINCT
    t.gasstationid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __gasstations AS g
    ON t.gasstationid = g.gasstationid
  LEFT OUTER JOIN __products AS p
    ON t.productid = p.productid
  WHERE
    g.country = 'CZE'
    AND LOWER(p.description) LIKE '%premium%'
    AND t.price > 0
    AND t.amount > 0
)
SELECT
  COUNT(*) AS premium_station_count
FROM premium_stations
 -- Generated by Cortex Analyst
;","[('0',)]",NO,,
1471,What is the ratio of customers who pay in EUR against customers who pay in CZK?,ratio of customers who pay in EUR against customers who pay in CZK = count(Currency = 'EUR') / count(Currency = 'CZK').,simple,"SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(Currency = 'CZK', 1, 0)) AS ratio FROM customers","[(0.06572769953051644,)]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_counts AS (
  SELECT
    COUNT(CASE WHEN currency = 'EUR' THEN customerid END) AS eur_customers,
    COUNT(CASE WHEN currency = 'CZK' THEN customerid END) AS czk_customers
  FROM __customers
)
SELECT
  CAST(eur_customers AS FLOAT) / NULLIF(NULLIF(czk_customers, 0), 0) AS eur_to_czk_ratio
FROM customer_counts
 -- Generated by Cortex Analyst
;","[('0.065727699530516437',)]",YES,,
1472,"In 2012, who had the least consumption in LAM?",Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1","[(47273,)]","WITH __customers AS (
  SELECT
    customerid
  FROM debit_card_specializing.public.customers
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), customer_2012_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  WHERE
    cc.date BETWEEN '201201' AND '201212'
  GROUP BY
    cc.customerid
)
SELECT
  c.customerid,
  c2c.total_consumption
FROM customer_2012_consumption AS c2c
LEFT OUTER JOIN __customers AS c
  ON c2c.customerid = c.customerid
ORDER BY
  c2c.total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('38175', '-6630.31')]",NO,,
1473,What was the average monthly consumption of customers in SME for the year 2013?,Average Monthly consumption = AVG(Consumption) / 12; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT AVG(T2.Consumption) / 12 FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'","[(459.9562642870894,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'SME' AND cc.date BETWEEN '201301' AND '201312'
  GROUP BY
    cc.customerid
)
SELECT
  AVG(total_consumption) / NULLIF(12, 0) AS avg_monthly_consumption
FROM yearly_consumption
 -- Generated by Cortex Analyst
;","[('3682.644352346667',)]",NO,,
1474,"Which customers, paying in CZK, consumed the most gas in 2011?","Year 2011 can be presented as Between 201101 And 201112, which means between January and December in 2011",moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(603,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_consumption_2011 AS (
  SELECT
    cc.customerid,
    c.currency,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date BETWEEN '201101' AND '201112' AND c.currency = 'CZK'
  GROUP BY
    cc.customerid,
    c.currency
)
SELECT
  cc.customerid,
  cc.currency,
  cc.total_consumption
FROM customer_consumption_2011 AS cc
ORDER BY
  cc.total_consumption DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('603', 'CZK', '1938.78'), ('1492', 'CZK', '1430.07'), ('1757', 'CZK', '78.98')]",NO,,
1475,"How many customers in KAM had a consumption of less than 30,000 for the year 2012?","Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012",moderate,"SELECT COUNT(*) FROM ( SELECT T2.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND SUBSTRING(T2.Date, 1, 4) = '2012' GROUP BY T2.CustomerID HAVING SUM(T2.Consumption) < 30000 ) AS t1","[(1123,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'KAM' AND cc.date BETWEEN '201201' AND '201212'
  GROUP BY
    cc.customerid
)
SELECT
  COUNT(customerid) AS customer_count
FROM yearly_consumption
WHERE
  total_consumption < 30000
 -- Generated by Cortex Analyst
;","[('1123',)]",YES,,
1476,What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year; Difference in Consumption = CZK customers consumption in 2012 - EUR customers consumption in 2012,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'","[(402524570.17,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_consumption_2012 AS (
  SELECT
    cc.customerid,
    c.currency,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    SUBSTRING(cc.date, 1, 4) = '2012' AND c.currency IN ('CZK', 'EUR')
  GROUP BY
    cc.customerid,
    c.currency
), currency_totals AS (
  SELECT
    currency,
    SUM(total_consumption) AS currency_consumption
  FROM customer_consumption_2012
  GROUP BY
    currency
)
SELECT
  SUM(
    CASE WHEN currency = 'CZK' THEN currency_consumption ELSE -currency_consumption END
  ) AS consumption_difference
FROM currency_totals
 -- Generated by Cortex Analyst
;","[('402524570.17',)]",YES,,
1477,Which year recorded the most gas use paid in EUR?,,simple,"SELECT SUBSTRING(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY SUBSTRING(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('2013',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    amount
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), yearly_volume AS (
  SELECT
    DATE_PART('YEAR', t.date) AS year,
    MIN(t.date) AS start_date,
    MAX(t.date) AS end_date,
    SUM(t.amount) AS total_volume
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __customers AS c
    ON t.customerid = c.customerid
  WHERE
    c.currency = 'EUR' AND t.amount > 0
  GROUP BY
    DATE_PART('YEAR', t.date)
)
SELECT
  year,
  start_date,
  end_date,
  total_volume
FROM yearly_volume
ORDER BY
  total_volume DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('2012', '15576', '15577', '1576')]",NO,,
1478,Which segment had the least consumption?,,simple,SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[('LAM',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), customer_segment_consumption AS (
  SELECT
    c.segment,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  GROUP BY
    c.segment
)
SELECT
  segment,
  total_consumption
FROM customer_segment_consumption
ORDER BY
  total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('LAM', '1048825700.87')]",YES,,
1479,Which year recorded the most consumption of gas paid in CZK?,The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('2013',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    SUBSTRING(cc.date, 1, 4) AS year,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'CZK'
  GROUP BY
    SUBSTRING(cc.date, 1, 4)
)
SELECT
  year,
  total_consumption
FROM yearly_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('2013', '2992757755.72')]",YES,,
1480,What was the gas consumption peak month for SME customers in 2013?,Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,moderate,"SELECT SUBSTR(T2.Date, 5, 2) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTR(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('04',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), monthly_consumption AS (
  SELECT
    cc.date,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'SME' AND SUBSTRING(cc.date, 1, 4) = '2013'
  GROUP BY
    cc.date
)
SELECT
  date,
  total_consumption
FROM monthly_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('201304', '126047776.92')]",NO,,
1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",annual average consumption of customer with the lowest consumption in each segment = total consumption per year / the number of customer with lowest consumption in each segment; Difference in annual average = SME's annual average - LAM's annual average; Difference in annual average = LAM's annual average - KAM's annual average; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","[(0.0, 582092.86, -582092.86)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), customer_consumption_2013 AS (
  SELECT
    cc.customerid,
    c.segment,
    c.currency,
    SUM(cc.consumption) AS yearly_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    SUBSTRING(cc.date, 1, 4) = '2013' AND c.currency = 'CZK'
  GROUP BY
    cc.customerid,
    c.segment,
    c.currency
), min_consumption_by_segment AS (
  SELECT
    segment,
    MIN(yearly_consumption) AS min_consumption
  FROM customer_consumption_2013
  GROUP BY
    segment
), segment_stats AS (
  SELECT
    ccs.segment,
    mcs.min_consumption,
    COUNT(ccs.customerid) AS num_customers,
    SUM(ccs.yearly_consumption) AS total_consumption
  FROM customer_consumption_2013 AS ccs
  INNER JOIN min_consumption_by_segment AS mcs
    ON ccs.segment = mcs.segment AND ccs.yearly_consumption = mcs.min_consumption
  GROUP BY
    ccs.segment,
    mcs.min_consumption
), segment_avg AS (
  SELECT
    segment,
    total_consumption / NULLIF(num_customers, 0) AS avg_consumption
  FROM segment_stats
)
SELECT
  'SME vs LAM' AS comparison,
  (
    sme.avg_consumption - lam.avg_consumption
  ) AS consumption_difference
FROM segment_avg AS sme
CROSS JOIN segment_avg AS lam
WHERE
  sme.segment = 'SME' AND lam.segment = 'LAM'
UNION ALL
SELECT
  'LAM vs KAM' AS comparison,
  (
    lam.avg_consumption - kam.avg_consumption
  ) AS consumption_difference
FROM segment_avg AS lam
CROSS JOIN segment_avg AS kam
WHERE
  lam.segment = 'LAM' AND kam.segment = 'KAM'
UNION ALL
SELECT
  'KAM vs SME' AS comparison,
  (
    kam.avg_consumption - sme.avg_consumption
  ) AS consumption_difference
FROM segment_avg AS kam
CROSS JOIN segment_avg AS sme
WHERE
  kam.segment = 'KAM' AND sme.segment = 'SME'
ORDER BY
  comparison
 -- Generated by Cortex Analyst
;","[('KAM vs SME', '7962.72000000'), ('LAM vs KAM', '6046.62000000'), ('SME vs LAM', '-14009.34000000')]",NO,,
1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",Increase or Decrease = consumption for 2013 - consumption for 2012; Percentage of Increase = (Increase or Decrease / consumption for 2013) * 100%; The first 4 strings of the Date values in the yearmonth table can represent year,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID","[(545.4018999790969, 681.5824574939339, 708.1124062978664)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    c.segment,
    SUBSTRING(cc.date, 1, 4) AS year,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR'
    AND c.segment IN ('SME', 'LAM', 'KAM')
    AND SUBSTRING(cc.date, 1, 4) IN ('2012', '2013')
  GROUP BY
    c.segment,
    SUBSTRING(cc.date, 1, 4)
), changes AS (
  SELECT
    y2013.segment,
    y2013.total_consumption AS consumption_2013,
    y2012.total_consumption AS consumption_2012,
    (
      y2013.total_consumption - y2012.total_consumption
    ) AS absolute_change,
    (
      y2013.total_consumption - y2012.total_consumption
    ) / NULLIF(NULLIF(y2012.total_consumption, 0), 0) AS pct_change
  FROM yearly_consumption AS y2013
  JOIN yearly_consumption AS y2012
    ON y2013.segment = y2012.segment AND y2013.year = '2013' AND y2012.year = '2012'
)
SELECT
  segment,
  consumption_2013,
  consumption_2012,
  absolute_change,
  pct_change
FROM changes
ORDER BY
  pct_change DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('SME', '7258151.96', '869537.52', '6388614.44', '7.34714063'), ('KAM', '4224041.47', '646663.61', '3577377.86', '5.53205377'), ('LAM', '4326606.13', '676212.68', '3650393.45', '5.39829192')]",NO,,
1483,How much did customer 6 consume in total between August and November 2013?,Between August And November 2013 refers to Between 201308 And 201311; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311',"[(1224.96,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  SUM(cc.consumption) AS total_consumption
FROM __customer_consumption AS cc
WHERE
  cc.customerid = 6 AND cc.date >= '201308' AND cc.date <= '201311'
 -- Generated by Cortex Analyst
;","[('1224.96',)]",YES,,
1484,"How many more ""discount"" gas stations does the Czech Republic have compared to Slovakia?","Czech Republic can be represented as the Country value in gasstations table is 'CZE'; Slovakia can be represented as the Country value in the gasstations table is 'SVK';  Computation of more ""discount"" gas stations= Total no. of discount gas stations in Czech Republic - Total no. of discount gas stations in Slovakia",simple,"SELECT SUM(IIF(Country = 'CZE', 1, 0)) - SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations WHERE Segment = 'Discount'","[(176,)]","WITH __gasstations AS (
  SELECT
    country,
    segment
  FROM debit_card_specializing.public.gasstations
), country_discount_stations AS (
  SELECT
    country,
    COUNT(*) AS discount_count
  FROM __gasstations
  WHERE
    segment = 'discount' AND country IN ('CZE', 'SVK')
  GROUP BY
    country
)
SELECT
  (
    MAX(CASE WHEN country = 'CZE' THEN discount_count ELSE 0 END) - MAX(CASE WHEN country = 'SVK' THEN discount_count ELSE 0 END)
  ) AS difference_cze_minus_svk
FROM country_discount_stations
 -- Generated by Cortex Analyst
;","[(None,)]",NO,,
1485,How much more was customer 7 consuming in April 2013 than customer 5?,April 2013 refers to 201304 in the yearmonth.date,simple,"SELECT SUM(IIF(CustomerID = 7, Consumption, 0)) - SUM(IIF(CustomerID = 5, Consumption, 0)) FROM yearmonth WHERE Date = '201304'","[(540.51,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), april_consumption AS (
  SELECT
    customerid,
    consumption
  FROM __customer_consumption
  WHERE
    date = '201304'
)
SELECT
  (
    c7.consumption - c5.consumption
  ) AS consumption_difference
FROM april_consumption AS c7
CROSS JOIN april_consumption AS c5
WHERE
  c7.customerid = 7 AND c5.customerid = 5
 -- Generated by Cortex Analyst
;","[('540.51',)]",YES,,
1486,"Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",Amount of more SMEs = Total of SMEs pay using Currency CZK - Total of SMEs pay using Currency EUR,simple,SELECT SUM(Currency = 'CZK') - SUM(Currency = 'EUR') FROM customers WHERE Segment = 'SME',"[(23505,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), sme_by_currency AS (
  SELECT
    c.currency,
    COUNT(DISTINCT c.customerid) AS customer_count
  FROM __customers AS c
  WHERE
    c.segment = 'SME' AND c.currency IN ('CZK', 'EUR')
  GROUP BY
    c.currency
)
SELECT
  czk.currency AS czk_currency,
  czk.customer_count AS czk_count,
  eur.currency AS eur_currency,
  eur.customer_count AS eur_count,
  CASE
    WHEN czk.customer_count > eur.customer_count
    THEN czk.customer_count - eur.customer_count
  END AS czk_minus_eur
FROM sme_by_currency AS czk
CROSS JOIN sme_by_currency AS eur
WHERE
  czk.currency = 'CZK' AND eur.currency = 'EUR'
 -- Generated by Cortex Analyst
;","[('CZK', '25134', 'EUR', '1629', '23505')]",YES,,
1487,Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?,October 2013 refers to 201310 in the yearmonth.date,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date = '201310' AND T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(3154,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), euro_lam_customers AS (
  SELECT
    cc.customerid,
    cc.consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'LAM' AND c.currency = 'EUR' AND cc.date = '201310'
)
SELECT
  c.customerid,
  c.currency,
  c.segment,
  ecc.consumption
FROM euro_lam_customers AS ecc
LEFT OUTER JOIN __customers AS c
  ON ecc.customerid = c.customerid
ORDER BY
  ecc.consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('3154', 'EUR', 'LAM', '12654.46')]",YES,,
1488,Who among KAM's customers consumed the most? How much did it consume?,,simple,"SELECT T2.CustomerID, SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T2.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[(12459, 16130041.82)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), kam_consumption AS (
  SELECT
    cc.customerid,
    c.segment,
    SUM(cc.consumption) AS total_consumption,
    MIN(cc.date) AS start_date,
    MAX(cc.date) AS end_date
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'KAM'
  GROUP BY
    cc.customerid,
    c.segment
)
SELECT
  customerid,
  segment,
  start_date,
  end_date,
  total_consumption
FROM kam_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('12459', 'KAM', '201201', '201311', '16130041.82')]",YES,,
1489,How much did the KAM customers consume in total in May 2013?,May 2013 refers to yearmonth.date = 201305,simple,SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201305' AND T1.Segment = 'KAM',"[(136224462.01,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT
  SUM(cc.consumption) AS total_consumption
FROM __customer_consumption AS cc
LEFT OUTER JOIN __customers AS c
  ON cc.customerid = c.customerid
WHERE
  c.segment = 'KAM' AND cc.date = '201305'
 -- Generated by Cortex Analyst
;","[('136224462.01',)]",YES,,
1490,How many percent of LAM customer consumed more than 46.73?,Percentage of LAM customer consumed more than 46.73 = (Total no. of LAM customers who consumed more than 46.73 / Total no. of LAM customers) * 100.,moderate,"SELECT CAST(SUM(IIF(T2.Consumption > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'","[(98.5267932135058,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), customer_total_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'LAM'
  GROUP BY
    cc.customerid
), high_consumers AS (
  SELECT
    COUNT(DISTINCT customerid) AS high_consumption_count
  FROM customer_total_consumption
  WHERE
    total_consumption > 46.73
), total_customers AS (
  SELECT
    COUNT(DISTINCT customerid) AS total_count
  FROM __customers
  WHERE
    segment = 'LAM'
)
SELECT
  CAST(high_consumption_count AS FLOAT) / NULLIF(total_count, 0) AS percentage
FROM high_consumers
CROSS JOIN total_customers
 -- Generated by Cortex Analyst
;","[('0.9838709677419355',)]",NO,,
1491,"Which country has more ""value for money"" gas stations? Please give a total number of ""value for money"" gas stations in each country.",,simple,"SELECT Country , ( SELECT COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' ) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY COUNT(GasStationID) DESC LIMIT 1","[('CZE', 597)]",,,NO,,
1492,What percentage of KAM customers pay in euros?,Percentage of KAM uses Euro = (Total of KAM uses Euro / Total of KAM) * 100%.,simple,SELECT CAST(SUM(Currency = 'EUR') AS FLOAT) * 100 / COUNT(CustomerID) FROM customers WHERE Segment = 'KAM',"[(3.480392156862745,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), kam_customers AS (
  SELECT DISTINCT
    c.customerid,
    c.currency
  FROM __customers AS c
  WHERE
    c.segment = 'KAM'
)
SELECT
  CAST(COUNT(CASE WHEN currency = 'EUR' THEN customerid END) AS FLOAT) / NULLIF(NULLIF(COUNT(customerid), 0), 0) AS euro_percentage
FROM kam_customers
 -- Generated by Cortex Analyst
;","[('0.034803921568627452',)]",NO,,
1493,"In February 2012, what percentage of customers consumed more than 528.3?",February 2012 refers to '201202' in yearmonth.date; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,"SELECT CAST(SUM(IIF(Consumption > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'","[(66.62300807683911,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), total_customers AS (
  SELECT
    COUNT(DISTINCT cc.customerid) AS total_count
  FROM __customer_consumption AS cc
  WHERE
    cc.date = '201202'
), high_consumers AS (
  SELECT
    COUNT(DISTINCT cc.customerid) AS high_count
  FROM __customer_consumption AS cc
  WHERE
    cc.date = '201202' AND cc.consumption > 528.3
)
SELECT
  (
    CAST(high_count AS FLOAT) / NULLIF(total_count, 0)
  ) AS percentage
FROM total_customers, high_consumers
 -- Generated by Cortex Analyst
;","[('0.66623008076839119',)]",NO,,
1494,What percentage of Slovakian gas stations are premium?,Percentage of premium gas station = (Total of premium gas station in Slovakia / Total of gas station in Slovakia) * 100%.,simple,"SELECT CAST(SUM(IIF(Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK'","[(35.68181818181818,)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid,
    segment
  FROM debit_card_specializing.public.gasstations
), slovakia_stations AS (
  SELECT
    gasstationid,
    segment
  FROM __gasstations
  WHERE
    country = 'Slovakia'
)
SELECT
  CASE
    WHEN COUNT(*) = 0
    THEN NULL
    ELSE CAST(SUM(CASE WHEN segment = 'Premium' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(COUNT(*), 0)
  END AS premium_station_percentage
FROM slovakia_stations
 -- Generated by Cortex Analyst
;","[(None,)]",NO,,
1495,Which client ID consumed the most in September 2013?,September 2013 refers to yearmonth.date = '201309',simple,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(12459,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  cc.customerid,
  cc.consumption
FROM __customer_consumption AS cc
WHERE
  cc.date = '201309'
ORDER BY
  cc.consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('12459', '1830161.05')]",YES,,
1496,Which client segment consumed the least in September 2013?,September 2013 refers to yearmonth.date = '201309',simple,SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[('KAM',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), segment_consumption AS (
  SELECT
    c.segment,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date = '201309'
  GROUP BY
    c.segment
)
SELECT
  segment,
  total_consumption
FROM segment_consumption
ORDER BY
  total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('LAM', '120091351.67')]",NO,,
1497,Which SME customer consumed the least in June 2012?,June 2012 refers to yearmonth.date = '201206',simple,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' AND T1.Segment = 'SME' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[(27338,)]","WITH __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), sme_consumption AS (
  SELECT
    cc.customerid,
    cc.consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date = '201206' AND c.segment = 'SME'
)
SELECT
  sc.customerid,
  c.segment,
  sc.consumption
FROM sme_consumption AS sc
LEFT OUTER JOIN __customers AS c
  ON sc.customerid = c.customerid
ORDER BY
  sc.consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('27338', 'SME', '-5087.62')]",YES,,
1498,What is the highest monthly consumption in the year 2012?,The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,"SELECT SUM(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' GROUP BY SUBSTR(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1","[(51787161.74,)]","WITH __customer_consumption AS (
  SELECT
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  SUBSTRING(cc.date, 1, 4) AS year,
  SUBSTRING(cc.date, 5, 2) AS month,
  SUM(cc.consumption) AS monthly_consumption
FROM __customer_consumption AS cc
WHERE
  SUBSTRING(cc.date, 1, 4) = '2012'
GROUP BY
  cc.date
ORDER BY
  monthly_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('2012', '03', '51787161.74')]",YES,,
1499,What is the biggest monthly consumption of the customers who use euro as their currency?,Monthly consumption = SUM(consumption) / 12,simple,SELECT SUM(T2.Consumption) / 12 AS MonthlyConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY MonthlyConsumption DESC LIMIT 1,"[(85002.47333333333,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_total_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) / NULLIF(12, 0) AS monthly_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR'
  GROUP BY
    cc.customerid
)
SELECT
  MIN(cc.date) AS start_date,
  MAX(cc.date) AS end_date,
  MAX(ctc.monthly_consumption) AS max_monthly_consumption
FROM __customer_consumption AS cc
JOIN customer_total_consumption AS ctc
  ON cc.customerid = ctc.customerid
 -- Generated by Cortex Analyst
;","[('201112', '201311', '85002.47333333')]",NO,,
1500,"Please list the product description of the products consumed in September, 2013.",September 2013 refers to 201309; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',"[('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Nafta',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Autoprísluš.',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Diesel',), ('Diesel',), ('Diesel aditiv',), ('Nafta',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Autokozmetik',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Umývanie voz',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Prev.náplne',), ('Diesel',), ('Diesel',), ('Diesel',), ('Prev.náplne',), ('Umývanie voz',), ('Diesel',), ('Nat.Super',), ('Umývanie voz',), ('Diesel',), ('Diesel aditiv',), ('Diesel',), ('Prev.náplne',), ('Diesel',), ('Diesel',), ('Diesel',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Autoprísluš.',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural Spec',), ('Natural +',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Autoprísluš.',), ('Natural',), ('Mytí vozidel',), ('Natural +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nemrz.kapal.',), ('Autokosmet.',), ('Natural',), ('Autokosmet.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Autokosmet.',), ('Nafta Plus',), ('Autoprísluš.',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural Plus',), ('Natural Plus',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel +',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Oleje,tuky',), ('Additivum',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Autokosmet.',), ('Nafta',), ('Dalnic.popl.',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Dalnic.popl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Provoz.nápl.',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Zpr.nakupu',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta Plus',), ('Diesel +',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Zpr.nakupu',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Autoprísluš.',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Autokosmet.',), ('Natural Plus',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel +',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Provoz.nápl.',), ('Knihy,nov.',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Potraviny',), ('Nafta Plus',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Autoprísluš.',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural +',), ('Diesel +',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Natural Plus',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('LPG',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Nafta',), ('Nafta',), ('Obcerstvení',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural Plus',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Potraviny',), ('Zboží nesp.',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta Plus',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Diesel +',), ('Natural',), ('Nafta',), ('Mytí vozidel',), ('Nafta Plus',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Potraviny',), ('Diesel +',), ('Potraviny',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nat.Super',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Mytí vozidel',), ('Zpr.nakupu',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Autokosmet.',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Diesel +',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('LPG',), ('Diesel',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel',), ('Natural',), ('Natural',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Dalnic.popl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural',), ('Nafta',), ('Natural',), ('Diesel +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Autokosmet.',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('LPG',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Diesel',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Obcerstvení',), ('Zboží nesp.',), ('Nafta',), ('LPG',), ('Diesel',), ('Diesel',), ('Diesel aditiv',), ('Umývanie voz',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Nafta',)]","WITH __transactions_1k AS (
  SELECT
    productid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
)
SELECT DISTINCT
  p.description
FROM __transactions_1k AS t
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
WHERE
  DATE_TRUNC('MONTH', t.date) = '2013-09-01'
ORDER BY
  p.description DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,
1501,"Please list the countries of the gas stations with transactions taken place in June, 2013.",June 2013 refers to '201306'; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month;,moderate,SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date = '201306',"[('SVK',), ('CZE',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  g.country
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  DATE_PART('YEAR', t.date) = 2013 AND DATE_PART('MONTH', t.date) = 6
ORDER BY
  g.country DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,
1502,Please list the chains of the gas stations with transactions in euro.,,simple,SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR',"[(77,), (246,), (35,), (4,), (130,), (98,), (61,), (70,), (76,), (219,)]","WITH __gasstations AS (
  SELECT
    chainid,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    customerid,
    gasstationid
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), euro_transactions AS (
  SELECT DISTINCT
    t.gasstationid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __customers AS c
    ON t.customerid = c.customerid
  WHERE
    c.currency = 'EUR'
)
SELECT DISTINCT
  g.chainid
FROM euro_transactions AS et
LEFT OUTER JOIN __gasstations AS g
  ON et.gasstationid = g.gasstationid
ORDER BY
  g.chainid DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('246',), ('219',), ('130',), ('98',), ('77',), ('76',), ('70',), ('61',), ('35',), ('4',)]",YES,,
1503,Please list the product description of the products bought in transactions in euro.,,simple,"SELECT DISTINCT T1.ProductID, T3.Description FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'EUR'","[(317, 'Diesel'), (322, 'Nat.Super'), (2, 'Nafta'), (332, 'Diesel aditiv'), (352, 'Autokozmetik'), (341, 'Umývanie voz'), (336, 'Prev.náplne')]","WITH __transactions_1k AS (
  SELECT
    customerid,
    productid
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
)
SELECT DISTINCT
  p.description
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
WHERE
  c.currency = 'EUR'
ORDER BY
  p.description
 -- Generated by Cortex Analyst
;","[('Autokozmetik',), ('Diesel',), ('Diesel aditiv',), ('Nafta',), ('Nat.Super',), ('Prev.náplne',), ('Umývanie voz',)]",NO,,
1504,"What is the average total price of the transactions taken place in January, 2012?","In January, 2012 means Date contains '2012-01'",simple,SELECT AVG(Amount) FROM transactions_1k WHERE Date LIKE '2012-01%',"[(None,)]","WITH __transactions_1k AS (
  SELECT
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
)
SELECT
  AVG(price) AS average_transaction_price
FROM __transactions_1k
WHERE
  DATE_TRUNC('MONTH', date) = '2012-01-01' AND price > 0
 -- Generated by Cortex Analyst
;","[(None,)]",YES,,
1505,"Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",Pays in euro = Currency = 'EUR'.,simple,SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000.00,"[(2730,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), high_consumption_customers AS (
  SELECT DISTINCT
    cc.customerid
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR' AND cc.consumption > 1000
)
SELECT
  COUNT(*) AS customer_count
FROM high_consumption_customers
 -- Generated by Cortex Analyst
;","[('391',)]",NO,,
1506,Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.,Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; ,moderate,SELECT DISTINCT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE',"[('Nafta',), ('Diesel +',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural Spec',), ('Natural',), ('Autokosmet.',), ('Mytí vozidel',), ('Autoprísluš.',), ('Obcerstvení',), ('Zboží nesp.',), ('Natural Plus',), ('Knihy,nov.',), ('LPG',), ('Nafta Plus',), ('Natural +',), ('Oleje,tuky',), ('Potraviny',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Additivum',)]","WITH __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
), __transactions_1k AS (
  SELECT
    gasstationid,
    productid
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), cze_transactions AS (
  SELECT DISTINCT
    t.productid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __gasstations AS g
    ON t.gasstationid = g.gasstationid
  WHERE
    g.country = 'CZE'
)
SELECT DISTINCT
  p.description
FROM cze_transactions AS ct
LEFT OUTER JOIN __products AS p
  ON ct.productid = p.productid
ORDER BY
  p.description
 -- Generated by Cortex Analyst
;","[('Additivum',), ('Autokosmet.',), ('Autoprísluš.',), ('Dalnic.popl.',), ('Diesel +',), ('Knihy,nov.',), ('LPG',), ('Mytí vozidel',), ('Nafta',), ('Nafta Plus',), ('Natural',), ('Natural +',), ('Natural Plus',), ('Natural Spec',), ('Nemrz.kapal.',), ('Obcerstvení',), ('Oleje,tuky',), ('Potraviny',), ('Provoz.nápl.',), ('Zboží nesp.',), ('Zpr.nakupu',)]",YES,,
1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,"[('11:55:00',), ('14:29:00',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    chainid,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  t.time
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.chainid = 11
ORDER BY
  t.time DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('52140.000000000',), ('42900.000000000',)]",NO,,
1508,How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?,Gas station in the Czech Republic implies that Country = 'CZE',simple,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000,"[(56,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS high_value_transactions
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.price > 1000 AND t.price > 0 AND t.amount > 0
 -- Generated by Cortex Analyst
;","[('56',)]",YES,,
1509,"Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",Czech Republic can be represented as the Country value in the gasstations table is 'CZE',moderate,"SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND STRFTIME('%Y', T1.Date) >= '2012'","[(933,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.date > '2012-01-01'
 -- Generated by Cortex Analyst
;","[('933',)]",YES,,
1510,What is the average total price of the transactions taken place in gas stations in the Czech Republic?,Gas station in the Czech Republic implies that Country = 'CZE',simple,SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE',"[(453.15031082529475,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  AVG(t.price) AS avg_transaction_price
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.price > 0
 -- Generated by Cortex Analyst
;","[('453.15031083',)]",NO,,
1511,"For the customers who paid in the euro, what is their average total price of the transactions?",,simple,SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR',"[(23.189848484848483,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT
  c.currency,
  AVG(t.price) AS avg_transaction_value,
  MIN(t.date) AS start_date,
  MAX(t.date) AS end_date
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  c.currency = 'EUR'
GROUP BY
  c.currency
 -- Generated by Cortex Analyst
;","[('EUR', '23.18984848', '15576', '15577')]",NO,,
1512,Which customer paid the most in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1,"[(19182,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT
  t.customerid,
  c.segment,
  SUM(t.price) AS total_spending
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-25'
GROUP BY
  t.customerid,
  c.segment
ORDER BY
  total_spending DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('19182', 'KAM', '6287.70')]",YES,,
1513,Which country's gas station had the first paid cusomer in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' ORDER BY T1.Time DESC LIMIT 1,"[('CZE',)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    time,
    price
  FROM debit_card_specializing.public.transactions_1k
), first_transaction AS (
  SELECT
    t.gasstationid,
    t.date,
    t.time
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25' AND t.price > 0
  ORDER BY
    t.time ASC
  LIMIT 1
)
SELECT
  g.country,
  ft.date,
  ft.time
FROM first_transaction AS ft
LEFT OUTER JOIN __gasstations AS g
  ON ft.gasstationid = g.gasstationid
 -- Generated by Cortex Analyst
;","[('CZE', '15577', '420.000000000')]",YES,,
1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,'2012/8/24' can be represented by '2012-08-24'; ,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',"[('CZK',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  c.currency
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-24' AND t.time = '16:25:00'
 -- Generated by Cortex Analyst
;","[('CZK',)]",YES,,
1515,What segment did the customer have at 2012/8/23 21:20:00?,'2012/8/23' can be represented by '2012-08-23',simple,SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.date = '2012-08-23' AND T1.time = '21:20:00',"[('KAM',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  c.segment
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-23' AND t.time = '21:20:00'
 -- Generated by Cortex Analyst
;","[('KAM',)]",YES,,
1516,How many transactions were paid in CZK in the morning of 2012/8/26?,'2012/8/26' can be represented by '2012-08-26'; The morning refers to the time before '13:00:00',moderate,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time < '13:00:00' AND T2.Currency = 'CZK',"[(68,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    transactionid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  c.currency = 'CZK' AND t.date = '2012-08-26' AND t.time < '13:00:00'
 -- Generated by Cortex Analyst
;","[('68',)]",YES,,
1517,"For the earliest customer, what segment did he/she have?",,simple,SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY Date ASC LIMIT 1,"[('KAM',)]","WITH __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), earliest_customer AS (
  SELECT
    customerid
  FROM __transactions_1k
  ORDER BY
    date ASC,
    time ASC
  LIMIT 1
)
SELECT
  c.segment
FROM earliest_customer AS ec
JOIN __customers AS c
  ON ec.customerid = c.customerid
 -- Generated by Cortex Analyst
;","[('KAM',)]",YES,,
1518,"For the deal happened at 2012/8/24 12:42:00, which country was it?",'2012/8/24 12:42:00' can refer to date = '2012-08-24' AND T1.time = '12:42:00' in the database,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00',"[('CZE',), ('CZE',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  g.country
FROM __transactions_1k AS t1
LEFT OUTER JOIN __gasstations AS g
  ON t1.gasstationid = g.gasstationid
WHERE
  t1.date = '2012-08-24' AND t1.time = '12:42:00'
 -- Generated by Cortex Analyst
;","[('CZE',), ('CZE',)]",YES,,
1519,What was the product id of the transaction happened at 2012/8/23 21:20:00?,'2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database,simple,SELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00',"[(2,)]","WITH __transactions_1k AS (
  SELECT
    productid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
)
SELECT
  T1.productid
FROM __transactions_1k AS T1
WHERE
  T1.date = '2012-08-23' AND T1.time = '21:20:00'
 -- Generated by Cortex Analyst
;","[('2',)]",YES,,
1520,"For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",'2012/8/24' can be represented by '2012-08-24'; expense and the consumption has the similar meaning.,moderate,"SELECT T1.CustomerID, T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND T2.Date = '201201'","[(40333, 201201, 4084.9), (7630, 201201, 24953.81)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), target_customer AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-24' AND t.price = 124.05
)
SELECT
  t.date,
  t.price
FROM __transactions_1k AS t
INNER JOIN target_customer AS tc
  ON t.customerid = tc.customerid
WHERE
  DATE_TRUNC('MONTH', t.date) = '2012-01-01'
ORDER BY
  t.date DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,
1521,"For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; '2012/8/26' can be represented by '2012-08-26'; during 8:00-9:00 can be represented as Time BETWEEN '08:00:00' AND '09:00:00',moderate,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE',"[(14,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE'
  AND t.date = '2012-08-26'
  AND t.time BETWEEN '08:00:00' AND '09:00:00'
 -- Generated by Cortex Analyst
;","[('14',)]",YES,,
1522,"There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",June of 2013 means Date contains '201306' in the yearmonth.date of the database,simple,SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17,"[('CZK',)]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), customer_sales AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_sales
  FROM __transactions_1k AS t
  WHERE
    DATE_PART('year', t.date) = 2013 AND DATE_PART('month', t.date) = 6
  GROUP BY
    t.customerid
  HAVING
    ABS(total_sales - 214582.17) < 0.01
)
SELECT DISTINCT
  c.currency
FROM customer_sales AS cs
LEFT OUTER JOIN __customers AS c
  ON cs.customerid = c.customerid
 -- Generated by Cortex Analyst
;",,NO,,
1523,Which country was the card owner of No.667467 in?,,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467',"[('CZE',)]","WITH __transactions_1k AS (
  SELECT
    cardid,
    gasstationid
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  t.cardid,
  g.country
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  t.cardid = 667467
ORDER BY
  t.cardid DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('667467', 'CZE')]",YES,,
1524,What's the nationality of the customer who spent 548.4 in 2012/8/24?,'2012/8/24' can be represented by '2012-08-24',simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4,"[('CZE',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  c.currency
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-24' AND t.price = 548.4
 -- Generated by Cortex Analyst
;","[('CZK',)]",NO,,
1525,What is the percentage of the customers who used EUR in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,"SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'","[(1.6470588235294117,)]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    date
  FROM debit_card_specializing.public.transactions_1k
), customers_on_date AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25'
)
SELECT
  CAST(COUNT(CASE WHEN c.currency = 'EUR' THEN 1 END) AS FLOAT) / NULLIF(NULLIF(COUNT(*), 0), 0) AS eur_customer_percentage
FROM customers_on_date AS cd
LEFT OUTER JOIN __customers AS c
  ON cd.customerid = c.customerid
 -- Generated by Cortex Analyst
;","[('0.027027027027027029',)]",NO,,
1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",'2012/8/24' can be represented by '2012-08-24'; Consumption decrease rate = (consumption_2012 - consumption_2013) / consumption_2012,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","[(-5.815242674672346,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), target_customer AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25' AND t.price = 634.8
), yearly_consumption AS (
  SELECT
    cc.customerid,
    SUBSTRING(cc.date, 1, 4) AS year,
    SUM(cc.consumption) AS yearly_consumption
  FROM __customer_consumption AS cc
  JOIN target_customer AS tc
    ON cc.customerid = tc.customerid
  WHERE
    SUBSTRING(cc.date, 1, 4) IN ('2012', '2013')
  GROUP BY
    cc.customerid,
    SUBSTRING(cc.date, 1, 4)
)
SELECT
  y1.customerid,
  y1.yearly_consumption AS consumption_2012,
  y2.yearly_consumption AS consumption_2013,
  (
    y1.yearly_consumption - y2.yearly_consumption
  ) / NULLIF(y1.yearly_consumption, 0) AS decrease_rate
FROM yearly_consumption AS y1
JOIN yearly_consumption AS y2
  ON y1.customerid = y2.customerid AND y1.year = '2012' AND y2.year = '2013'
 -- Generated by Cortex Analyst
;","[('6718', '158447.52', '1079858.30', '-5.81524267')]",NO,,
1527,Which gas station has the highest amount of revenue?,,simple,SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price) DESC LIMIT 1,"[(4347,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    chainid,
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  t.gasstationid,
  g.country,
  g.chainid,
  MIN(t.date) AS start_date,
  MAX(t.date) AS end_date,
  SUM(t.price) AS total_revenue
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
GROUP BY
  t.gasstationid,
  g.country,
  g.chainid
ORDER BY
  total_revenue DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('4347', 'CZE', '4', '15576', '15576', '8557.94')]",YES,,
1528,"What is the percentage of ""premium"" against the overall segment in Country = ""SVK""?",,simple,"SELECT CAST(SUM(IIF(Country = 'SVK' AND Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations","[(35.68181818181818,)]","WITH __gasstations AS (
  SELECT
    country,
    segment
  FROM debit_card_specializing.public.gasstations
), station_counts AS (
  SELECT
    COUNT(CASE WHEN segment = 'premium' THEN 1 END) AS premium_count,
    COUNT(*) AS total_count
  FROM __gasstations
  WHERE
    country = 'SVK'
)
SELECT
  premium_count,
  total_count,
  CASE
    WHEN total_count > 0
    THEN CAST(premium_count AS FLOAT) / NULLIF(total_count, 0)
  END AS premium_percentage
FROM station_counts
ORDER BY
  premium_percentage DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('0', '880', '0')]",NO,,
1529,"What is the amount spent by customer ""38508"" at the gas stations? How much had the customer spent in January 2012?",January 2012 refers to the Date value = '201201',moderate,"SELECT SUM(T1.Price) , SUM(IIF(T3.Date = '201201', T1.Price, 0)) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.CustomerID = '38508'","[(68740.2, 3437.01)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), total_spend AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_amount
  FROM __transactions_1k AS t
  WHERE
    t.customerid = 38508 AND t.price > 0
  GROUP BY
    t.customerid
), jan_2012_spend AS (
  SELECT
    t.customerid,
    SUM(t.price) AS jan_2012_amount
  FROM __transactions_1k AS t
  WHERE
    t.customerid = 38508 AND t.price > 0 AND t.date = '201201'
  GROUP BY
    t.customerid
)
SELECT
  ts.customerid,
  ts.total_amount AS all_time_spend,
  COALESCE(js.jan_2012_amount, 0) AS jan_2012_spend
FROM total_spend AS ts
LEFT JOIN jan_2012_spend AS js
  ON ts.customerid = js.customerid
 -- Generated by Cortex Analyst
;","[('38508', '3437.01', '0.00')]",NO,,
1530,Which are the top five best selling products? Please state the full name of them.,Description of products contains full name,simple,SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Amount DESC LIMIT 5,"[('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',)]","WITH __transactions_1k AS (
  SELECT
    productid,
    amount
  FROM debit_card_specializing.public.transactions_1k
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
)
SELECT
  p.description,
  SUM(t.amount) AS total_quantity
FROM __transactions_1k AS t
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
WHERE
  t.amount > 0
GROUP BY
  p.productid,
  p.description
ORDER BY
  total_quantity DESC NULLS LAST
LIMIT 5
 -- Generated by Cortex Analyst
;","[('Nafta', '15230'), ('Diesel +', '1120'), ('Natural', '1045'), ('Diesel', '817'), ('Nat.Super', '539')]",NO,,
1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,average price per single item = Total(price) / Total(amount),moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency","[(12459, 203.8560787354258, 'CZK')]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), customer_totals AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_spending,
    SUM(t.amount) AS total_quantity
  FROM __transactions_1k AS t
  GROUP BY
    t.customerid
), top_customer AS (
  SELECT
    ct.customerid,
    ct.total_spending,
    ct.total_quantity,
    ct.total_spending / NULLIF(NULLIF(ct.total_quantity, 0), 0) AS avg_price_per_item
  FROM customer_totals AS ct
  ORDER BY
    total_spending DESC NULLS LAST
  LIMIT 1
)
SELECT
  tc.customerid,
  tc.total_spending,
  tc.avg_price_per_item,
  c.currency
FROM top_customer AS tc
LEFT OUTER JOIN __customers AS c
  ON tc.customerid = c.customerid
 -- Generated by Cortex Analyst
;","[('19182', '8618.54', '24.27757746', 'CZK')]",NO,,
1532,Which country had the gas station that sold the most expensive product id No.2 for one unit?,,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1,"[('CZE',)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    gasstationid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), unit_prices AS (
  SELECT
    t.gasstationid,
    t.price / NULLIF(t.amount, 0) AS unit_price
  FROM __transactions_1k AS t
  WHERE
    t.productid = 2 AND t.amount > 0 AND t.price > 0
)
SELECT
  g.country,
  MAX(up.unit_price) AS max_unit_price
FROM unit_prices AS up
LEFT OUTER JOIN __gasstations AS g
  ON up.gasstationid = g.gasstationid
GROUP BY
  g.country
ORDER BY
  max_unit_price DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('CZE', '25.17041667')]",YES,,
1533,For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.,August of 2012 refers to the Date value = '201208' ; Price per unit of product = Price / Amount;,moderate,SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208',"[(1903.2,), (88265.39,), (1129.2,), (126157.7,), (126157.7,), (58.19,), (1142.95,), (8878.07,), (69331.72,), (45937.22,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __transactions_1k AS (
  SELECT
    customerid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), high_value_customers AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.productid = 5 AND (
      t.price / NULLIF(NULLIF(t.amount, 0), 0)
    ) > 29.00
)
SELECT
  cc.customerid,
  cc.consumption
FROM __customer_consumption AS cc
INNER JOIN high_value_customers AS hvc
  ON cc.customerid = hvc.customerid
WHERE
  cc.date = '201208'
ORDER BY
  cc.consumption DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('6768', '126157.70'), ('5443', '88265.39'), ('24700', '69331.72'), ('7626', '45937.22'), ('23861', '8878.07'), ('18831', '1903.20'), ('45868', '1142.95'), ('46933', '1129.20'), ('20447', '58.19')]",NO,,
