[
  {
    "question_id": 1470,
    "question": "How many gas stations in CZE has Premium gas?",
    "evidence": "",
    "expected_sql": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'",
    "generated_sql": "SELECT COUNT(*) AS num_premium_gasstations\nFROM gasstations\nWHERE Country = 'CZE' AND Segment = 'Premium';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        1114
      ]
    ],
    "generated_result": [
      [
        1114
      ]
    ],
    "error": null,
    "execution_time": 5.266486644744873,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1471,
    "question": "What is the ratio of customers who pay in EUR against customers who pay in CZK?",
    "evidence": "ratio of customers who pay in EUR against customers who pay in CZK = count(Currency = 'EUR') / count(Currency = 'CZK').",
    "expected_sql": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(Currency = 'CZK', 1, 0)) AS ratio FROM customers",
    "generated_sql": "SELECT \n  CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS FLOAT) /\n  NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS eur_to_czk_ratio\nFROM customers;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        0.06572769953051644
      ]
    ],
    "generated_result": [
      [
        0.06572769953051644
      ]
    ],
    "error": null,
    "execution_time": 7.635226249694824,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1472,
    "question": "In 2012, who had the least consumption in LAM?",
    "evidence": "Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year.",
    "expected_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "generated_sql": "SELECT y.CustomerID, SUM(y.Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM'\n  AND y.Date BETWEEN 201201 AND 201212\nGROUP BY y.CustomerID\nORDER BY TotalConsumption ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        47273
      ]
    ],
    "generated_result": [
      [
        47273,
        0.74
      ]
    ],
    "error": null,
    "execution_time": 9.144290924072266,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1473,
    "question": "What was the average monthly consumption of customers in SME for the year 2013?",
    "evidence": "Average Monthly consumption = AVG(Consumption) / 12; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.",
    "expected_sql": "SELECT AVG(T2.Consumption) / 12 FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'",
    "generated_sql": "SELECT AVG(y.Consumption) / 12 AS avg_monthly_consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'SME'\n  AND y.Date BETWEEN 201301 AND 201312;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        459.9562642870894
      ]
    ],
    "generated_result": [
      [
        459.9562642870894
      ]
    ],
    "error": null,
    "execution_time": 10.655342102050781,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1474,
    "question": "Which customers, paying in CZK, consumed the most gas in 2011?",
    "evidence": "Year 2011 can be presented as Between 201101 And 201112, which means between January and December in 2011",
    "expected_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT\n  c.CustomerID,\n  SUM(y.Consumption) AS TotalConsumption\nFROM\n  customers c\n  JOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE\n  c.Currency = 'CZK'\n  AND y.Date BETWEEN 201101 AND 201112\nGROUP BY\n  c.CustomerID\nORDER BY\n  TotalConsumption DESC;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        603
      ]
    ],
    "generated_result": [
      [
        603,
        1938.78
      ],
      [
        1492,
        1430.07
      ],
      [
        1757,
        78.98
      ]
    ],
    "error": null,
    "execution_time": 7.568908452987671,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1475,
    "question": "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "evidence": "Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012",
    "expected_sql": "SELECT COUNT(*) FROM ( SELECT T2.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND SUBSTRING(T2.Date, 1, 4) = '2012' GROUP BY T2.CustomerID HAVING SUM(T2.Consumption) < 30000 ) AS t1",
    "generated_sql": "SELECT COUNT(DISTINCT c.CustomerID) AS num_customers\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'KAM'\n  AND y.Date BETWEEN 201201 AND 201212\nGROUP BY c.CustomerID\nHAVING SUM(y.Consumption) < 30000;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        1123
      ]
    ],
    "generated_result": [
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ],
      [
        1
      ]
    ],
    "error": null,
    "execution_time": 8.432368278503418,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1476,
    "question": "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "evidence": "Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year; Difference in Consumption = CZK customers consumption in 2012 - EUR customers consumption in 2012",
    "expected_sql": "SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'",
    "generated_sql": "SELECT\n    SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) -\n    SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS Consumption_Difference\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE y.Date BETWEEN 201201 AND 201212;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        402524570.17
      ]
    ],
    "generated_result": [
      [
        402524570.17
      ]
    ],
    "error": null,
    "execution_time": 8.720071077346802,
    "difficulty": "challenging",
    "sql_execution_error": null
  },
  {
    "question_id": 1477,
    "question": "Which year recorded the most gas use paid in EUR?",
    "evidence": "",
    "expected_sql": "SELECT SUBSTRING(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY SUBSTRING(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT \n    SUBSTR(t.Date, 1, 4) AS Year,\n    SUM(t.Amount) AS TotalGasAmount\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nJOIN \n    products p ON t.ProductID = p.ProductID\nWHERE \n    c.Currency = 'EUR'\n    AND LOWER(p.Description) LIKE '%diesel%' OR LOWER(p.Description) LIKE '%adblue%' -- assuming these are gas products\nGROUP BY \n    Year\nORDER BY \n    TotalGasAmount DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "2013"
      ]
    ],
    "generated_result": [
      [
        "2012",
        886
      ]
    ],
    "error": null,
    "execution_time": 9.879293441772461,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1478,
    "question": "Which segment had the least consumption?",
    "evidence": "",
    "expected_sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "generated_sql": "SELECT c.Segment, SUM(y.Consumption) AS total_consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nGROUP BY c.Segment\nORDER BY total_consumption ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "LAM"
      ]
    ],
    "generated_result": [
      [
        "LAM",
        1048825700.87
      ]
    ],
    "error": null,
    "execution_time": 8.736536741256714,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1479,
    "question": "Which year recorded the most consumption of gas paid in CZK?",
    "evidence": "The first 4 strings of the Date values in the yearmonth table can represent year.",
    "expected_sql": "SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT \n    SUBSTR(y.Date, 1, 4) AS Year,\n    SUM(y.Consumption) AS TotalConsumption\nFROM \n    yearmonth y\nJOIN \n    customers c ON y.CustomerID = c.CustomerID\nWHERE \n    c.Currency = 'CZK'\nGROUP BY \n    Year\nORDER BY \n    TotalConsumption DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "2013"
      ]
    ],
    "generated_result": [
      [
        "2013",
        2992757755.72
      ]
    ],
    "error": null,
    "execution_time": 12.369951486587524,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1480,
    "question": "What was the gas consumption peak month for SME customers in 2013?",
    "evidence": "Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.",
    "expected_sql": "SELECT SUBSTR(T2.Date, 5, 2) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTR(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT \n    ym.Date,\n    SUM(ym.Consumption) AS total_consumption\nFROM \n    yearmonth ym\nJOIN \n    customers c ON ym.CustomerID = c.CustomerID\nWHERE \n    c.Segment = 'SME'\n    AND ym.Date BETWEEN 201301 AND 201312\nGROUP BY \n    ym.Date\nORDER BY \n    total_consumption DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "04"
      ]
    ],
    "generated_result": [
      [
        201304,
        126047776.92
      ]
    ],
    "error": null,
    "execution_time": 10.268172264099121,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1481,
    "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "evidence": "annual average consumption of customer with the lowest consumption in each segment = total consumption per year / the number of customer with lowest consumption in each segment; Difference in annual average = SME's annual average - LAM's annual average; Difference in annual average = LAM's annual average - KAM's annual average; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.",
    "expected_sql": "SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",
    "generated_sql": "WITH czk_customers AS (\n  SELECT c.CustomerID, c.Segment\n  FROM customers c\n  WHERE c.Currency = 'CZK'\n),\nconsumption_2013 AS (\n  SELECT y.CustomerID, y.Date, y.Consumption\n  FROM yearmonth y\n  WHERE y.Date BETWEEN 201301 AND 201312\n),\nsegment_consumption AS (\n  SELECT\n    cc.Segment,\n    cc.CustomerID,\n    SUM(c13.Consumption) AS total_consumption_2013\n  FROM czk_customers cc\n  JOIN consumption_2013 c13 ON cc.CustomerID = c13.CustomerID\n  GROUP BY cc.Segment, cc.CustomerID\n),\nleast_consumption_per_segment AS (\n  SELECT\n    sc.Segment,\n    sc.CustomerID,\n    sc.total_consumption_2013\n  FROM segment_consumption sc\n  JOIN (\n    SELECT Segment, MIN(total_consumption_2013) AS min_consumption\n    FROM segment_consumption\n    GROUP BY Segment\n  ) min_sc\n    ON sc.Segment = min_sc.Segment AND sc.total_consumption_2013 = min_sc.min_consumption\n),\nannual_avg_per_segment AS (\n  SELECT\n    Segment,\n    SUM(total_consumption_2013) * 1.0 / COUNT(CustomerID) AS annual_avg_consumption\n  FROM least_consumption_per_segment\n  GROUP BY Segment\n),\ndiffs AS (\n  SELECT\n    MAX(CASE WHEN Segment = 'SME' THEN annual_avg_consumption END) AS SME,\n    MAX(CASE WHEN Segment = 'LAM' THEN annual_avg_consumption END) AS LAM,\n    MAX(CASE WHEN Segment = 'KAM' THEN annual_avg_consumption END) AS KAM\n  FROM annual_avg_per_segment\n)\nSELECT\n  SME - LAM AS SME_minus_LAM,\n  LAM - KAM AS LAM_minus_KAM,\n  KAM - SME AS KAM_minus_SME\nFROM diffs;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        0.0,
        582092.86,
        -582092.86
      ]
    ],
    "generated_result": [
      [
        -14009.339999999998,
        6046.619999999999,
        7962.719999999999
      ]
    ],
    "error": null,
    "execution_time": 27.887219429016113,
    "difficulty": "challenging",
    "sql_execution_error": null
  },
  {
    "question_id": 1482,
    "question": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "evidence": "Increase or Decrease = consumption for 2013 - consumption for 2012; Percentage of Increase = (Increase or Decrease / consumption for 2013) * 100%; The first 4 strings of the Date values in the yearmonth table can represent year",
    "expected_sql": "SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",
    "generated_sql": "SELECT\n  c.Segment,\n  SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END) AS Consumption_2012,\n  SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) AS Consumption_2013,\n  (SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) -\n   SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END)) AS Increase,\n  CASE \n    WHEN SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) = 0 THEN NULL\n    ELSE \n      100.0 * (SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) -\n               SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END))\n      / SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END)\n  END AS Percentage_Increase\nFROM\n  yearmonth ym\n  JOIN customers c ON ym.CustomerID = c.CustomerID\nWHERE\n  c.Segment IN ('SME', 'LAM', 'KAM')\n  AND c.Currency = 'EUR'\nGROUP BY\n  c.Segment\nORDER BY\n  Percentage_Increase DESC;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        545.4018999790969,
        681.5824574939339,
        708.1124062978664
      ]
    ],
    "generated_result": [
      [
        "SME",
        869537.52,
        7258151.96,
        6388614.4399999995,
        88.01984961472203
      ],
      [
        "KAM",
        646663.61,
        4224041.47,
        3577377.86,
        84.69087923040681
      ],
      [
        "LAM",
        676212.68,
        4326606.13,
        3650393.4499999997,
        84.37082878168067
      ]
    ],
    "error": null,
    "execution_time": 22.907588720321655,
    "difficulty": "challenging",
    "sql_execution_error": null
  },
  {
    "question_id": 1483,
    "question": "How much did customer 6 consume in total between August and November 2013?",
    "evidence": "Between August And November 2013 refers to Between 201308 And 201311; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.",
    "expected_sql": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311'",
    "generated_sql": "SELECT SUM(Consumption) AS TotalConsumption\nFROM yearmonth\nWHERE CustomerID = 6\n  AND Date BETWEEN 201308 AND 201311;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        1224.96
      ]
    ],
    "generated_result": [
      [
        1224.96
      ]
    ],
    "error": null,
    "execution_time": 5.854827404022217,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1484,
    "question": "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "evidence": "Czech Republic can be represented as the Country value in gasstations table is 'CZE'; Slovakia can be represented as the Country value in the gasstations table is 'SVK';  Computation of more \"discount\" gas stations= Total no. of discount gas stations in Czech Republic - Total no. of discount gas stations in Slovakia",
    "expected_sql": "SELECT SUM(IIF(Country = 'CZE', 1, 0)) - SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations WHERE Segment = 'Discount'",
    "generated_sql": "SELECT \n  COALESCE(SUM(CASE WHEN Country = 'CZE' AND Segment = 'Discount' THEN 1 ELSE 0 END),0)\n  - \n  COALESCE(SUM(CASE WHEN Country = 'SVK' AND Segment = 'Discount' THEN 1 ELSE 0 END),0)\n  AS discount_gas_station_difference\nFROM gasstations;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        176
      ]
    ],
    "generated_result": [
      [
        176
      ]
    ],
    "error": null,
    "execution_time": 7.554602384567261,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1485,
    "question": "How much more was customer 7 consuming in April 2013 than customer 5?",
    "evidence": "April 2013 refers to 201304 in the yearmonth.date",
    "expected_sql": "SELECT SUM(IIF(CustomerID = 7, Consumption, 0)) - SUM(IIF(CustomerID = 5, Consumption, 0)) FROM yearmonth WHERE Date = '201304'",
    "generated_sql": "SELECT\n  (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = 201304) -\n  (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = 201304) AS ConsumptionDifference;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        540.51
      ]
    ],
    "generated_result": [
      [
        540.51
      ]
    ],
    "error": null,
    "execution_time": 6.800715923309326,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1486,
    "question": "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "evidence": "Amount of more SMEs = Total of SMEs pay using Currency CZK - Total of SMEs pay using Currency EUR",
    "expected_sql": "SELECT SUM(Currency = 'CZK') - SUM(Currency = 'EUR') FROM customers WHERE Segment = 'SME'",
    "generated_sql": "SELECT \n  (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) -\n   SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END)) AS SME_CZK_minus_EUR\nFROM (\n  SELECT DISTINCT CustomerID, Currency\n  FROM customers\n  WHERE Segment = 'SME'\n) t;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        23505
      ]
    ],
    "generated_result": [
      [
        23505
      ]
    ],
    "error": null,
    "execution_time": 7.860085964202881,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1487,
    "question": "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "evidence": "October 2013 refers to 201310 in the yearmonth.date",
    "expected_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date = '201310' AND T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT c.CustomerID, y.Consumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'LAM'\n  AND c.Currency = 'EUR'\n  AND y.Date = 201310\nORDER BY y.Consumption DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        3154
      ]
    ],
    "generated_result": [
      [
        3154,
        12654.46
      ]
    ],
    "error": null,
    "execution_time": 7.642904996871948,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1488,
    "question": "Who among KAM's customers consumed the most? How much did it consume?",
    "evidence": "",
    "expected_sql": "SELECT T2.CustomerID, SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T2.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nWHERE c.Segment = 'KAM'\nGROUP BY c.CustomerID\nORDER BY TotalConsumption DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        12459,
        16130041.82
      ]
    ],
    "generated_result": [
      [
        12459,
        16130041.82
      ]
    ],
    "error": null,
    "execution_time": 8.73976731300354,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1489,
    "question": "How much did the KAM customers consume in total in May 2013?",
    "evidence": "May 2013 refers to yearmonth.date = 201305",
    "expected_sql": "SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201305' AND T1.Segment = 'KAM'",
    "generated_sql": "SELECT SUM(y.Consumption) AS total_consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'KAM'\n  AND y.Date = 201305;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        136224462.01
      ]
    ],
    "generated_result": [
      [
        136224462.01
      ]
    ],
    "error": null,
    "execution_time": 6.11597752571106,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1490,
    "question": "How many percent of LAM customer consumed more than 46.73?",
    "evidence": "Percentage of LAM customer consumed more than 46.73 = (Total no. of LAM customers who consumed more than 46.73 / Total no. of LAM customers) * 100.",
    "expected_sql": "SELECT CAST(SUM(IIF(T2.Consumption > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'",
    "generated_sql": "SELECT \n  ROUND(\n    100.0 * COUNT(DISTINCT CASE WHEN y.Consumption > 46.73 THEN y.CustomerID END)\n    / NULLIF(COUNT(DISTINCT y.CustomerID), 0), 2\n  ) AS percent_lam_customers_over_46_73\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Segment = 'LAM';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        98.5267932135058
      ]
    ],
    "generated_result": [
      [
        99.53
      ]
    ],
    "error": null,
    "execution_time": 14.711734533309937,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1491,
    "question": "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "evidence": "",
    "expected_sql": "SELECT Country , ( SELECT COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' ) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY COUNT(GasStationID) DESC LIMIT 1",
    "generated_sql": "SELECT\n  Country,\n  COUNT(*) AS value_for_money_gasstations\nFROM\n  gasstations\nWHERE\n  Segment = 'Value for money'\nGROUP BY\n  Country\nORDER BY\n  value_for_money_gasstations DESC;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "CZE",
        597
      ]
    ],
    "generated_result": [
      [
        "CZE",
        466
      ],
      [
        "SVK",
        131
      ]
    ],
    "error": null,
    "execution_time": 5.776946544647217,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1492,
    "question": "What percentage of KAM customers pay in euros?",
    "evidence": "Percentage of KAM uses Euro = (Total of KAM uses Euro / Total of KAM) * 100%.",
    "expected_sql": "SELECT CAST(SUM(Currency = 'EUR') AS FLOAT) * 100 / COUNT(CustomerID) FROM customers WHERE Segment = 'KAM'",
    "generated_sql": "SELECT \n  100.0 * COUNT(*) FILTER (WHERE Currency = 'EUR') / COUNT(*) AS percentage_kam_euro\nFROM customers\nWHERE Segment = 'KAM';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        3.480392156862745
      ]
    ],
    "generated_result": [
      [
        3.480392156862745
      ]
    ],
    "error": null,
    "execution_time": 7.473076820373535,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1493,
    "question": "In February 2012, what percentage of customers consumed more than 528.3?",
    "evidence": "February 2012 refers to '201202' in yearmonth.date; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.",
    "expected_sql": "SELECT CAST(SUM(IIF(Consumption > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'",
    "generated_sql": "SELECT \n  ROUND(100.0 * COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) / COUNT(*), 2) AS percentage_customers_over_528_3\nFROM yearmonth\nWHERE Date = 201202;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        66.62300807683911
      ]
    ],
    "generated_result": [
      [
        66.62
      ]
    ],
    "error": null,
    "execution_time": 8.194974660873413,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1494,
    "question": "What percentage of Slovakian gas stations are premium?",
    "evidence": "Percentage of premium gas station = (Total of premium gas station in Slovakia / Total of gas station in Slovakia) * 100%.",
    "expected_sql": "SELECT CAST(SUM(IIF(Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK'",
    "generated_sql": "SELECT \n  ROUND(\n    100.0 * SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) / COUNT(*), \n    2\n  ) AS percentage_premium\nFROM gasstations\nWHERE Country = 'SVK';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        35.68181818181818
      ]
    ],
    "generated_result": [
      [
        35.68
      ]
    ],
    "error": null,
    "execution_time": 7.704447984695435,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1495,
    "question": "Which client ID consumed the most in September 2013?",
    "evidence": "September 2013 refers to yearmonth.date = '201309'",
    "expected_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT CustomerID\nFROM yearmonth\nWHERE Date = 201309\nORDER BY Consumption DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        12459
      ]
    ],
    "generated_result": [
      [
        12459
      ]
    ],
    "error": null,
    "execution_time": 5.789556503295898,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1496,
    "question": "Which client segment consumed the least in September 2013?",
    "evidence": "September 2013 refers to yearmonth.date = '201309'",
    "expected_sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "generated_sql": "SELECT c.Segment, SUM(y.Consumption) AS TotalConsumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE y.Date = 201309\nGROUP BY c.Segment\nORDER BY TotalConsumption ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "KAM"
      ]
    ],
    "generated_result": [
      [
        "LAM",
        120091351.67
      ]
    ],
    "error": null,
    "execution_time": 8.332165241241455,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1497,
    "question": "Which SME customer consumed the least in June 2012?",
    "evidence": "June 2012 refers to yearmonth.date = '201206'",
    "expected_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' AND T1.Segment = 'SME' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",
    "generated_sql": "SELECT y.CustomerID, y.Consumption\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE y.Date = 201206\n  AND c.Segment = 'SME'\nORDER BY y.Consumption ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        27338
      ]
    ],
    "generated_result": [
      [
        27338,
        -5087.62
      ]
    ],
    "error": null,
    "execution_time": 7.273284435272217,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1498,
    "question": "What is the highest monthly consumption in the year 2012?",
    "evidence": "The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.",
    "expected_sql": "SELECT SUM(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' GROUP BY SUBSTR(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1",
    "generated_sql": "SELECT MAX(Consumption) AS HighestMonthlyConsumption\nFROM yearmonth\nWHERE SUBSTR(CAST(Date AS TEXT), 1, 4) = '2012';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        51787161.74
      ]
    ],
    "generated_result": [
      [
        445279.69
      ]
    ],
    "error": null,
    "execution_time": 6.119361639022827,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1499,
    "question": "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "evidence": "Monthly consumption = SUM(consumption) / 12",
    "expected_sql": "SELECT SUM(T2.Consumption) / 12 AS MonthlyConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY MonthlyConsumption DESC LIMIT 1",
    "generated_sql": "SELECT MAX(monthly_consumption) AS biggest_monthly_consumption\nFROM (\n  SELECT SUM(y.Consumption) / 12 AS monthly_consumption\n  FROM yearmonth y\n  JOIN customers c ON y.CustomerID = c.CustomerID\n  WHERE c.Currency = 'EUR'\n  GROUP BY y.CustomerID\n) subquery;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        85002.47333333333
      ]
    ],
    "generated_result": [
      [
        85002.47333333333
      ]
    ],
    "error": null,
    "execution_time": 9.78299593925476,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1500,
    "question": "Please list the product description of the products consumed in September, 2013.",
    "evidence": "September 2013 refers to 201309; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.",
    "expected_sql": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309'",
    "generated_sql": "SELECT DISTINCT p.Description\nFROM yearmonth y\nJOIN transactions_1k t ON y.CustomerID = t.CustomerID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE y.Date = 201309;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Autoprísluš."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel aditiv"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nat.Super"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nat.Super"
      ],
      [
        "Autokozmetik"
      ],
      [
        "Nat.Super"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Prev.náplne"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Prev.náplne"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel aditiv"
      ],
      [
        "Diesel"
      ],
      [
        "Prev.náplne"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural Spec"
      ],
      [
        "Natural +"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural +"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Autokosmet."
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Nafta Plus"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural Plus"
      ],
      [
        "Natural Plus"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Additivum"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Autokosmet."
      ],
      [
        "Nafta"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural Spec"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Diesel +"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Autoprísluš."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Natural Plus"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Knihy,nov."
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Potraviny"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Natural Spec"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural +"
      ],
      [
        "Diesel +"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural Plus"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "LPG"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Obcerstvení"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural Plus"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Potraviny"
      ],
      [
        "Zboží nesp."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Diesel +"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Potraviny"
      ],
      [
        "Diesel +"
      ],
      [
        "Potraviny"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural Spec"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Diesel +"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "LPG"
      ],
      [
        "Diesel"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Autokosmet."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "LPG"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Diesel"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Natural"
      ],
      [
        "Diesel +"
      ],
      [
        "Obcerstvení"
      ],
      [
        "Zboží nesp."
      ],
      [
        "Nafta"
      ],
      [
        "LPG"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel"
      ],
      [
        "Diesel aditiv"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Nafta"
      ],
      [
        "Natural"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nafta"
      ]
    ],
    "generated_result": [
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nafta"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Autoprísluš."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Diesel aditiv"
      ],
      [
        "Autokozmetik"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Prev.náplne"
      ],
      [
        "Natural"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Diesel +"
      ],
      [
        "Natural Spec"
      ],
      [
        "Natural +"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Autokosmet."
      ],
      [
        "Natural Plus"
      ],
      [
        "Additivum"
      ],
      [
        "Knihy,nov."
      ],
      [
        "Potraviny"
      ],
      [
        "LPG"
      ],
      [
        "Obcerstvení"
      ],
      [
        "Zboží nesp."
      ]
    ],
    "error": null,
    "execution_time": 6.72544264793396,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1501,
    "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "evidence": "June 2013 refers to '201306'; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month;",
    "expected_sql": "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date = '201306'",
    "generated_sql": "SELECT DISTINCT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE strftime('%Y%m', t.Date) = '201306';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "SVK"
      ],
      [
        "CZE"
      ]
    ],
    "generated_result": [],
    "error": null,
    "execution_time": 7.122207164764404,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1502,
    "question": "Please list the chains of the gas stations with transactions in euro.",
    "evidence": "",
    "expected_sql": "SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR'",
    "generated_sql": "SELECT DISTINCT g.ChainID\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE c.Currency = 'EUR';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        77
      ],
      [
        246
      ],
      [
        35
      ],
      [
        4
      ],
      [
        130
      ],
      [
        98
      ],
      [
        61
      ],
      [
        70
      ],
      [
        76
      ],
      [
        219
      ]
    ],
    "generated_result": [
      [
        77
      ],
      [
        246
      ],
      [
        35
      ],
      [
        4
      ],
      [
        130
      ],
      [
        98
      ],
      [
        61
      ],
      [
        70
      ],
      [
        76
      ],
      [
        219
      ]
    ],
    "error": null,
    "execution_time": 6.309061765670776,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1503,
    "question": "Please list the product description of the products bought in transactions in euro.",
    "evidence": "",
    "expected_sql": "SELECT DISTINCT T1.ProductID, T3.Description FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'EUR'",
    "generated_sql": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE c.Currency = 'EUR';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        317,
        "Diesel"
      ],
      [
        322,
        "Nat.Super"
      ],
      [
        2,
        "Nafta"
      ],
      [
        332,
        "Diesel aditiv"
      ],
      [
        352,
        "Autokozmetik"
      ],
      [
        341,
        "Umývanie voz"
      ],
      [
        336,
        "Prev.náplne"
      ]
    ],
    "generated_result": [
      [
        "Diesel"
      ],
      [
        "Nat.Super"
      ],
      [
        "Nafta"
      ],
      [
        "Diesel aditiv"
      ],
      [
        "Autokozmetik"
      ],
      [
        "Umývanie voz"
      ],
      [
        "Prev.náplne"
      ]
    ],
    "error": null,
    "execution_time": 5.943422794342041,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1504,
    "question": "What is the average total price of the transactions taken place in January, 2012?",
    "evidence": "In January, 2012 means Date contains '2012-01'",
    "expected_sql": "SELECT AVG(Amount) FROM transactions_1k WHERE Date LIKE '2012-01%'",
    "generated_sql": "SELECT AVG(Price) AS avg_total_price\nFROM transactions_1k\nWHERE Date LIKE '2012-01%';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        null
      ]
    ],
    "generated_result": [
      [
        null
      ]
    ],
    "error": null,
    "execution_time": 6.070929765701294,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1505,
    "question": "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "evidence": "Pays in euro = Currency = 'EUR'.",
    "expected_sql": "SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000.00",
    "generated_sql": "SELECT COUNT(DISTINCT y.CustomerID)\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE c.Currency = 'EUR'\n  AND y.Consumption > 1000;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        2730
      ]
    ],
    "generated_result": [
      [
        391
      ]
    ],
    "error": null,
    "execution_time": 10.783899545669556,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1506,
    "question": "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "evidence": "Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; ",
    "expected_sql": "SELECT DISTINCT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE'",
    "generated_sql": "SELECT DISTINCT p.Description\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nJOIN products p ON t.ProductID = p.ProductID\nWHERE g.Country = 'CZE';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Natural Spec"
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Obcerstvení"
      ],
      [
        "Zboží nesp."
      ],
      [
        "Natural Plus"
      ],
      [
        "Knihy,nov."
      ],
      [
        "LPG"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Natural +"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Potraviny"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Additivum"
      ]
    ],
    "generated_result": [
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Provoz.nápl."
      ],
      [
        "Nemrz.kapal."
      ],
      [
        "Natural Spec"
      ],
      [
        "Natural"
      ],
      [
        "Autokosmet."
      ],
      [
        "Mytí vozidel"
      ],
      [
        "Autoprísluš."
      ],
      [
        "Obcerstvení"
      ],
      [
        "Zboží nesp."
      ],
      [
        "Natural Plus"
      ],
      [
        "Knihy,nov."
      ],
      [
        "LPG"
      ],
      [
        "Nafta Plus"
      ],
      [
        "Natural +"
      ],
      [
        "Oleje,tuky"
      ],
      [
        "Potraviny"
      ],
      [
        "Dalnic.popl."
      ],
      [
        "Zpr.nakupu"
      ],
      [
        "Additivum"
      ]
    ],
    "error": null,
    "execution_time": 6.523758888244629,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1507,
    "question": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "evidence": "",
    "expected_sql": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11",
    "generated_sql": "SELECT DISTINCT t.Time\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.ChainID = 11\nORDER BY t.Time;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "11:55:00"
      ],
      [
        "14:29:00"
      ]
    ],
    "generated_result": [
      [
        "11:55:00"
      ],
      [
        "14:29:00"
      ]
    ],
    "error": null,
    "execution_time": 5.492316007614136,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1508,
    "question": "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "evidence": "Gas station in the Czech Republic implies that Country = 'CZE'",
    "expected_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000",
    "generated_sql": "SELECT COUNT(*) AS num_transactions\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Price > 1000;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        56
      ]
    ],
    "generated_result": [
      [
        56
      ]
    ],
    "error": null,
    "execution_time": 6.453100919723511,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1509,
    "question": "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "evidence": "Czech Republic can be represented as the Country value in the gasstations table is 'CZE'",
    "expected_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND STRFTIME('%Y', T1.Date) >= '2012'",
    "generated_sql": "SELECT COUNT(*) AS num_transactions\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE'\n  AND t.Date > '2012-01-01';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        933
      ]
    ],
    "generated_result": [
      [
        933
      ]
    ],
    "error": null,
    "execution_time": 6.392024993896484,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1510,
    "question": "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "evidence": "Gas station in the Czech Republic implies that Country = 'CZE'",
    "expected_sql": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'",
    "generated_sql": "SELECT AVG(t.Price) AS avg_total_price\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE g.Country = 'CZE';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        453.15031082529475
      ]
    ],
    "generated_result": [
      [
        453.15031082529475
      ]
    ],
    "error": null,
    "execution_time": 5.646511793136597,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1511,
    "question": "For the customers who paid in the euro, what is their average total price of the transactions?",
    "evidence": "",
    "expected_sql": "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR'",
    "generated_sql": "SELECT AVG(total_price) AS avg_total_price_eur\nFROM (\n  SELECT t.CustomerID, SUM(t.Price) AS total_price\n  FROM transactions_1k t\n  JOIN customers c ON t.CustomerID = c.CustomerID\n  WHERE c.Currency = 'EUR'\n  GROUP BY t.CustomerID\n) sub;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        23.189848484848483
      ]
    ],
    "generated_result": [
      [
        36.44119047619048
      ]
    ],
    "error": null,
    "execution_time": 6.779312372207642,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1512,
    "question": "Which customer paid the most in 2012/8/25?",
    "evidence": "'2012/8/25' can be represented by '2012-08-25'",
    "expected_sql": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
    "generated_sql": "SELECT t.CustomerID, SUM(t.Price) AS TotalPaid\nFROM transactions_1k t\nWHERE t.Date = '2012-08-25'\nGROUP BY t.CustomerID\nORDER BY TotalPaid DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        19182
      ]
    ],
    "generated_result": [
      [
        19182,
        6287.7
      ]
    ],
    "error": null,
    "execution_time": 6.25213623046875,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1513,
    "question": "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "evidence": "'2012/8/25' can be represented by '2012-08-25'",
    "expected_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' ORDER BY T1.Time DESC LIMIT 1",
    "generated_sql": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-25'\nORDER BY t.Time ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "CZE"
      ]
    ],
    "generated_result": [
      [
        "CZE"
      ]
    ],
    "error": null,
    "execution_time": 6.6451802253723145,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1514,
    "question": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "evidence": "'2012/8/24' can be represented by '2012-08-24'; ",
    "expected_sql": "SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00'",
    "generated_sql": "SELECT c.Currency\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-24'\n  AND t.Time = '16:25:00';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "CZK"
      ]
    ],
    "generated_result": [
      [
        "CZK"
      ],
      [
        "CZK"
      ],
      [
        "CZK"
      ]
    ],
    "error": null,
    "execution_time": 6.108840703964233,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1515,
    "question": "What segment did the customer have at 2012/8/23 21:20:00?",
    "evidence": "'2012/8/23' can be represented by '2012-08-23'",
    "expected_sql": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.date = '2012-08-23' AND T1.time = '21:20:00'",
    "generated_sql": "SELECT c.Segment\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-23'\n  AND t.Time = '21:20:00'\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "KAM"
      ]
    ],
    "generated_result": [
      [
        "KAM"
      ]
    ],
    "error": null,
    "execution_time": 6.8822245597839355,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1516,
    "question": "How many transactions were paid in CZK in the morning of 2012/8/26?",
    "evidence": "'2012/8/26' can be represented by '2012-08-26'; The morning refers to the time before '13:00:00'",
    "expected_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time < '13:00:00' AND T2.Currency = 'CZK'",
    "generated_sql": "SELECT COUNT(*) AS num_transactions\nFROM transactions_1k t\nJOIN customers c ON t.CustomerID = c.CustomerID\nWHERE t.Date = '2012-08-26'\n  AND t.Time < '13:00:00'\n  AND c.Currency = 'CZK';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        68
      ]
    ],
    "generated_result": [
      [
        68
      ]
    ],
    "error": null,
    "execution_time": 8.514449834823608,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1517,
    "question": "For the earliest customer, what segment did he/she have?",
    "evidence": "",
    "expected_sql": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY Date ASC LIMIT 1",
    "generated_sql": "SELECT c.Segment\nFROM customers c\nJOIN yearmonth y ON c.CustomerID = y.CustomerID\nORDER BY y.Date ASC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "KAM"
      ]
    ],
    "generated_result": [
      [
        "KAM"
      ]
    ],
    "error": null,
    "execution_time": 6.069633483886719,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1518,
    "question": "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "evidence": "'2012/8/24 12:42:00' can refer to date = '2012-08-24' AND T1.time = '12:42:00' in the database",
    "expected_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'",
    "generated_sql": "SELECT G.Country\nFROM transactions_1k T\nJOIN gasstations G ON T.GasStationID = G.GasStationID\nWHERE T.Date = '2012-08-24' AND T.Time = '12:42:00';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "CZE"
      ],
      [
        "CZE"
      ]
    ],
    "generated_result": [
      [
        "CZE"
      ],
      [
        "CZE"
      ]
    ],
    "error": null,
    "execution_time": 6.346797704696655,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1519,
    "question": "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "evidence": "'2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database",
    "expected_sql": "SELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'",
    "generated_sql": "SELECT ProductID\nFROM transactions_1k\nWHERE Date = '2012-08-23' AND Time = '21:20:00';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        2
      ]
    ],
    "generated_result": [
      [
        2
      ]
    ],
    "error": null,
    "execution_time": 5.147916793823242,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1520,
    "question": "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "evidence": "'2012/8/24' can be represented by '2012-08-24'; expense and the consumption has the similar meaning.",
    "expected_sql": "SELECT T1.CustomerID, T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND T2.Date = '201201'",
    "generated_sql": "SELECT y.Date, y.Consumption\nFROM yearmonth y\nWHERE y.CustomerID = (\n    SELECT t.CustomerID\n    FROM transactions_1k t\n    WHERE t.Date = '2012-08-24' AND t.Price = 124.05\n    LIMIT 1\n)\nAND y.Date = 201201;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        40333,
        201201,
        4084.9
      ],
      [
        7630,
        201201,
        24953.81
      ]
    ],
    "generated_result": [
      [
        201201,
        4084.9
      ]
    ],
    "error": null,
    "execution_time": 8.276762008666992,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1521,
    "question": "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "evidence": "Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; '2012/8/26' can be represented by '2012-08-26'; during 8:00-9:00 can be represented as Time BETWEEN '08:00:00' AND '09:00:00'",
    "expected_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE'",
    "generated_sql": "SELECT COUNT(*) AS transaction_count\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-26'\n  AND t.Time BETWEEN '08:00:00' AND '09:00:00'\n  AND g.Country = 'CZE';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        14
      ]
    ],
    "generated_result": [
      [
        14
      ]
    ],
    "error": null,
    "execution_time": 7.119604110717773,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1522,
    "question": "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "evidence": "June of 2013 means Date contains '201306' in the yearmonth.date of the database",
    "expected_sql": "SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17",
    "generated_sql": "SELECT c.Currency\nFROM yearmonth y\nJOIN customers c ON y.CustomerID = c.CustomerID\nWHERE y.Date = 201306 AND y.Consumption = 214582.17;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "CZK"
      ]
    ],
    "generated_result": [
      [
        "CZK"
      ]
    ],
    "error": null,
    "execution_time": 6.370872974395752,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1523,
    "question": "Which country was the card owner of No.667467 in?",
    "evidence": "",
    "expected_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467'",
    "generated_sql": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.CardID = 667467\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "CZE"
      ]
    ],
    "generated_result": [
      [
        "CZE"
      ]
    ],
    "error": null,
    "execution_time": 5.5456483364105225,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1524,
    "question": "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "evidence": "'2012/8/24' can be represented by '2012-08-24'",
    "expected_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4",
    "generated_sql": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.Date = '2012-08-24'\n  AND t.Price = 548.4\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        "CZE"
      ]
    ],
    "generated_result": [
      [
        "CZE"
      ]
    ],
    "error": null,
    "execution_time": 6.157339572906494,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1525,
    "question": "What is the percentage of the customers who used EUR in 2012/8/25?",
    "evidence": "'2012/8/25' can be represented by '2012-08-25'",
    "expected_sql": "SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'",
    "generated_sql": "SELECT \n  100.0 * COUNT(DISTINCT c.CustomerID) / \n    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') AS eur_percentage\nFROM \n  transactions_1k t\n  JOIN customers c ON t.CustomerID = c.CustomerID\nWHERE \n  t.Date = '2012-08-25'\n  AND c.Currency = 'EUR';",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        1.6470588235294117
      ]
    ],
    "generated_result": [
      [
        2.7027027027027026
      ]
    ],
    "error": null,
    "execution_time": 12.590508699417114,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1526,
    "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "evidence": "'2012/8/24' can be represented by '2012-08-24'; Consumption decrease rate = (consumption_2012 - consumption_2013) / consumption_2012",
    "expected_sql": "SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",
    "generated_sql": "WITH target_customer AS (\n  SELECT CustomerID\n  FROM transactions_1k\n  WHERE Date = '2012-08-25' AND Price = 634.8\n  LIMIT 1\n),\nconsumption_2012 AS (\n  SELECT Consumption\n  FROM yearmonth\n  WHERE CustomerID = (SELECT CustomerID FROM target_customer)\n    AND CAST(SUBSTR(CAST(Date AS TEXT), 1, 4) AS INTEGER) = 2012\n),\nconsumption_2013 AS (\n  SELECT Consumption\n  FROM yearmonth\n  WHERE CustomerID = (SELECT CustomerID FROM target_customer)\n    AND CAST(SUBSTR(CAST(Date AS TEXT), 1, 4) AS INTEGER) = 2013\n)\nSELECT\n  ( ( (SELECT SUM(Consumption) FROM consumption_2012) - (SELECT SUM(Consumption) FROM consumption_2013) )\n    / NULLIF((SELECT SUM(Consumption) FROM consumption_2012), 0) ) AS consumption_decrease_rate;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        -5.815242674672346
      ]
    ],
    "generated_result": [
      [
        -5.815242674672346
      ]
    ],
    "error": null,
    "execution_time": 17.417073011398315,
    "difficulty": "challenging",
    "sql_execution_error": null
  },
  {
    "question_id": 1527,
    "question": "Which gas station has the highest amount of revenue?",
    "evidence": "",
    "expected_sql": "SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price) DESC LIMIT 1",
    "generated_sql": "SELECT \n    t.GasStationID,\n    SUM(t.Price) AS TotalRevenue\nFROM \n    transactions_1k t\nGROUP BY \n    t.GasStationID\nORDER BY \n    TotalRevenue DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        4347
      ]
    ],
    "generated_result": [
      [
        4347,
        8557.94
      ]
    ],
    "error": null,
    "execution_time": 6.814961910247803,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1528,
    "question": "What is the percentage of \"premium\" against the overall segment in Country = \"SVK\"?",
    "evidence": "",
    "expected_sql": "SELECT CAST(SUM(IIF(Country = 'SVK' AND Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations",
    "generated_sql": "SELECT\n  100.0 * COUNT(CASE WHEN LOWER(g.Segment) = 'premium' THEN 1 END) / COUNT(*) AS premium_percentage\nFROM\n  gasstations g\nWHERE\n  g.Country = 'SVK';",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        35.68181818181818
      ]
    ],
    "generated_result": [
      [
        35.68181818181818
      ]
    ],
    "error": null,
    "execution_time": 7.147870302200317,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1529,
    "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "evidence": "January 2012 refers to the Date value = '201201'",
    "expected_sql": "SELECT SUM(T1.Price) , SUM(IIF(T3.Date = '201201', T1.Price, 0)) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.CustomerID = '38508'",
    "generated_sql": "SELECT \n    SUM(Price) AS Total_Amount_Spent, \n    SUM(CASE WHEN strftime('%Y%m', Date) = '201201' THEN Price ELSE 0 END) AS Amount_Spent_Jan_2012\nFROM transactions_1k\nWHERE CustomerID = 38508;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        68740.2,
        3437.01
      ]
    ],
    "generated_result": [
      [
        3437.01,
        0
      ]
    ],
    "error": null,
    "execution_time": 11.147539377212524,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1530,
    "question": "Which are the top five best selling products? Please state the full name of them.",
    "evidence": "Description of products contains full name",
    "expected_sql": "SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Amount DESC LIMIT 5",
    "generated_sql": "SELECT p.Description, SUM(t.Amount) AS TotalSold\nFROM transactions_1k t\nJOIN products p ON t.ProductID = p.ProductID\nGROUP BY p.Description\nORDER BY TotalSold DESC\nLIMIT 5;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "Nafta"
      ],
      [
        "Diesel +"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ],
      [
        "Nafta"
      ]
    ],
    "generated_result": [
      [
        "Nafta",
        15230
      ],
      [
        "Diesel +",
        1120
      ],
      [
        "Natural",
        1045
      ],
      [
        "Diesel",
        817
      ],
      [
        "Nat.Super",
        539
      ]
    ],
    "error": null,
    "execution_time": 7.22667932510376,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1531,
    "question": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "evidence": "average price per single item = Total(price) / Total(amount)",
    "expected_sql": "SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",
    "generated_sql": "SELECT \n    t.CustomerID,\n    c.Currency,\n    SUM(t.Price) AS Total_Spent,\n    SUM(t.Price) / SUM(t.Amount) AS Avg_Price_Per_Item\nFROM \n    transactions_1k t\nJOIN \n    customers c ON t.CustomerID = c.CustomerID\nGROUP BY \n    t.CustomerID, c.Currency\nORDER BY \n    Total_Spent DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        12459,
        203.8560787354258,
        "CZK"
      ]
    ],
    "generated_result": [
      [
        19182,
        "CZK",
        8618.54,
        24.277577464788735
      ]
    ],
    "error": null,
    "execution_time": 11.284634828567505,
    "difficulty": "moderate",
    "sql_execution_error": null
  },
  {
    "question_id": 1532,
    "question": "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "evidence": "",
    "expected_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1",
    "generated_sql": "SELECT g.Country\nFROM transactions_1k t\nJOIN gasstations g ON t.GasStationID = g.GasStationID\nWHERE t.ProductID = 2 AND t.Amount = 1\nORDER BY t.Price DESC\nLIMIT 1;",
    "exact_match": false,
    "result_match": false,
    "expected_result": [
      [
        "CZE"
      ]
    ],
    "generated_result": [],
    "error": null,
    "execution_time": 7.238395929336548,
    "difficulty": "simple",
    "sql_execution_error": null
  },
  {
    "question_id": 1533,
    "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "evidence": "August of 2012 refers to the Date value = '201208' ; Price per unit of product = Price / Amount;",
    "expected_sql": "SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208'",
    "generated_sql": "SELECT\n  t.CustomerID,\n  y.Consumption\nFROM\n  transactions_1k t\nJOIN\n  yearmonth y\n    ON t.CustomerID = y.CustomerID\n    AND y.Date = 201208\nWHERE\n  t.ProductID = 5\n  AND t.Amount > 0\n  AND (t.Price / t.Amount) > 29.00;",
    "exact_match": false,
    "result_match": true,
    "expected_result": [
      [
        1903.2
      ],
      [
        88265.39
      ],
      [
        1129.2
      ],
      [
        126157.7
      ],
      [
        126157.7
      ],
      [
        58.19
      ],
      [
        1142.95
      ],
      [
        8878.07
      ],
      [
        69331.72
      ],
      [
        45937.22
      ]
    ],
    "generated_result": [
      [
        18831,
        1903.2
      ],
      [
        5443,
        88265.39
      ],
      [
        46933,
        1129.2
      ],
      [
        6768,
        126157.7
      ],
      [
        6768,
        126157.7
      ],
      [
        20447,
        58.19
      ],
      [
        45868,
        1142.95
      ],
      [
        23861,
        8878.07
      ],
      [
        24700,
        69331.72
      ],
      [
        7626,
        45937.22
      ]
    ],
    "error": null,
    "execution_time": 10.467385530471802,
    "difficulty": "moderate",
    "sql_execution_error": null
  }
]