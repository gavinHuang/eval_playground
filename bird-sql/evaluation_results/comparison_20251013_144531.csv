question_id,question,evidence,difficulty,expected_sql,expected_result,Cortex_Analyst_sql,Cortex_Analyst_result,Cortex_Analyst_match,Cortex_Analyst_error,Cortex_Analyst_sql_exec_error,LangChain_Agent_sql,LangChain_Agent_result,LangChain_Agent_match,LangChain_Agent_error,LangChain_Agent_sql_exec_error,Vanilla_Text2SQL_sql,Vanilla_Text2SQL_result,Vanilla_Text2SQL_match,Vanilla_Text2SQL_error,Agentar_Scale_SQL_sql,Agentar_Scale_SQL_result,Agentar_Scale_SQL_match,Agentar_Scale_SQL_error,Agentar_Scale_SQL_sql_exec_error
1470,How many gas stations in CZE has Premium gas?,,simple,SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium',"[(1114,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
), premium_stations AS (
  SELECT DISTINCT
    t.gasstationid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __gasstations AS g
    ON t.gasstationid = g.gasstationid
  LEFT OUTER JOIN __products AS p
    ON t.productid = p.productid
  WHERE
    g.country = 'CZE'
    AND LOWER(p.description) LIKE '%premium%'
    AND t.price > 0
    AND t.amount > 0
)
SELECT
  COUNT(*) AS premium_station_count
FROM premium_stations
 -- Generated by Cortex Analyst
;","[('0',)]",NO,,,"SELECT COUNT(DISTINCT g.GasStationID) AS station_count
FROM gasstations g
JOIN transactions_1k t ON g.GasStationID = t.GasStationID
JOIN products p ON t.ProductID = p.ProductID
WHERE p.Description LIKE '%Premium%' AND g.Country = 'CZE'","[(0,)]",NO,,,"SELECT COUNT(DISTINCT gs.GasStationID)
FROM gasstations gs
JOIN transactions_1k t ON gs.GasStationID = t.GasStationID
JOIN products p ON t.ProductID = p.ProductID
WHERE gs.Country = 'CZE' AND p.Description = 'Premium';","[(0,)]",NO,,"SELECT COUNT(*) AS num_premium_gasstations
FROM gasstations
WHERE Country = 'CZE' AND Segment = 'Premium';","[(1114,)]",YES,,
1471,What is the ratio of customers who pay in EUR against customers who pay in CZK?,ratio of customers who pay in EUR against customers who pay in CZK = count(Currency = 'EUR') / count(Currency = 'CZK').,simple,"SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS FLOAT) / SUM(IIF(Currency = 'CZK', 1, 0)) AS ratio FROM customers","[(0.06572769953051644,)]","WITH __customers AS (
  SELECT
    currency
  FROM debit_card_specializing.public.customers
), customer_counts AS (
  SELECT
    SUM(CASE WHEN currency = 'EUR' THEN 1 ELSE 0 END) AS eur_count,
    SUM(CASE WHEN currency = 'CZK' THEN 1 ELSE 0 END) AS czk_count
  FROM __customers
)
SELECT
  CAST(eur_count AS FLOAT) / NULLIF(NULLIF(czk_count, 0), 0) AS eur_to_czk_ratio
FROM customer_counts
 -- Generated by Cortex Analyst
;","[('0.065727699530516437',)]",YES,,,SELECT CAST(COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) AS FLOAT) / COUNT(CASE WHEN Currency = 'CZK' THEN 1 END) AS eur_to_czk_ratio FROM customers;,"[(0.06572769953051644,)]",YES,,,"SELECT 
  CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) /
  NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS eur_to_czk_ratio
FROM customers;","[(0.06572769953051644,)]",YES,,"SELECT 
  CAST(SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS FLOAT) /
  NULLIF(SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END), 0) AS eur_to_czk_ratio
FROM customers;","[(0.06572769953051644,)]",YES,,
1472,"In 2012, who had the least consumption in LAM?",Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1","[(47273,)]","WITH __customers AS (
  SELECT
    customerid
  FROM debit_card_specializing.public.customers
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), customer_2012_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  WHERE
    cc.date BETWEEN '201201' AND '201212'
  GROUP BY
    cc.customerid
)
SELECT
  c.customerid,
  c2c.total_consumption
FROM customer_2012_consumption AS c2c
LEFT OUTER JOIN __customers AS c
  ON c2c.customerid = c.customerid
ORDER BY
  c2c.total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('38175', '-6630.31')]",NO,,,"SELECT c.CustomerID, c.Segment, y.Consumption, y.Date FROM customers c JOIN yearmonth y ON c.CustomerID = y.CustomerID WHERE c.Segment = 'LAM' AND substr(y.Date, 1, 4) = '2012' ORDER BY y.Consumption ASC LIMIT 1;","[(7653, 'LAM', -1651.79, 201201)]",NO,,,"SELECT c.CustomerID, y.Consumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'LAM' AND y.Date BETWEEN 201201 AND 201212
ORDER BY y.Consumption ASC
LIMIT 1;","[(7653, -1651.79)]",NO,,"SELECT y.CustomerID, SUM(y.Consumption) AS TotalConsumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'LAM'
  AND y.Date BETWEEN 201201 AND 201212
GROUP BY y.CustomerID
ORDER BY TotalConsumption ASC
LIMIT 1;","[(47273, 0.74)]",YES,,
1473,What was the average monthly consumption of customers in SME for the year 2013?,Average Monthly consumption = AVG(Consumption) / 12; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT AVG(T2.Consumption) / 12 FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME'","[(459.9562642870894,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'SME' AND cc.date BETWEEN '201301' AND '201312'
  GROUP BY
    cc.customerid
)
SELECT
  AVG(total_consumption / NULLIF(12, 0)) AS avg_monthly_consumption
FROM yearly_consumption
 -- Generated by Cortex Analyst
;","[('3682.644352346506',)]",NO,,,"SELECT AVG(Consumption)/12 AS avg_monthly_consumption_2013
FROM yearmonth
WHERE substr(Date,1,4) = '2013'
AND CustomerID IN (SELECT CustomerID FROM customers WHERE Segment = 'SME')","[(459.9562642870894,)]",YES,,,"SELECT AVG(Consumption) / 12 AS avg_monthly_consumption
FROM yearmonth
JOIN customers ON yearmonth.CustomerID = customers.CustomerID
WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN 201301 AND 201312;","[(459.9562642870894,)]",YES,,"SELECT AVG(y.Consumption) / 12 AS avg_monthly_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'SME'
  AND y.Date BETWEEN 201301 AND 201312;","[(459.9562642870894,)]",YES,,
1474,"Which customers, paying in CZK, consumed the most gas in 2011?","Year 2011 can be presented as Between 201101 And 201112, which means between January and December in 2011",moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(603,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_consumption_2011 AS (
  SELECT
    cc.customerid,
    c.currency,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date BETWEEN '201101' AND '201112' AND c.currency = 'CZK'
  GROUP BY
    cc.customerid,
    c.currency
)
SELECT
  cc.customerid,
  cc.currency,
  cc.total_consumption
FROM customer_consumption_2011 AS cc
ORDER BY
  cc.total_consumption DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('603', 'CZK', '1938.78'), ('1492', 'CZK', '1430.07'), ('1757', 'CZK', '78.98')]",NO,,,"SELECT c.CustomerID, SUM(t.Amount) AS TotalGasAmount
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
JOIN products p ON t.ProductID = p.ProductID
WHERE c.Currency = 'CZK'
  AND (strftime('%Y%m', t.Date) >= '201101' AND strftime('%Y%m', t.Date) <= '201112')
  AND (p.Description LIKE '%Nafta%' OR p.Description LIKE '%gas%')
GROUP BY c.CustomerID
ORDER BY TotalGasAmount DESC
LIMIT 5;",,NO,,,"SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Currency = 'CZK' AND y.Date BETWEEN 201101 AND 201112
GROUP BY c.CustomerID
ORDER BY TotalConsumption DESC
LIMIT 5;","[(603, 1938.78), (1492, 1430.07), (1757, 78.98)]",NO,,"SELECT
  c.CustomerID,
  SUM(y.Consumption) AS TotalConsumption
FROM
  customers c
  JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE
  c.Currency = 'CZK'
  AND y.Date BETWEEN 201101 AND 201112
GROUP BY
  c.CustomerID
ORDER BY
  TotalConsumption DESC;","[(603, 1938.78), (1492, 1430.07), (1757, 78.98)]",NO,,
1475,"How many customers in KAM had a consumption of less than 30,000 for the year 2012?","Year 2012 can be presented as Between 201201 And 201212, which means between January and December in 2012",moderate,"SELECT COUNT(*) FROM ( SELECT T2.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND SUBSTRING(T2.Date, 1, 4) = '2012' GROUP BY T2.CustomerID HAVING SUM(T2.Consumption) < 30000 ) AS t1","[(1123,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'KAM' AND cc.date BETWEEN '201201' AND '201212'
  GROUP BY
    cc.customerid
)
SELECT
  COUNT(customerid) AS customer_count
FROM yearly_consumption
WHERE
  total_consumption < 30000
 -- Generated by Cortex Analyst
;","[('1123',)]",YES,,,SELECT COUNT(*) AS NumCustomers FROM (SELECT c.CustomerID FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID WHERE c.Segment = 'KAM' AND t.Date >= '2012-01-01' AND t.Date <= '2012-12-31' GROUP BY c.CustomerID HAVING SUM(t.Amount) < 30000);,"[(134,)]",NO,,,"SELECT COUNT(DISTINCT y.CustomerID)
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'KAM'
  AND y.Date BETWEEN 201201 AND 201212
GROUP BY y.CustomerID
HAVING SUM(y.Consumption) < 30000
LIMIT 5;","[(1,), (1,), (1,), (1,), (1,)]",NO,,"SELECT COUNT(DISTINCT c.CustomerID) AS num_customers
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'KAM'
  AND y.Date BETWEEN 201201 AND 201212
GROUP BY c.CustomerID
HAVING SUM(y.Consumption) < 30000;","[(1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,)]",NO,,
1476,What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,Year 2012 can be presented as Between 201201 And 201212; The first 4 strings of the Date values in the yearmonth table can represent year; Difference in Consumption = CZK customers consumption in 2012 - EUR customers consumption in 2012,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'","[(402524570.17,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_consumption_2012 AS (
  SELECT
    cc.customerid,
    c.currency,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    SUBSTRING(cc.date, 1, 4) = '2012' AND c.currency IN ('CZK', 'EUR')
  GROUP BY
    cc.customerid,
    c.currency
), currency_totals AS (
  SELECT
    currency,
    SUM(total_consumption) AS currency_consumption
  FROM customer_consumption_2012
  GROUP BY
    currency
)
SELECT
  SUM(
    CASE WHEN currency = 'CZK' THEN currency_consumption ELSE -currency_consumption END
  ) AS consumption_difference
FROM currency_totals
 -- Generated by Cortex Analyst
;","[('402524570.17',)]",YES,,,"SELECT (czk_consumption - eur_consumption) AS difference
FROM
    (SELECT
        (SELECT SUM(Consumption)
         FROM yearmonth
         JOIN customers ON yearmonth.CustomerID = customers.CustomerID
         WHERE customers.Currency = 'CZK'
           AND yearmonth.Date BETWEEN 201201 AND 201212) AS czk_consumption,
        (SELECT SUM(Consumption)
         FROM yearmonth
         JOIN customers ON yearmonth.CustomerID = customers.CustomerID
         WHERE customers.Currency = 'EUR'
           AND yearmonth.Date BETWEEN 201201 AND 201212) AS eur_consumption
    )","[(402524570.17,)]",YES,,,"SELECT 
  IFNULL(SUM(CASE WHEN Currency = 'CZK' THEN Consumption END), 0) 
  - IFNULL(SUM(CASE WHEN Currency = 'EUR' THEN Consumption END), 0) AS Consumption_Difference
FROM yearmonth ym
JOIN customers c ON ym.CustomerID = c.CustomerID
WHERE ym.Date BETWEEN 201201 AND 201212;","[(402524570.17,)]",YES,,"SELECT
    SUM(CASE WHEN c.Currency = 'CZK' THEN y.Consumption ELSE 0 END) -
    SUM(CASE WHEN c.Currency = 'EUR' THEN y.Consumption ELSE 0 END) AS Consumption_Difference
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date BETWEEN 201201 AND 201212;","[(402524570.17,)]",YES,,
1477,Which year recorded the most gas use paid in EUR?,,simple,"SELECT SUBSTRING(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY SUBSTRING(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('2013',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), yearly_volume AS (
  SELECT
    DATE_PART('YEAR', t.date) AS year,
    SUM(t.amount) AS total_volume
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __customers AS c
    ON t.customerid = c.customerid
  WHERE
    c.currency = 'EUR' AND t.price > 0 AND t.amount > 0
  GROUP BY
    year
)
SELECT
  year,
  total_volume
FROM yearly_volume
ORDER BY
  total_volume DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('2012', '1576')]",NO,,,"SELECT strftime('%Y', Date) AS Year, SUM(Price) AS TotalGasEUR
FROM transactions_1k
JOIN products ON transactions_1k.ProductID = products.ProductID
WHERE Description LIKE '%Nafta%' OR Description LIKE '%Special%'
GROUP BY Year
ORDER BY TotalGasEUR DESC
LIMIT 1;","[('2012', 352903.17)]",NO,,,"SELECT
  SUBSTR(t.Date, 1, 4) AS Year,
  SUM(t.Amount) AS TotalGasUse
FROM
  transactions_1k t
JOIN
  customers c ON t.CustomerID = c.CustomerID
WHERE
  c.Currency = 'EUR'
GROUP BY
  Year
ORDER BY
  TotalGasUse DESC
LIMIT 1;","[('2012', 1576)]",NO,,"SELECT 
    SUBSTR(t.Date, 1, 4) AS Year,
    SUM(t.Amount) AS TotalGasAmount
FROM 
    transactions_1k t
JOIN 
    customers c ON t.CustomerID = c.CustomerID
JOIN 
    products p ON t.ProductID = p.ProductID
WHERE 
    c.Currency = 'EUR'
    AND LOWER(p.Description) LIKE '%diesel%' OR LOWER(p.Description) LIKE '%adblue%' -- assuming these are gas products
GROUP BY 
    Year
ORDER BY 
    TotalGasAmount DESC
LIMIT 1;","[('2012', 886)]",NO,,
1478,Which segment had the least consumption?,,simple,SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[('LAM',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), customer_segment_consumption AS (
  SELECT
    c.segment,
    MIN(cc.date) AS start_date,
    MAX(cc.date) AS end_date,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  GROUP BY
    c.segment
)
SELECT
  segment,
  start_date,
  end_date,
  total_consumption
FROM customer_segment_consumption
ORDER BY
  total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('LAM', '201112', '201311', '1048825700.87')]",YES,,,"SELECT c.Segment, SUM(t.Amount) as TotalConsumption
FROM customers c
JOIN transactions_1k t ON c.CustomerID = t.CustomerID
GROUP BY c.Segment
ORDER BY TotalConsumption ASC
LIMIT 1;","[('LAM', 4482)]",YES,,,"SELECT c.Segment, SUM(y.Consumption) AS TotalConsumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
GROUP BY c.Segment
ORDER BY TotalConsumption ASC
LIMIT 1;","[('LAM', 1048825700.87)]",YES,,"SELECT c.Segment, SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
GROUP BY c.Segment
ORDER BY total_consumption ASC
LIMIT 1;","[('LAM', 1048825700.87)]",YES,,
1479,Which year recorded the most consumption of gas paid in CZK?,The first 4 strings of the Date values in the yearmonth table can represent year.,moderate,"SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('2013',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    SUBSTRING(cc.date, 1, 4) AS year,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'CZK'
  GROUP BY
    SUBSTRING(cc.date, 1, 4)
)
SELECT
  year,
  total_consumption
FROM yearly_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('2013', '2992757755.72')]",YES,,,"SELECT SUBSTR(Date, 1, 4) AS Year, SUM(Consumption) AS TotalConsumption
FROM yearmonth
GROUP BY Year
ORDER BY TotalConsumption DESC
LIMIT 1;","[('2013', 3008566555.28)]",YES,,,"SELECT
  SUBSTR(y.Date, 1, 4) AS Year,
  SUM(y.Consumption) AS TotalConsumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Currency = 'CZK'
GROUP BY Year
ORDER BY TotalConsumption DESC
LIMIT 1;","[('2013', 2992757755.72)]",YES,,"SELECT 
    SUBSTR(y.Date, 1, 4) AS Year,
    SUM(y.Consumption) AS TotalConsumption
FROM 
    yearmonth y
JOIN 
    customers c ON y.CustomerID = c.CustomerID
WHERE 
    c.Currency = 'CZK'
GROUP BY 
    Year
ORDER BY 
    TotalConsumption DESC
LIMIT 1;","[('2013', 2992757755.72)]",YES,,
1480,What was the gas consumption peak month for SME customers in 2013?,Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,moderate,"SELECT SUBSTR(T2.Date, 5, 2) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2013' AND T1.Segment = 'SME' GROUP BY SUBSTR(T2.Date, 5, 2) ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[('04',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), monthly_consumption AS (
  SELECT
    cc.date,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'SME' AND SUBSTRING(cc.date, 1, 4) = '2013'
  GROUP BY
    cc.date
)
SELECT
  date,
  total_consumption
FROM monthly_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('201304', '126047776.92')]",NO,,,"SELECT y.Date, SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'SME' AND y.Date BETWEEN 201301 AND 201312
GROUP BY y.Date
ORDER BY total_consumption DESC
LIMIT 1;","[(201304, 126047776.92)]",NO,,,"SELECT 
  y.Date,
  SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'SME'
  AND y.Date BETWEEN 201301 AND 201312
GROUP BY y.Date
ORDER BY total_consumption DESC
LIMIT 1;","[(201304, 126047776.92)]",NO,,"SELECT 
    ym.Date,
    SUM(ym.Consumption) AS total_consumption
FROM 
    yearmonth ym
JOIN 
    customers c ON ym.CustomerID = c.CustomerID
WHERE 
    c.Segment = 'SME'
    AND ym.Date BETWEEN 201301 AND 201312
GROUP BY 
    ym.Date
ORDER BY 
    total_consumption DESC
LIMIT 1;","[(201304, 126047776.92)]",NO,,
1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",annual average consumption of customer with the lowest consumption in each segment = total consumption per year / the number of customer with lowest consumption in each segment; Difference in annual average = SME's annual average - LAM's annual average; Difference in annual average = LAM's annual average - KAM's annual average; Year 2013 can be presented as Between 201301 And 201312; The first 4 strings of the Date values in the yearmonth table can represent year.,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","[(0.0, 582092.86, -582092.86)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), customer_yearly_consumption AS (
  SELECT
    cc.customerid,
    c.segment,
    c.currency,
    SUM(cc.consumption) AS yearly_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    SUBSTRING(cc.date, 1, 4) = '2013' AND c.currency = 'CZK'
  GROUP BY
    cc.customerid,
    c.segment,
    c.currency
), segment_min_consumption AS (
  SELECT
    segment,
    MIN(yearly_consumption) AS min_consumption
  FROM customer_yearly_consumption
  GROUP BY
    segment
), segment_stats AS (
  SELECT
    cyc.segment,
    smc.min_consumption,
    COUNT(cyc.customerid) AS num_customers,
    SUM(cyc.yearly_consumption) AS total_consumption
  FROM customer_yearly_consumption AS cyc
  INNER JOIN segment_min_consumption AS smc
    ON cyc.segment = smc.segment AND cyc.yearly_consumption = smc.min_consumption
  GROUP BY
    cyc.segment,
    smc.min_consumption
), segment_avg AS (
  SELECT
    segment,
    total_consumption / NULLIF(num_customers, 0) AS avg_consumption
  FROM segment_stats
)
SELECT
  'SME vs LAM' AS comparison,
  (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'SME'
  ) - (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'LAM'
  ) AS difference
UNION ALL
SELECT
  'LAM vs KAM' AS comparison,
  (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'LAM'
  ) - (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'KAM'
  ) AS difference
UNION ALL
SELECT
  'KAM vs SME' AS comparison,
  (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'KAM'
  ) - (
    SELECT
      avg_consumption
    FROM segment_avg
    WHERE
      segment = 'SME'
  ) AS difference
ORDER BY
  comparison
 -- Generated by Cortex Analyst
;","[('KAM vs SME', '7962.72000000'), ('LAM vs KAM', '6046.62000000'), ('SME vs LAM', '-14009.34000000')]",NO,,,"WITH CZK_customers AS (
  SELECT CustomerID, Segment
  FROM customers
  WHERE Currency = 'CZK' AND Segment IN ('SME', 'LAM', 'KAM')
),

Year2013 AS (
  SELECT CustomerID, Date, Consumption
  FROM yearmonth
  WHERE substr(CAST(Date AS TEXT), 1, 4) = '2013'
),

Seg_Cust_Year AS (
  SELECT c.Segment, y.CustomerID, SUM(y.Consumption) AS total_consumption
  FROM CZK_customers c
  JOIN Year2013 y ON c.CustomerID = y.CustomerID
  GROUP BY c.Segment, y.CustomerID
),

Min_Cons AS (
  SELECT Segment, MIN(total_consumption) AS min_consumption
  FROM Seg_Cust_Year
  GROUP BY Segment
),

Lowest_Customers AS (
  SELECT s.Segment, s.CustomerID, s.total_consumption
  FROM Seg_Cust_Year s
  INNER JOIN Min_Cons m ON s.Segment = m.Segment AND s.total_consumption = m.min_consumption
),

Annual_Avg AS (
  SELECT 
    Segment,
    SUM(total_consumption) AS total_segment_consumption,
    COUNT(CustomerID) AS customer_count,
    SUM(total_consumption) * 1.0 / COUNT(CustomerID) AS annual_avg_consumption
  FROM Lowest_Customers
  GROUP BY Segment
)

SELECT 
  COALESCE(MAX(CASE WHEN Segment = 'SME' THEN annual_avg_consumption END), 0) - COALESCE(MAX(CASE WHEN Segment = 'LAM' THEN annual_avg_consumption END), 0) AS SME_minus_LAM,
  COALESCE(MAX(CASE WHEN Segment = 'LAM' THEN annual_avg_consumption END), 0) - COALESCE(MAX(CASE WHEN Segment = 'KAM' THEN annual_avg_consumption END), 0) AS LAM_minus_KAM,
  COALESCE(MAX(CASE WHEN Segment = 'KAM' THEN annual_avg_consumption END), 0) - COALESCE(MAX(CASE WHEN Segment = 'SME' THEN annual_avg_consumption END), 0) AS KAM_minus_SME
FROM Annual_Avg;","[(-14009.339999999998, 6046.619999999999, 7962.719999999999)]",NO,,,"WITH filtered_customers AS (
  SELECT CustomerID, Segment
  FROM customers
  WHERE Currency = 'CZK' AND Segment IN ('SME', 'LAM', 'KAM')
),
consumption_2013 AS (
  SELECT y.CustomerID, c.Segment, SUM(y.Consumption) AS total_consumption
  FROM yearmonth y
  JOIN filtered_customers c ON y.CustomerID = c.CustomerID
  WHERE y.Date BETWEEN 201301 AND 201312
  GROUP BY y.CustomerID, c.Segment
),
least_consumption_per_segment AS (
  SELECT Segment, MIN(total_consumption) AS min_consumption
  FROM consumption_2013
  GROUP BY Segment
),
annual_avg_consumption AS (
  SELECT l.Segment, l.min_consumption / 1.0 AS annual_avg
  FROM least_consumption_per_segment l
)
SELECT
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'SME') -
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'LAM') AS SME_minus_LAM,
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'LAM') -
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'KAM') AS LAM_minus_KAM,
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'KAM') -
  (SELECT annual_avg FROM annual_avg_consumption WHERE Segment = 'SME') AS KAM_minus_SME
;","[(-14009.339999999998, 6046.619999999999, 7962.719999999999)]",NO,,"WITH czk_customers AS (
  SELECT c.CustomerID, c.Segment
  FROM customers c
  WHERE c.Currency = 'CZK'
),
consumption_2013 AS (
  SELECT y.CustomerID, y.Date, y.Consumption
  FROM yearmonth y
  WHERE y.Date BETWEEN 201301 AND 201312
),
segment_consumption AS (
  SELECT
    cc.Segment,
    cc.CustomerID,
    SUM(c13.Consumption) AS total_consumption_2013
  FROM czk_customers cc
  JOIN consumption_2013 c13 ON cc.CustomerID = c13.CustomerID
  GROUP BY cc.Segment, cc.CustomerID
),
least_consumption_per_segment AS (
  SELECT
    sc.Segment,
    sc.CustomerID,
    sc.total_consumption_2013
  FROM segment_consumption sc
  JOIN (
    SELECT Segment, MIN(total_consumption_2013) AS min_consumption
    FROM segment_consumption
    GROUP BY Segment
  ) min_sc
    ON sc.Segment = min_sc.Segment AND sc.total_consumption_2013 = min_sc.min_consumption
),
annual_avg_per_segment AS (
  SELECT
    Segment,
    SUM(total_consumption_2013) * 1.0 / COUNT(CustomerID) AS annual_avg_consumption
  FROM least_consumption_per_segment
  GROUP BY Segment
),
diffs AS (
  SELECT
    MAX(CASE WHEN Segment = 'SME' THEN annual_avg_consumption END) AS SME,
    MAX(CASE WHEN Segment = 'LAM' THEN annual_avg_consumption END) AS LAM,
    MAX(CASE WHEN Segment = 'KAM' THEN annual_avg_consumption END) AS KAM
  FROM annual_avg_per_segment
)
SELECT
  SME - LAM AS SME_minus_LAM,
  LAM - KAM AS LAM_minus_KAM,
  KAM - SME AS KAM_minus_SME
FROM diffs;","[(-14009.339999999998, 6046.619999999999, 7962.719999999999)]",NO,,
1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",Increase or Decrease = consumption for 2013 - consumption for 2012; Percentage of Increase = (Increase or Decrease / consumption for 2013) * 100%; The first 4 strings of the Date values in the yearmonth table can represent year,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID","[(545.4018999790969, 681.5824574939339, 708.1124062978664)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), yearly_consumption AS (
  SELECT
    c.segment,
    c.currency,
    SUBSTRING(cc.date, 1, 4) AS year,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR' AND SUBSTRING(cc.date, 1, 4) IN ('2012', '2013')
  GROUP BY
    c.segment,
    c.currency,
    SUBSTRING(cc.date, 1, 4)
), changes AS (
  SELECT
    segment,
    MAX(CASE WHEN year = '2013' THEN total_consumption END) AS consumption_2013,
    MAX(CASE WHEN year = '2012' THEN total_consumption END) AS consumption_2012
  FROM yearly_consumption
  GROUP BY
    segment
), final_changes AS (
  SELECT
    segment,
    consumption_2013,
    consumption_2012,
    consumption_2013 - consumption_2012 AS absolute_change,
    (
      consumption_2013 - consumption_2012
    ) / NULLIF(NULLIF(consumption_2012, 0), 0) AS pct_change
  FROM changes
  ORDER BY
    pct_change DESC NULLS LAST
)
SELECT
  segment,
  consumption_2013,
  consumption_2012,
  absolute_change,
  pct_change
FROM final_changes
WHERE
  segment IN ('SME', 'LAM', 'KAM')
 -- Generated by Cortex Analyst
;","[('SME', '7258151.96', '869537.52', '6388614.44', '7.34714063'), ('KAM', '4224041.47', '646663.61', '3577377.86', '5.53205377'), ('LAM', '4326606.13', '676212.68', '3650393.45', '5.39829192')]",NO,,,"SELECT Segment, 
       ((Consumption2013 - Consumption2012) * 100.0 / Consumption2013) AS PercentageIncrease
FROM (
  SELECT c.Segment, 
         SUM(CASE WHEN substr(ym.Date, 1, 4) = '2013' THEN ym.Consumption ELSE 0 END) AS Consumption2013,
         SUM(CASE WHEN substr(ym.Date, 1, 4) = '2012' THEN ym.Consumption ELSE 0 END) AS Consumption2012
  FROM customers c
  JOIN yearmonth ym ON c.CustomerID = ym.CustomerID
  WHERE c.Currency = 'EUR' AND c.Segment IN ('SME', 'LAM', 'KAM')
  GROUP BY c.Segment
)","[('KAM', 84.69087923040681), ('LAM', 84.37082878168067), ('SME', 88.01984961472203)]",NO,,,"SELECT
  c.Segment,
  SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END) AS consumption_2012,
  SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) AS consumption_2013,
  (SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END)) AS increase,
  CASE 
    WHEN SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) = 0 THEN NULL
    ELSE 100.0 * (SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END) - SUM(CASE WHEN ym.Date LIKE '2012%' THEN ym.Consumption ELSE 0 END)) / SUM(CASE WHEN ym.Date LIKE '2013%' THEN ym.Consumption ELSE 0 END)
  END AS percent_increase
FROM yearmonth ym
JOIN customers c ON ym.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR' AND c.Segment IN ('SME', 'LAM', 'KAM')
GROUP BY c.Segment
ORDER BY percent_increase DESC
LIMIT 5;","[('SME', 869537.52, 7258151.96, 6388614.4399999995, 88.01984961472203), ('KAM', 646663.61, 4224041.47, 3577377.86, 84.69087923040681), ('LAM', 676212.68, 4326606.13, 3650393.4499999997, 84.37082878168067)]",NO,,"SELECT
  c.Segment,
  SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END) AS Consumption_2012,
  SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) AS Consumption_2013,
  (SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) -
   SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END)) AS Increase,
  CASE 
    WHEN SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) = 0 THEN NULL
    ELSE 
      100.0 * (SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END) -
               SUM(CASE WHEN ym.Date BETWEEN 201201 AND 201212 THEN ym.Consumption ELSE 0 END))
      / SUM(CASE WHEN ym.Date BETWEEN 201301 AND 201312 THEN ym.Consumption ELSE 0 END)
  END AS Percentage_Increase
FROM
  yearmonth ym
  JOIN customers c ON ym.CustomerID = c.CustomerID
WHERE
  c.Segment IN ('SME', 'LAM', 'KAM')
  AND c.Currency = 'EUR'
GROUP BY
  c.Segment
ORDER BY
  Percentage_Increase DESC;","[('SME', 869537.52, 7258151.96, 6388614.4399999995, 88.01984961472203), ('KAM', 646663.61, 4224041.47, 3577377.86, 84.69087923040681), ('LAM', 676212.68, 4326606.13, 3650393.4499999997, 84.37082878168067)]",NO,,
1483,How much did customer 6 consume in total between August and November 2013?,Between August And November 2013 refers to Between 201308 And 201311; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311',"[(1224.96,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  cc.customerid,
  SUM(cc.consumption) AS total_consumption
FROM __customer_consumption AS cc
WHERE
  cc.customerid = 6 AND cc.date >= '201308' AND cc.date <= '201311'
GROUP BY
  cc.customerid
 -- Generated by Cortex Analyst
;","[('6', '1224.96')]",YES,,,"SELECT SUM(Consumption) as total_consumption
FROM yearmonth
WHERE CustomerID = 6 AND Date >= 201308 AND Date <= 201311;","[(1224.96,)]",YES,,,"SELECT SUM(Consumption) AS TotalConsumption
FROM yearmonth
WHERE CustomerID = 6
  AND Date >= 201308
  AND Date <= 201311;","[(1224.96,)]",YES,,"SELECT SUM(Consumption) AS TotalConsumption
FROM yearmonth
WHERE CustomerID = 6
  AND Date BETWEEN 201308 AND 201311;","[(1224.96,)]",YES,,
1484,"How many more ""discount"" gas stations does the Czech Republic have compared to Slovakia?","Czech Republic can be represented as the Country value in gasstations table is 'CZE'; Slovakia can be represented as the Country value in the gasstations table is 'SVK';  Computation of more ""discount"" gas stations= Total no. of discount gas stations in Czech Republic - Total no. of discount gas stations in Slovakia",simple,"SELECT SUM(IIF(Country = 'CZE', 1, 0)) - SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations WHERE Segment = 'Discount'","[(176,)]","WITH __gasstations AS (
  SELECT
    country,
    segment
  FROM debit_card_specializing.public.gasstations
), country_discount_stations AS (
  SELECT
    country,
    COUNT(*) AS discount_count
  FROM __gasstations
  WHERE
    segment = 'discount' AND country IN ('CZE', 'SVK')
  GROUP BY
    country
)
SELECT
  (
    MAX(CASE WHEN country = 'CZE' THEN discount_count ELSE 0 END) - MAX(CASE WHEN country = 'SVK' THEN discount_count ELSE 0 END)
  ) AS difference_cze_minus_svk
FROM country_discount_stations
 -- Generated by Cortex Analyst
;","[(None,)]",NO,,,SELECT COUNT(*) as count_svk FROM gasstations WHERE Segment = 'discount' AND Country = 'SVK';,"[(0,)]",NO,,,"SELECT 
  (SELECT COUNT(*) FROM gasstations WHERE Country='CZE' AND Segment='Value for money') - 
  (SELECT COUNT(*) FROM gasstations WHERE Country='SVK' AND Segment='Value for money') 
  AS difference;","[(335,)]",NO,,"SELECT 
  COALESCE(SUM(CASE WHEN Country = 'CZE' AND Segment = 'Discount' THEN 1 ELSE 0 END),0)
  - 
  COALESCE(SUM(CASE WHEN Country = 'SVK' AND Segment = 'Discount' THEN 1 ELSE 0 END),0)
  AS discount_gas_station_difference
FROM gasstations;","[(176,)]",YES,,
1485,How much more was customer 7 consuming in April 2013 than customer 5?,April 2013 refers to 201304 in the yearmonth.date,simple,"SELECT SUM(IIF(CustomerID = 7, Consumption, 0)) - SUM(IIF(CustomerID = 5, Consumption, 0)) FROM yearmonth WHERE Date = '201304'","[(540.51,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), april_consumption AS (
  SELECT
    customerid,
    consumption
  FROM __customer_consumption
  WHERE
    date = '201304' AND customerid IN (5, 7)
)
SELECT
  (
    MAX(CASE WHEN customerid = 7 THEN consumption END) - MAX(CASE WHEN customerid = 5 THEN consumption END)
  ) AS consumption_difference
FROM april_consumption
 -- Generated by Cortex Analyst
;","[('540.51',)]",YES,,,SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = 201304;,"[(1497.14,)]",NO,,,"SELECT
  (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = 201304) -
  (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = 201304) AS consumption_difference;","[(540.51,)]",YES,,"SELECT
  (SELECT Consumption FROM yearmonth WHERE CustomerID = 7 AND Date = 201304) -
  (SELECT Consumption FROM yearmonth WHERE CustomerID = 5 AND Date = 201304) AS ConsumptionDifference;","[(540.51,)]",YES,,
1486,"Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",Amount of more SMEs = Total of SMEs pay using Currency CZK - Total of SMEs pay using Currency EUR,simple,SELECT SUM(Currency = 'CZK') - SUM(Currency = 'EUR') FROM customers WHERE Segment = 'SME',"[(23505,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), currency_counts AS (
  SELECT
    currency,
    COUNT(DISTINCT c.customerid) AS customer_count
  FROM __customers AS c
  WHERE
    c.segment = 'SME' AND currency IN ('CZK', 'EUR')
  GROUP BY
    currency
), czk AS (
  SELECT
    customer_count
  FROM currency_counts
  WHERE
    currency = 'CZK'
), eur AS (
  SELECT
    customer_count
  FROM currency_counts
  WHERE
    currency = 'EUR'
)
SELECT
  CASE WHEN czk.customer_count > eur.customer_count THEN 'Yes' ELSE 'No' END AS is_czk_greater,
  CASE
    WHEN czk.customer_count > eur.customer_count
    THEN czk.customer_count - eur.customer_count
    ELSE NULL
  END AS difference
FROM czk AS czk
CROSS JOIN eur AS eur
 -- Generated by Cortex Analyst
;","[('Yes', '23505')]",YES,,,SELECT COUNT(*) AS cnt_eur FROM customers WHERE Segment = 'SME' AND Currency = 'EUR',"[(1629,)]",NO,,,"SELECT 
  (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'CZK') -
  (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Segment = 'SME' AND Currency = 'EUR') 
  AS Amount_of_more_SMEs;","[(23505,)]",YES,,"SELECT 
  (SUM(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) -
   SUM(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END)) AS SME_CZK_minus_EUR
FROM (
  SELECT DISTINCT CustomerID, Currency
  FROM customers
  WHERE Segment = 'SME'
) t;","[(23505,)]",YES,,
1487,Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?,October 2013 refers to 201310 in the yearmonth.date,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T2.Date = '201310' AND T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(3154,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), euro_lam_customers AS (
  SELECT
    cc.customerid,
    cc.consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'LAM' AND c.currency = 'EUR' AND cc.date = '201310'
)
SELECT
  c.customerid,
  c.currency,
  c.segment,
  ecc.consumption
FROM euro_lam_customers AS ecc
LEFT OUTER JOIN __customers AS c
  ON ecc.customerid = c.customerid
ORDER BY
  ecc.consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('3154', 'EUR', 'LAM', '12654.46')]",YES,,,"SELECT c.CustomerID, c.Currency, y.Consumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'LAM' AND c.Currency = 'EUR' AND y.Date = 201310
ORDER BY y.Consumption DESC
LIMIT 1;","[(3154, 'EUR', 12654.46)]",YES,,,"SELECT c.CustomerID, ym.Consumption
FROM customers c
JOIN yearmonth ym ON c.CustomerID = ym.CustomerID
WHERE c.Segment = 'LAM'
  AND c.Currency = 'EUR'
  AND ym.Date = 201310
ORDER BY ym.Consumption DESC
LIMIT 1;","[(3154, 12654.46)]",YES,,"SELECT c.CustomerID, y.Consumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'LAM'
  AND c.Currency = 'EUR'
  AND y.Date = 201310
ORDER BY y.Consumption DESC
LIMIT 1;","[(3154, 12654.46)]",YES,,
1488,Who among KAM's customers consumed the most? How much did it consume?,,simple,"SELECT T2.CustomerID, SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' GROUP BY T2.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1","[(12459, 16130041.82)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), kam_consumption AS (
  SELECT
    cc.customerid,
    c.segment,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'KAM'
  GROUP BY
    cc.customerid,
    c.segment
)
SELECT
  customerid,
  segment,
  total_consumption
FROM kam_consumption
ORDER BY
  total_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('12459', 'KAM', '16130041.82')]",YES,,,"SELECT c.CustomerID, SUM(t.Amount) AS TotalConsumed
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE c.Segment = 'KAM'
GROUP BY c.CustomerID
ORDER BY TotalConsumed DESC
LIMIT 1;","[(16358, 363)]",NO,,,"SELECT c.CustomerID, MAX(ym.Consumption) AS MaxConsumption
FROM customers c
JOIN yearmonth ym ON c.CustomerID = ym.CustomerID
WHERE c.Segment = 'KAM'
GROUP BY c.CustomerID
ORDER BY MaxConsumption DESC
LIMIT 1;","[(12459, 2052187.11)]",NO,,"SELECT c.CustomerID, SUM(y.Consumption) AS TotalConsumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'KAM'
GROUP BY c.CustomerID
ORDER BY TotalConsumption DESC
LIMIT 1;","[(12459, 16130041.82)]",YES,,
1489,How much did the KAM customers consume in total in May 2013?,May 2013 refers to yearmonth.date = 201305,simple,SELECT SUM(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201305' AND T1.Segment = 'KAM',"[(136224462.01,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT
  SUM(cc.consumption) AS total_consumption
FROM __customer_consumption AS cc
LEFT OUTER JOIN __customers AS c
  ON cc.customerid = c.customerid
WHERE
  c.segment = 'KAM' AND cc.date = '201305'
 -- Generated by Cortex Analyst
;","[('136224462.01',)]",YES,,,"SELECT SUM(Consumption) as total_consumption
FROM yearmonth
JOIN customers ON yearmonth.CustomerID = customers.CustomerID
WHERE customers.Segment = 'KAM' AND yearmonth.Date = 201305;","[(136224462.01,)]",YES,,,"SELECT SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'KAM' AND y.Date = 201305;","[(136224462.01,)]",YES,,"SELECT SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'KAM'
  AND y.Date = 201305;","[(136224462.01,)]",YES,,
1490,How many percent of LAM customer consumed more than 46.73?,Percentage of LAM customer consumed more than 46.73 = (Total no. of LAM customers who consumed more than 46.73 / Total no. of LAM customers) * 100.,moderate,"SELECT CAST(SUM(IIF(T2.Consumption > 46.73, 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM'","[(98.5267932135058,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), lam_customers AS (
  SELECT DISTINCT
    cc.customerid,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.segment = 'LAM'
  GROUP BY
    cc.customerid
)
SELECT
  CAST(COUNT(CASE WHEN total_consumption > 46.73 THEN customerid END) AS FLOAT) / NULLIF(NULLIF(COUNT(customerid), 0), 0) AS pct_customers_above_threshold
FROM lam_customers
 -- Generated by Cortex Analyst
;","[('0.99667682082525622',)]",NO,,,"SELECT COUNT(DISTINCT c.CustomerID) as total_lam_customers, COUNT(DISTINCT CASE WHEN t.Amount > 46.73 THEN c.CustomerID END) as lam_consumed_more_4673
FROM customers c
LEFT JOIN transactions_1k t ON c.CustomerID = t.CustomerID
WHERE c.Segment = 'LAM'","[(3658, 13)]",NO,,,"SELECT 
  (CAST(
    (SELECT COUNT(DISTINCT ym.CustomerID)
     FROM yearmonth ym
     JOIN customers c ON ym.CustomerID = c.CustomerID
     WHERE c.Segment = 'LAM' AND ym.Consumption > 46.73)
    AS REAL) 
   / 
   (SELECT COUNT(DISTINCT c.CustomerID)
    FROM customers c
    WHERE c.Segment = 'LAM')
  ) * 100 AS percent_lam_customers_consumed_more_than_46_73;","[(98.25041006014216,)]",NO,,"SELECT 
  ROUND(
    100.0 * COUNT(DISTINCT CASE WHEN y.Consumption > 46.73 THEN y.CustomerID END)
    / NULLIF(COUNT(DISTINCT y.CustomerID), 0), 2
  ) AS percent_lam_customers_over_46_73
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Segment = 'LAM';","[(99.53,)]",NO,,
1491,"Which country has more ""value for money"" gas stations? Please give a total number of ""value for money"" gas stations in each country.",,simple,"SELECT Country , ( SELECT COUNT(GasStationID) FROM gasstations WHERE Segment = 'Value for money' ) FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY COUNT(GasStationID) DESC LIMIT 1","[('CZE', 597)]",,,NO,,,"SELECT Country, COUNT(*) as ValueForMoneyStations FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country ORDER BY ValueForMoneyStations DESC;","[('CZE', 466), ('SVK', 131)]",NO,,,"SELECT Country, COUNT(*) AS ValueForMoneyStations
FROM gasstations
WHERE Segment = 'Value for money'
GROUP BY Country
ORDER BY ValueForMoneyStations DESC
LIMIT 5;","[('CZE', 466), ('SVK', 131)]",NO,,"SELECT
  Country,
  COUNT(*) AS value_for_money_gasstations
FROM
  gasstations
WHERE
  Segment = 'Value for money'
GROUP BY
  Country
ORDER BY
  value_for_money_gasstations DESC;","[('CZE', 466), ('SVK', 131)]",NO,,
1492,What percentage of KAM customers pay in euros?,Percentage of KAM uses Euro = (Total of KAM uses Euro / Total of KAM) * 100%.,simple,SELECT CAST(SUM(Currency = 'EUR') AS FLOAT) * 100 / COUNT(CustomerID) FROM customers WHERE Segment = 'KAM',"[(3.480392156862745,)]","WITH __customers AS (
  SELECT
    currency,
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), kam_customers AS (
  SELECT DISTINCT
    c.customerid,
    c.currency
  FROM __customers AS c
  WHERE
    c.segment = 'KAM'
)
SELECT
  CAST(COUNT(CASE WHEN currency = 'EUR' THEN customerid END) AS FLOAT) / NULLIF(NULLIF(COUNT(customerid), 0), 0) AS euro_percentage
FROM kam_customers
 -- Generated by Cortex Analyst
;","[('0.034803921568627452',)]",NO,,,SELECT COUNT(*) as euro_kam FROM customers WHERE Segment = 'KAM' AND Currency = 'EUR';,"[(71,)]",NO,,,"SELECT 
  ROUND(100.0 * COUNT(CASE WHEN Currency = 'EUR' THEN 1 END) / COUNT(*), 2) AS percentage_euro_kam
FROM customers
WHERE Segment = 'KAM'
LIMIT 5;","[(3.48,)]",NO,,"SELECT 
  100.0 * COUNT(*) FILTER (WHERE Currency = 'EUR') / COUNT(*) AS percentage_kam_euro
FROM customers
WHERE Segment = 'KAM';","[(3.480392156862745,)]",YES,,
1493,"In February 2012, what percentage of customers consumed more than 528.3?",February 2012 refers to '201202' in yearmonth.date; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,"SELECT CAST(SUM(IIF(Consumption > 528.3, 1, 0)) AS FLOAT) * 100 / COUNT(CustomerID) FROM yearmonth WHERE Date = '201202'","[(66.62300807683911,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid
  FROM debit_card_specializing.public.customers
), feb_high_consumers AS (
  SELECT
    COUNT(DISTINCT cc.customerid) AS high_consumers
  FROM __customer_consumption AS cc
  WHERE
    cc.date = '201202' AND cc.consumption > 528.3
), total_customers AS (
  SELECT
    COUNT(customerid) AS total_customers
  FROM __customers
)
SELECT
  CAST(high_consumers AS FLOAT) / NULLIF(NULLIF(total_customers, 0), 0) AS percentage_high_consumers
FROM feb_high_consumers
CROSS JOIN total_customers
 -- Generated by Cortex Analyst
;","[('0.37608206771202368',)]",NO,,,SELECT (CAST(SUM(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS FLOAT) * 100.0 / COUNT(*)) AS percentage_above_threshold FROM yearmonth WHERE Date = 201202;,"[(66.62300807683911,)]",YES,,,"SELECT
  ROUND(CAST(COUNT(*) AS FLOAT) * 100.0 / (SELECT COUNT(*) FROM yearmonth WHERE Date = 201202), 2) AS percentage
FROM yearmonth
WHERE Date = 201202 AND Consumption > 528.3
LIMIT 5;","[(66.62,)]",NO,,"SELECT 
  ROUND(100.0 * COUNT(CASE WHEN Consumption > 528.3 THEN 1 END) / COUNT(*), 2) AS percentage_customers_over_528_3
FROM yearmonth
WHERE Date = 201202;","[(66.62,)]",NO,,
1494,What percentage of Slovakian gas stations are premium?,Percentage of premium gas station = (Total of premium gas station in Slovakia / Total of gas station in Slovakia) * 100%.,simple,"SELECT CAST(SUM(IIF(Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK'","[(35.68181818181818,)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid,
    segment
  FROM debit_card_specializing.public.gasstations
), slovakia_stations AS (
  SELECT
    gasstationid,
    segment
  FROM __gasstations
  WHERE
    country = 'Slovakia'
)
SELECT
  CAST(COUNT(CASE WHEN s.segment = 'Premium' THEN 1 END) AS DECIMAL(18, 2)) / NULLIF(NULLIF(COUNT(*), 0), 0) AS premium_station_ratio
FROM slovakia_stations AS s
 -- Generated by Cortex Analyst
;","[(None,)]",NO,,,SELECT COUNT(*) as total_gasstations FROM gasstations WHERE Country = 'SVK';,"[(880,)]",NO,,,"SELECT
  (CAST(COUNT(CASE WHEN Segment = 'Premium' THEN 1 END) AS FLOAT) / COUNT(*)) * 100 AS premium_percentage
FROM gasstations
WHERE Country = 'SVK'
LIMIT 5;","[(35.68181818181818,)]",YES,,"SELECT 
  ROUND(
    100.0 * SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) / COUNT(*), 
    2
  ) AS percentage_premium
FROM gasstations
WHERE Country = 'SVK';","[(35.68,)]",NO,,
1495,Which client ID consumed the most in September 2013?,September 2013 refers to yearmonth.date = '201309',simple,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,"[(12459,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  cc.customerid,
  cc.consumption
FROM __customer_consumption AS cc
WHERE
  cc.date = '201309'
ORDER BY
  cc.consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('12459', '1830161.05')]",YES,,,SELECT CustomerID FROM yearmonth WHERE Date = 201309 ORDER BY Consumption DESC LIMIT 1;,"[(12459,)]",YES,,,"SELECT CustomerID
FROM yearmonth
WHERE Date = 201309
ORDER BY Consumption DESC
LIMIT 1;","[(12459,)]",YES,,"SELECT CustomerID
FROM yearmonth
WHERE Date = 201309
ORDER BY Consumption DESC
LIMIT 1;","[(12459,)]",YES,,
1496,Which client segment consumed the least in September 2013?,September 2013 refers to yearmonth.date = '201309',simple,SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[('KAM',)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), segment_consumption AS (
  SELECT
    c.segment,
    SUM(cc.consumption) AS total_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date = '201309'
  GROUP BY
    c.segment
)
SELECT
  segment,
  total_consumption
FROM segment_consumption
ORDER BY
  total_consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('LAM', '120091351.67')]",NO,,,"SELECT c.Segment, SUM(y.Consumption) as TotalConsumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201309
GROUP BY c.Segment
ORDER BY TotalConsumption ASC
LIMIT 1;","[('LAM', 120091351.67)]",NO,,,"SELECT c.Segment, SUM(y.Consumption) AS total_consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201309
GROUP BY c.Segment
ORDER BY total_consumption ASC
LIMIT 1;","[('LAM', 120091351.67)]",NO,,"SELECT c.Segment, SUM(y.Consumption) AS TotalConsumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201309
GROUP BY c.Segment
ORDER BY TotalConsumption ASC
LIMIT 1;","[('LAM', 120091351.67)]",NO,,
1497,Which SME customer consumed the least in June 2012?,June 2012 refers to yearmonth.date = '201206',simple,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' AND T1.Segment = 'SME' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1,"[(27338,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), sme_consumption AS (
  SELECT
    cc.customerid,
    cc.consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    cc.date = '201206' AND c.segment = 'SME'
)
SELECT
  sc.customerid,
  sc.consumption
FROM sme_consumption AS sc
ORDER BY
  sc.consumption ASC
LIMIT 1
 -- Generated by Cortex Analyst
;","[('27338', '-5087.62')]",YES,,,"SELECT c.CustomerID, y.Consumption FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE y.Date = 201206 AND c.Segment = 'SME' ORDER BY y.Consumption ASC LIMIT 1;","[(27338, -5087.62)]",YES,,,"SELECT c.CustomerID, y.Consumption
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
WHERE c.Segment = 'SME' AND y.Date = 201206
ORDER BY y.Consumption ASC
LIMIT 1;","[(27338, -5087.62)]",YES,,"SELECT y.CustomerID, y.Consumption
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201206
  AND c.Segment = 'SME'
ORDER BY y.Consumption ASC
LIMIT 1;","[(27338, -5087.62)]",YES,,
1498,What is the highest monthly consumption in the year 2012?,The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,"SELECT SUM(Consumption) FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' GROUP BY SUBSTR(Date, 5, 2) ORDER BY SUM(Consumption) DESC LIMIT 1","[(51787161.74,)]","WITH __customer_consumption AS (
  SELECT
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
)
SELECT
  date,
  SUM(consumption) AS total_monthly_consumption
FROM __customer_consumption
WHERE
  SUBSTRING(date, 1, 4) = '2012'
GROUP BY
  date
ORDER BY
  total_monthly_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('201203', '51787161.74')]",YES,,,"SELECT MAX(Consumption) as max_consumption FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012';","[(445279.69,)]",NO,,,"SELECT MAX(Consumption) AS HighestMonthlyConsumption
FROM yearmonth
WHERE substr(CAST(Date AS TEXT), 1, 4) = '2012';","[(445279.69,)]",NO,,"SELECT MAX(Consumption) AS HighestMonthlyConsumption
FROM yearmonth
WHERE SUBSTR(CAST(Date AS TEXT), 1, 4) = '2012';","[(445279.69,)]",NO,,
1499,What is the biggest monthly consumption of the customers who use euro as their currency?,Monthly consumption = SUM(consumption) / 12,simple,SELECT SUM(T2.Consumption) / 12 AS MonthlyConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY MonthlyConsumption DESC LIMIT 1,"[(85002.47333333333,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), customer_total_consumption AS (
  SELECT
    cc.customerid,
    SUM(cc.consumption) / NULLIF(12, 0) AS monthly_consumption
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR'
  GROUP BY
    cc.customerid
)
SELECT
  MIN(cc.date) AS start_date,
  MAX(cc.date) AS end_date,
  MAX(ctc.monthly_consumption) AS max_monthly_consumption
FROM __customer_consumption AS cc
JOIN customer_total_consumption AS ctc
  ON cc.customerid = ctc.customerid
GROUP BY
  ctc.customerid
ORDER BY
  max_monthly_consumption DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('201201', '201311', '85002.47333333')]",NO,,,"SELECT c.CustomerID, SUM(t.Amount) / 12 AS monthly_consumption
FROM customers c
JOIN transactions_1k t ON c.CustomerID = t.CustomerID
WHERE c.Currency = 'EUR'
GROUP BY c.CustomerID
ORDER BY monthly_consumption DESC
LIMIT 1;","[(4443, 8)]",NO,,,"SELECT MAX(Consumption) AS biggest_monthly_consumption
FROM yearmonth
WHERE CustomerID IN (
  SELECT CustomerID FROM customers WHERE Currency = 'EUR'
);","[(227434.61,)]",NO,,"SELECT MAX(monthly_consumption) AS biggest_monthly_consumption
FROM (
  SELECT SUM(y.Consumption) / 12 AS monthly_consumption
  FROM yearmonth y
  JOIN customers c ON y.CustomerID = c.CustomerID
  WHERE c.Currency = 'EUR'
  GROUP BY y.CustomerID
) subquery;","[(85002.47333333333,)]",YES,,
1500,"Please list the product description of the products consumed in September, 2013.",September 2013 refers to 201309; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month.,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',"[('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Nafta',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Autoprísluš.',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Diesel',), ('Diesel',), ('Diesel aditiv',), ('Nafta',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Nat.Super',), ('Autokozmetik',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Umývanie voz',), ('Diesel',), ('Diesel',), ('Diesel',), ('Nat.Super',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Diesel',), ('Prev.náplne',), ('Diesel',), ('Diesel',), ('Diesel',), ('Prev.náplne',), ('Umývanie voz',), ('Diesel',), ('Nat.Super',), ('Umývanie voz',), ('Diesel',), ('Diesel aditiv',), ('Diesel',), ('Prev.náplne',), ('Diesel',), ('Diesel',), ('Diesel',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Autoprísluš.',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural Spec',), ('Natural +',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Autoprísluš.',), ('Natural',), ('Mytí vozidel',), ('Natural +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nemrz.kapal.',), ('Autokosmet.',), ('Natural',), ('Autokosmet.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Autokosmet.',), ('Nafta Plus',), ('Autoprísluš.',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural Plus',), ('Natural Plus',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel +',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Oleje,tuky',), ('Additivum',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Autokosmet.',), ('Nafta',), ('Dalnic.popl.',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Dalnic.popl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Provoz.nápl.',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Zpr.nakupu',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta Plus',), ('Diesel +',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Zpr.nakupu',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Autoprísluš.',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Autokosmet.',), ('Natural Plus',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel +',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Provoz.nápl.',), ('Knihy,nov.',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Potraviny',), ('Nafta Plus',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Autoprísluš.',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nemrz.kapal.',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural +',), ('Diesel +',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Natural Plus',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Provoz.nápl.',), ('Nafta',), ('Nafta',), ('LPG',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Nafta',), ('Nafta',), ('Obcerstvení',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural Plus',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Potraviny',), ('Zboží nesp.',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta Plus',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Diesel +',), ('Natural',), ('Nafta',), ('Mytí vozidel',), ('Nafta Plus',), ('Natural',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Potraviny',), ('Diesel +',), ('Potraviny',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nat.Super',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Mytí vozidel',), ('Zpr.nakupu',), ('Natural',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural Spec',), ('Nafta',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Mytí vozidel',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Natural',), ('Autokosmet.',), ('Mytí vozidel',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Oleje,tuky',), ('Diesel +',), ('Nemrz.kapal.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta Plus',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('LPG',), ('Diesel',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Diesel',), ('Natural',), ('Natural',), ('Nafta',), ('Diesel +',), ('Nafta',), ('Natural',), ('Dalnic.popl.',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta Plus',), ('Nafta',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural',), ('Nafta',), ('Natural',), ('Diesel +',), ('Mytí vozidel',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Provoz.nápl.',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nafta',), ('Nemrz.kapal.',), ('Autokosmet.',), ('Mytí vozidel',), ('Nafta',), ('Natural',), ('Natural',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Nafta',), ('Natural',), ('LPG',), ('Nafta',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Natural',), ('Mytí vozidel',), ('Diesel',), ('Nafta',), ('Natural',), ('Natural',), ('Natural',), ('Diesel +',), ('Obcerstvení',), ('Zboží nesp.',), ('Nafta',), ('LPG',), ('Diesel',), ('Diesel',), ('Diesel aditiv',), ('Umývanie voz',), ('Nafta',), ('Natural',), ('Nafta',), ('Nafta',), ('Provoz.nápl.',), ('Nafta',)]","WITH __transactions_1k AS (
  SELECT
    productid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
)
SELECT DISTINCT
  p.description
FROM __transactions_1k AS t
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
WHERE
  DATE_TRUNC('MONTH', t.date) = '2013-09-01'
ORDER BY
  p.description DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN products p ON t.ProductID = p.ProductID
WHERE substr(replace(t.Date, '-', ''), 1, 6) = '201309'
LIMIT 5;",,NO,,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN products p ON t.ProductID = p.ProductID
WHERE substr(t.Date, 1, 7) = '2013-09'
LIMIT 5;",,NO,,"SELECT DISTINCT p.Description
FROM yearmonth y
JOIN transactions_1k t ON y.CustomerID = t.CustomerID
JOIN products p ON t.ProductID = p.ProductID
WHERE y.Date = 201309;","[('Diesel',), ('Nat.Super',), ('Nafta',), ('Provoz.nápl.',), ('Autoprísluš.',), ('Mytí vozidel',), ('Diesel aditiv',), ('Autokozmetik',), ('Umývanie voz',), ('Prev.náplne',), ('Natural',), ('Oleje,tuky',), ('Nemrz.kapal.',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Diesel +',), ('Natural Spec',), ('Natural +',), ('Nafta Plus',), ('Autokosmet.',), ('Natural Plus',), ('Additivum',), ('Knihy,nov.',), ('Potraviny',), ('LPG',), ('Obcerstvení',), ('Zboží nesp.',)]",NO,,
1501,"Please list the countries of the gas stations with transactions taken place in June, 2013.",June 2013 refers to '201306'; The first 4 strings of the Date values in the yearmonth table can represent year; The 5th and 6th string of the date can refer to month;,moderate,SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Date = '201306',"[('SVK',), ('CZE',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  g.country
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  DATE_PART('YEAR', t.date) = 2013 AND DATE_PART('MONTH', t.date) = 6
ORDER BY
  g.country DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,,"SELECT DISTINCT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE strftime('%Y%m', t.Date) = '201306'
LIMIT 5;",,NO,,,"SELECT DISTINCT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE substr(t.Date, 1, 7) = '2013-06'
LIMIT 5;",,NO,,"SELECT DISTINCT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE strftime('%Y%m', t.Date) = '201306';",,NO,,
1502,Please list the chains of the gas stations with transactions in euro.,,simple,SELECT DISTINCT T3.ChainID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR',"[(77,), (246,), (35,), (4,), (130,), (98,), (61,), (70,), (76,), (219,)]","WITH __gasstations AS (
  SELECT
    chainid,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    customerid,
    gasstationid
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), euro_transactions AS (
  SELECT DISTINCT
    t.gasstationid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __customers AS c
    ON t.customerid = c.customerid
  WHERE
    c.currency = 'EUR'
)
SELECT DISTINCT
  g.chainid
FROM euro_transactions AS et
LEFT OUTER JOIN __gasstations AS g
  ON et.gasstationid = g.gasstationid
ORDER BY
  g.chainid
 -- Generated by Cortex Analyst
;","[('4',), ('35',), ('61',), ('70',), ('76',), ('77',), ('98',), ('130',), ('219',), ('246',)]",YES,,,"SELECT DISTINCT g.ChainID
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE c.Currency = 'EUR'
LIMIT 5;","[(77,), (246,), (35,), (4,), (130,)]",NO,,,"SELECT DISTINCT g.ChainID
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR'
LIMIT 5;","[(77,), (246,), (35,), (4,), (130,)]",NO,,"SELECT DISTINCT g.ChainID
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE c.Currency = 'EUR';","[(77,), (246,), (35,), (4,), (130,), (98,), (61,), (70,), (76,), (219,)]",YES,,
1503,Please list the product description of the products bought in transactions in euro.,,simple,"SELECT DISTINCT T1.ProductID, T3.Description FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Currency = 'EUR'","[(317, 'Diesel'), (322, 'Nat.Super'), (2, 'Nafta'), (332, 'Diesel aditiv'), (352, 'Autokozmetik'), (341, 'Umývanie voz'), (336, 'Prev.náplne')]","WITH __transactions_1k AS (
  SELECT
    customerid,
    productid
  FROM debit_card_specializing.public.transactions_1k
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  p.description
FROM __transactions_1k AS t
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  c.currency = 'EUR'
ORDER BY
  p.description
 -- Generated by Cortex Analyst
;","[('Autokozmetik',), ('Diesel',), ('Diesel aditiv',), ('Nafta',), ('Nat.Super',), ('Prev.náplne',), ('Umývanie voz',)]",NO,,,SELECT DISTINCT p.Description FROM transactions_1k t JOIN products p ON t.ProductID = p.ProductID WHERE t.Price LIKE '€%' LIMIT 5;,,NO,,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN products p ON t.ProductID = p.ProductID
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR'
LIMIT 5;","[('Diesel',), ('Nat.Super',), ('Nafta',), ('Diesel aditiv',), ('Autokozmetik',)]",NO,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
JOIN products p ON t.ProductID = p.ProductID
WHERE c.Currency = 'EUR';","[('Diesel',), ('Nat.Super',), ('Nafta',), ('Diesel aditiv',), ('Autokozmetik',), ('Umývanie voz',), ('Prev.náplne',)]",NO,,
1504,"What is the average total price of the transactions taken place in January, 2012?","In January, 2012 means Date contains '2012-01'",simple,SELECT AVG(Amount) FROM transactions_1k WHERE Date LIKE '2012-01%',"[(None,)]","WITH __transactions_1k AS (
  SELECT
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
)
SELECT
  AVG(price) AS average_transaction_price
FROM __transactions_1k
WHERE
  DATE_TRUNC('MONTH', date) = '2012-01-01'
ORDER BY
  average_transaction_price DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[(None,)]",YES,,,SELECT AVG(Price) as average_total_price FROM transactions_1k WHERE Date LIKE '2012-01%';,"[(None,)]",YES,,,"SELECT AVG(Price) AS average_price
FROM transactions_1k
WHERE Date LIKE '2012-01%';","[(None,)]",YES,,"SELECT AVG(Price) AS avg_total_price
FROM transactions_1k
WHERE Date LIKE '2012-01%';","[(None,)]",YES,,
1505,"Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",Pays in euro = Currency = 'EUR'.,simple,SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Consumption > 1000.00,"[(2730,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), high_consumption_customers AS (
  SELECT DISTINCT
    cc.customerid
  FROM __customer_consumption AS cc
  LEFT OUTER JOIN __customers AS c
    ON cc.customerid = c.customerid
  WHERE
    c.currency = 'EUR' AND cc.consumption > 1000
)
SELECT
  COUNT(*) AS customer_count
FROM high_consumption_customers
 -- Generated by Cortex Analyst
;","[('391',)]",NO,,,"SELECT COUNT(*) AS num_customers_over_1000
FROM (
    SELECT c.CustomerID
    FROM customers c
    JOIN transactions_1k t ON c.CustomerID = t.CustomerID
    WHERE c.Currency = 'EUR'
    GROUP BY c.CustomerID
    HAVING SUM(t.Amount * t.Price) > 1000
) AS sub;","[(14,)]",NO,,,"SELECT COUNT(DISTINCT y.CustomerID)
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR' AND y.Consumption > 1000;","[(391,)]",NO,,"SELECT COUNT(DISTINCT y.CustomerID)
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR'
  AND y.Consumption > 1000;","[(391,)]",NO,,
1506,Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.,Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; ,moderate,SELECT DISTINCT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE',"[('Nafta',), ('Diesel +',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural Spec',), ('Natural',), ('Autokosmet.',), ('Mytí vozidel',), ('Autoprísluš.',), ('Obcerstvení',), ('Zboží nesp.',), ('Natural Plus',), ('Knihy,nov.',), ('LPG',), ('Nafta Plus',), ('Natural +',), ('Oleje,tuky',), ('Potraviny',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Additivum',)]","WITH __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
), __transactions_1k AS (
  SELECT
    gasstationid,
    productid
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), cze_transactions AS (
  SELECT DISTINCT
    t.productid
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __gasstations AS g
    ON t.gasstationid = g.gasstationid
  WHERE
    g.country = 'CZE'
)
SELECT DISTINCT
  p.description
FROM cze_transactions AS ct
LEFT OUTER JOIN __products AS p
  ON ct.productid = p.productid
ORDER BY
  p.description
 -- Generated by Cortex Analyst
;","[('Additivum',), ('Autokosmet.',), ('Autoprísluš.',), ('Dalnic.popl.',), ('Diesel +',), ('Knihy,nov.',), ('LPG',), ('Mytí vozidel',), ('Nafta',), ('Nafta Plus',), ('Natural',), ('Natural +',), ('Natural Plus',), ('Natural Spec',), ('Nemrz.kapal.',), ('Obcerstvení',), ('Oleje,tuky',), ('Potraviny',), ('Provoz.nápl.',), ('Zboží nesp.',), ('Zpr.nakupu',)]",YES,,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
JOIN products p ON t.ProductID = p.ProductID
WHERE g.Country = 'CZE'
LIMIT 5;","[('Nafta',), ('Diesel +',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural Spec',)]",NO,,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
JOIN products p ON t.ProductID = p.ProductID
WHERE g.Country = 'CZE'
LIMIT 5;","[('Nafta',), ('Diesel +',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural Spec',)]",NO,,"SELECT DISTINCT p.Description
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
JOIN products p ON t.ProductID = p.ProductID
WHERE g.Country = 'CZE';","[('Nafta',), ('Diesel +',), ('Provoz.nápl.',), ('Nemrz.kapal.',), ('Natural Spec',), ('Natural',), ('Autokosmet.',), ('Mytí vozidel',), ('Autoprísluš.',), ('Obcerstvení',), ('Zboží nesp.',), ('Natural Plus',), ('Knihy,nov.',), ('LPG',), ('Nafta Plus',), ('Natural +',), ('Oleje,tuky',), ('Potraviny',), ('Dalnic.popl.',), ('Zpr.nakupu',), ('Additivum',)]",YES,,
1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,"[('11:55:00',), ('14:29:00',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    chainid,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  t.time
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.chainid = 11
ORDER BY
  t.time DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('52140.000000000',), ('42900.000000000',)]",NO,,,SELECT DISTINCT t.Time FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.ChainID = 11 LIMIT 5;,"[('11:55:00',), ('14:29:00',)]",YES,,,"SELECT DISTINCT t.Time
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.ChainID = 11
LIMIT 5;","[('11:55:00',), ('14:29:00',)]",YES,,"SELECT DISTINCT t.Time
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.ChainID = 11
ORDER BY t.Time;","[('11:55:00',), ('14:29:00',)]",YES,,
1508,How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?,Gas station in the Czech Republic implies that Country = 'CZE',simple,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000,"[(56,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS high_value_transactions
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.price > 1000 AND t.price > 0 AND t.amount > 0
 -- Generated by Cortex Analyst
;","[('56',)]",YES,,,SELECT COUNT(*) FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE g.Country = 'CZE' AND t.Price > 1000;,"[(56,)]",YES,,,"SELECT COUNT(*) AS transaction_count
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE' AND t.Price > 1000;","[(56,)]",YES,,"SELECT COUNT(*) AS num_transactions
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE'
  AND t.Price > 1000;","[(56,)]",YES,,
1509,"Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",Czech Republic can be represented as the Country value in the gasstations table is 'CZE',moderate,"SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND STRFTIME('%Y', T1.Date) >= '2012'","[(933,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.date > '2012-01-01'
 -- Generated by Cortex Analyst
;","[('933',)]",YES,,,"SELECT COUNT(*) FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE' AND t.Date > '2012-01-01';","[(933,)]",YES,,,"SELECT COUNT(*) AS num_transactions
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE'
  AND t.Date > '2012-01-01';","[(933,)]",YES,,"SELECT COUNT(*) AS num_transactions
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE'
  AND t.Date > '2012-01-01';","[(933,)]",YES,,
1510,What is the average total price of the transactions taken place in gas stations in the Czech Republic?,Gas station in the Czech Republic implies that Country = 'CZE',simple,SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE',"[(453.15031082529475,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  t.gasstationid,
  MIN(t.date) AS start_date,
  MAX(t.date) AS end_date,
  AVG(t.price) AS avg_transaction_price
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE' AND t.price > 0
GROUP BY
  t.gasstationid
ORDER BY
  start_date DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('2663', '15578', '15578', '188.57000000'), ('3113', '15578', '15578', '131.18000000'), ('3410', '15578', '15578', '628.72000000'), ('3622', '15578', '15578', '104.22000000'), ('3415', '15578', '15578', '771.82000000'), ('3400', '15578', '15578', '81.17000000'), ('198', '15578', '15578', '676.53000000'), ('3194', '15578', '15578', '782.02500000'), ('272', '15578', '15578', '524.84000000'), ('853', '15578', '15578', '973.56250000'), ('709', '15578', '15578', '118.19000000'), ('3541', '15578', '15578', '162.67000000'), ('3950', '15578', '15578', '328.38000000'), ('3750', '15578', '15578', '612.86000000'), ('1418', '15578', '15578', '385.36200000'), ('2915', '15578', '15578', '573.28000000'), ('2884', '15578', '15578', '796.40500000'), ('669', '15578', '15578', '865.72000000'), ('3071', '15578', '15578', '664.43000000'), ('876', '15578', '15578', '170.31000000'), ('152', '15578', '15578', '130.92000000'), ('1312', '15578', '15578', '182.63000000'), ('1539', '15578', '15578', '157.86000000'), ('796', '15578', '15578', '704.23000000'), ('1003', '15578', '15578', '378.67000000'), ('2709', '15578', '15578', '604.09000000'), ('2415', '15578', '15578', '491.20500000'), ('1627', '15578', '15578', '572.81000000'), ('3900', '15578', '15578', '413.45500000'), ('763', '15578', '15578', '122.28000000'), ('1314', '15577', '15577', '574.81000000'), ('441', '15577', '15577', '202.03500000'), ('2440', '15577', '15577', '405.57000000'), ('3846', '15577', '15577', '675.11000000'), ('3856', '15577', '15577', '239.74000000'), ('378', '15577', '15577', '200.65500000'), ('1205', '15577', '15577', '579.71666667'), ('3380', '15577', '15577', '406.99000000'), ('960', '15577', '15577', '345.53000000'), ('1276', '15577', '15577', '594.35000000'), ('1180', '15577', '15577', '584.05000000'), ('3370', '15577', '15577', '118.31000000'), ('2304', '15577', '15577', '114.37000000'), ('2622', '15577', '15577', '442.95500000'), ('3513', '15577', '15577', '205.41500000'), ('3175', '15577', '15577', '571.32000000'), ('1172', '15577', '15577', '1074.70500000'), ('3694', '15577', '15578', '418.37833333'), ('1341', '15577', '15577', '1130.22500000'), ('1682', '15577', '15577', '1445.97000000'), ('1161', '15577', '15577', '907.63600000'), ('3693', '15577', '15578', '545.61333333'), ('3475', '15577', '15577', '41.89000000'), ('1179', '15577', '15577', '297.45000000'), ('1178', '15577', '15577', '468.49000000'), ('2336', '15577', '15577', '101.47000000'), ('2442', '15577', '15578', '448.88500000'), ('2642', '15577', '15577', '324.87500000'), ('2643', '15577', '15578', '478.73500000'), ('2659', '15577', '15577', '589.42000000'), ('398', '15577', '15577', '26.05000000'), ('3289', '15577', '15577', '190.58750000'), ('3115', '15577', '15577', '375.33666667'), ('2989', '15577', '15577', '64.33000000'), ('2988', '15577', '15577', '133.36000000'), ('5274', '15577', '15577', '614.80000000'), ('2912', '15577', '15577', '264.85000000'), ('2552', '15577', '15577', '484.56500000'), ('2513', '15577', '15577', '746.19000000'), ('3089', '15577', '15577', '678.73000000'), ('5481', '15577', '15577', '312.25000000'), ('1866', '15577', '15577', '764.34000000'), ('214', '15577', '15577', '2386.16000000'), ('339', '15577', '15578', '348.56750000'), ('1655', '15577', '15577', '136.70000000'), ('1523', '15577', '15577', '547.31500000'), ('3907', '15577', '15577', '221.55500000'), ('3647', '15577', '15577', '277.96000000'), ('3317', '15577', '15577', '147.82000000'), ('3383', '15577', '15577', '577.84000000'), ('259', '15577', '15577', '556.24000000'), ('278', '15577', '15577', '567.98000000'), ('3014', '15577', '15577', '704.36000000'), ('485', '15577', '15577', '515.42666667'), ('651', '15577', '15577', '675.93500000'), ('836', '15577', '15577', '848.61000000'), ('474', '15577', '15577', '445.33333333'), ('1033', '15577', '15577', '60.83333333'), ('1133', '15577', '15577', '312.91000000'), ('1173', '15577', '15577', '564.01000000'), ('1278', '15577', '15577', '568.13000000'), ('1271', '15577', '15577', '246.35750000'), ('3372', '15577', '15577', '3600.84000000'), ('2568', '15577', '15577', '233.00000000'), ('3329', '15577', '15577', '594.95666667'), ('3547', '15577', '15577', '480.27500000'), ('325', '15577', '15577', '81.17000000'), ('555', '15577', '15577', '130.17000000'), ('803', '15577', '15577', '407.19200000'), ('643', '15577', '15577', '335.60333333'), ('1210', '15577', '15577', '140.78000000'), ('1395', '15577', '15577', '58.19000000'), ('3164', '15577', '15577', '111.25000000'), ('3009', '15577', '15577', '625.73000000'), ('2074', '15577', '15577', '1942.89000000'), ('2231', '15577', '15577', '53.29000000'), ('1168', '15577', '15577', '881.20000000'), ('3404', '15577', '15577', '3090.45000000'), ('3880', '15577', '15577', '550.85000000'), ('3562', '15577', '15577', '543.02000000'), ('1153', '15577', '15577', '815.05000000'), ('944', '15577', '15577', '456.91000000'), ('89', '15577', '15577', '416.18000000'), ('113', '15577', '15577', '403.20500000'), ('354', '15577', '15577', '132.29000000'), ('649', '15577', '15577', '144.40000000'), ('575', '15577', '15577', '93.92000000'), ('530', '15577', '15577', '249.87666667'), ('768', '15577', '15577', '16.46000000'), ('491', '15577', '15577', '108.28000000'), ('892', '15577', '15577', '400.44000000'), ('3387', '15577', '15577', '114.56000000'), ('1353', '15577', '15577', '656.27500000'), ('1445', '15577', '15577', '743.25500000'), ('94', '15577', '15577', '460.75000000'), ('3807', '15577', '15577', '88.21000000'), ('438', '15577', '15578', '510.21666667'), ('3656', '15577', '15577', '622.85000000'), ('1187', '15577', '15577', '116.03000000'), ('2542', '15577', '15577', '285.41000000'), ('2728', '15577', '15577', '589.39500000'), ('2171', '15577', '15577', '145.96000000'), ('5466', '15577', '15578', '111.24666667'), ('2426', '15577', '15577', '133.01000000'), ('4440', '15577', '15577', '390.32500000'), ('1157', '15577', '15577', '797.57000000'), ('1229', '15577', '15577', '188.07000000'), ('1291', '15577', '15577', '91.10000000'), ('1166', '15577', '15577', '134.58000000'), ('2301', '15577', '15578', '218.51000000'), ('748', '15577', '15577', '669.54500000'), ('3323', '15577', '15577', '169.53000000'), ('3800', '15577', '15577', '120.23000000'), ('3052', '15577', '15577', '543.73000000'), ('678', '15577', '15577', '488.50000000'), ('2799', '15577', '15577', '685.07000000'), ('184', '15577', '15578', '328.82500000'), ('2721', '15577', '15577', '31.18500000'), ('2340', '15577', '15577', '671.70000000'), ('726', '15577', '15577', '551.65000000'), ('742', '15577', '15577', '396.44000000'), ('3947', '15577', '15577', '451.63500000'), ('3899', '15577', '15577', '696.57000000'), ('267', '15577', '15577', '286.72500000'), ('1154', '15577', '15577', '387.30000000'), ('1122', '15577', '15577', '591.38500000'), ('747', '15577', '15577', '933.06500000'), ('854', '15577', '15577', '633.53000000'), ('487', '15577', '15577', '212.02000000'), ('1543', '15577', '15577', '534.40500000'), ('1570', '15577', '15577', '216.21666667'), ('1371', '15577', '15577', '535.26000000'), ('869', '15577', '15577', '86.36000000'), ('488', '15577', '15577', '601.30000000'), ('621', '15577', '15577', '350.49500000'), ('640', '15577', '15577', '313.07000000'), ('3065', '15577', '15577', '24.12000000'), ('106', '15577', '15577', '421.89000000'), ('389', '15577', '15577', '761.64500000'), ('3010', '15577', '15577', '104.82000000'), ('279', '15577', '15577', '540.82000000'), ('4409', '15577', '15577', '553.71000000'), ('708', '15577', '15577', '26.50000000'), ('805', '15577', '15577', '73.25500000'), ('776', '15577', '15577', '69.64000000'), ('834', '15577', '15577', '571.53666667'), ('1083', '15577', '15577', '912.97000000'), ('3921', '15577', '15578', '655.63000000'), ('1337', '15577', '15577', '574.90000000'), ('2902', '15577', '15577', '836.34000000'), ('2964', '15577', '15577', '80.01000000'), ('1200', '15577', '15577', '107.33000000'), ('3877', '15577', '15578', '102.64500000'), ('3581', '15577', '15578', '327.28666667'), ('3258', '15577', '15577', '29.11000000'), ('3470', '15577', '15577', '315.41000000'), ('2376', '15577', '15577', '793.33000000'), ('2705', '15577', '15577', '911.35000000'), ('2966', '15577', '15577', '312.19000000'), ('3173', '15577', '15577', '923.58800000'), ('3281', '15577', '15577', '200.52000000'), ('2595', '15577', '15577', '392.61250000'), ('3491', '15577', '15577', '236.35500000'), ('3868', '15577', '15577', '45.87000000'), ('3419', '15577', '15577', '481.57000000'), ('3002', '15577', '15577', '348.79500000'), ('3388', '15577', '15577', '1345.25500000'), ('3445', '15577', '15577', '21.06000000'), ('3864', '15577', '15577', '653.91666667'), ('3923', '15577', '15577', '432.61000000'), ('5313', '15577', '15577', '205.44250000'), ('5338', '15577', '15577', '488.81666667'), ('148', '15577', '15577', '847.67000000'), ('1191', '15577', '15577', '124.05000000'), ('92', '15577', '15577', '507.67000000'), ('1944', '15577', '15577', '38.69000000'), ('3138', '15577', '15577', '318.75750000'), ('3483', '15577', '15577', '523.61500000'), ('2516', '15577', '15577', '143.29000000'), ('3248', '15577', '15577', '810.87000000'), ('935', '15577', '15577', '124.49000000'), ('64', '15577', '15577', '504.55250000'), ('2969', '15577', '15577', '571.47000000'), ('145', '15577', '15577', '103.57000000'), ('5410', '15577', '15577', '400.88000000'), ('65', '15577', '15577', '697.87000000'), ('238', '15577', '15577', '274.39000000'), ('264', '15577', '15578', '681.15750000'), ('5368', '15577', '15577', '586.69666667'), ('397', '15577', '15577', '36.26000000'), ('457', '15577', '15577', '216.30500000'), ('569', '15577', '15577', '127.55000000'), ('3616', '15577', '15577', '60.29000000'), ('3056', '15577', '15577', '113.02000000'), ('563', '15577', '15577', '561.65500000'), ('344', '15577', '15577', '286.13500000'), ('2296', '15577', '15577', '1154.22000000'), ('522', '15577', '15577', '371.69000000'), ('2639', '15577', '15577', '501.22000000'), ('1075', '15577', '15577', '74.00500000'), ('1248', '15577', '15577', '38.69000000'), ('1886', '15577', '15578', '508.93600000'), ('409', '15577', '15577', '25.49000000'), ('3453', '15577', '15577', '263.34000000'), ('3389', '15577', '15577', '89.30000000'), ('3611', '15576', '15576', '301.48500000'), ('1174', '15576', '15577', '585.57250000'), ('3869', '15576', '15576', '611.30000000'), ('1071', '15576', '15576', '385.52500000'), ('3748', '15576', '15576', '519.47300000'), ('3634', '15576', '15576', '87.61000000'), ('473', '15576', '15576', '472.83000000'), ('543', '15576', '15576', '68.55000000'), ('3774', '15576', '15576', '99.24000000'), ('3788', '15576', '15576', '855.41000000'), ('939', '15576', '15576', '404.70000000'), ('3394', '15576', '15576', '521.33000000'), ('4276', '15576', '15576', '33.18000000'), ('3319', '15576', '15576', '392.74750000'), ('3398', '15576', '15576', '189.35857143'), ('3252', '15576', '15576', '613.65500000'), ('3576', '15576', '15576', '89.64000000'), ('2963', '15576', '15576', '565.76000000'), ('3538', '15576', '15576', '426.66000000'), ('1440', '15576', '15577', '316.35000000'), ('1535', '15576', '15577', '519.76000000'), ('3152', '15576', '15577', '618.41000000'), ('3871', '15576', '15576', '447.58000000'), ('1426', '15576', '15577', '472.28200000'), ('168', '15576', '15577', '596.24000000'), ('175', '15576', '15576', '565.01000000'), ('1410', '15576', '15576', '393.19000000'), ('336', '15576', '15576', '390.31333333'), ('3806', '15576', '15577', '365.30000000'), ('3589', '15576', '15576', '327.35500000'), ('236', '15576', '15576', '494.64666667'), ('373', '15576', '15576', '472.40428571'), ('691', '15576', '15577', '335.04500000'), ('3126', '15576', '15576', '108.93000000'), ('1298', '15576', '15576', '715.78500000'), ('656', '15576', '15576', '120.74000000'), ('754', '15576', '15576', '555.96000000'), ('3704', '15576', '15576', '408.45000000'), ('3552', '15576', '15576', '682.51000000'), ('1107', '15576', '15576', '154.38125000'), ('3566', '15576', '15576', '307.52714286'), ('347', '15576', '15576', '486.72000000'), ('2984', '15576', '15576', '184.30333333'), ('3012', '15576', '15576', '570.72000000'), ('3396', '15576', '15576', '403.69250000'), ('225', '15576', '15576', '199.11000000'), ('3013', '15576', '15577', '506.69000000'), ('256', '15576', '15576', '457.69000000'), ('1155', '15576', '15576', '558.47416667'), ('2941', '15576', '15576', '1061.97000000'), ('3509', '15576', '15576', '491.97000000'), ('954', '15576', '15576', '784.27000000'), ('1231', '15576', '15576', '439.21000000'), ('1491', '15576', '15577', '552.57500000'), ('3077', '15576', '15576', '393.34500000'), ('3330', '15576', '15576', '499.63000000'), ('1340', '15576', '15576', '125.06000000'), ('2718', '15576', '15576', '82.06333333'), ('2805', '15576', '15577', '420.65000000'), ('3069', '15576', '15576', '13.59000000'), ('3211', '15576', '15576', '402.19000000'), ('3251', '15576', '15576', '349.90500000'), ('3490', '15576', '15576', '339.94000000'), ('3780', '15576', '15577', '255.18500000'), ('3621', '15576', '15576', '430.34100000'), ('638', '15576', '15576', '312.40500000'), ('1216', '15576', '15576', '310.19500000'), ('3667', '15576', '15576', '274.76000000'), ('4253', '15576', '15576', '460.96000000'), ('4428', '15576', '15576', '123.38750000'), ('48', '15576', '15576', '624.42454545'), ('104', '15576', '15577', '436.70500000'), ('141', '15576', '15576', '248.45000000'), ('150', '15576', '15576', '101.46000000'), ('305', '15576', '15576', '541.38666667'), ('658', '15576', '15577', '433.04000000'), ('566', '15576', '15576', '212.82000000'), ('741', '15576', '15576', '370.94500000'), ('924', '15576', '15576', '1090.42000000'), ('1163', '15576', '15576', '679.22000000'), ('1386', '15576', '15578', '388.89250000'), ('3443', '15576', '15577', '405.73666667'), ('360', '15576', '15576', '492.70500000'), ('464', '15576', '15576', '156.12000000'), ('636', '15576', '15577', '433.21400000'), ('1036', '15576', '15576', '414.64000000'), ('1249', '15576', '15576', '681.76000000'), ('1152', '15576', '15576', '81.94000000'), ('2732', '15576', '15576', '109.10000000'), ('3101', '15576', '15578', '292.91000000'), ('3118', '15576', '15576', '1383.68000000'), ('3250', '15576', '15576', '1686.11750000'), ('799', '15576', '15576', '115.93666667'), ('981', '15576', '15577', '288.51400000'), ('1534', '15576', '15577', '316.50000000'), ('2801', '15576', '15576', '730.36333333'), ('1454', '15576', '15576', '335.95500000'), ('3712', '15576', '15577', '267.72600000'), ('4035', '15576', '15576', '75.30000000'), ('4342', '15576', '15576', '116.11000000'), ('3001', '15576', '15576', '408.35666667'), ('3134', '15576', '15576', '352.05500000'), ('4348', '15576', '15576', '415.45000000'), ('4431', '15576', '15576', '390.05666667'), ('546', '15576', '15576', '403.05166667'), ('585', '15576', '15576', '32.85000000'), ('1568', '15576', '15576', '290.29000000'), ('312', '15576', '15577', '475.47750000'), ('662', '15576', '15576', '72.76000000'), ('930', '15576', '15576', '124.91000000'), ('3378', '15576', '15577', '567.76000000'), ('362', '15576', '15576', '623.38000000'), ('265', '15576', '15576', '766.76000000'), ('744', '15576', '15576', '16.38000000'), ('722', '15576', '15576', '777.16000000'), ('850', '15576', '15576', '601.63000000'), ('967', '15576', '15576', '370.94857143'), ('1206', '15576', '15577', '584.56800000'), ('1446', '15576', '15576', '531.92000000'), ('3017', '15576', '15576', '724.49000000'), ('3477', '15576', '15578', '651.61333333'), ('1226', '15576', '15576', '22.01000000'), ('1293', '15576', '15577', '661.87000000'), ('2417', '15576', '15576', '866.45142857'), ('3072', '15576', '15576', '624.96000000'), ('3095', '15576', '15576', '118.56000000'), ('3546', '15576', '15576', '202.48000000'), ('4343', '15576', '15576', '436.73500000'), ('2968', '15576', '15577', '78.38666667'), ('3876', '15576', '15576', '450.60200000'), ('5253', '15576', '15576', '372.03500000'), ('97', '15576', '15577', '139.32500000'), ('260', '15576', '15577', '707.08333333'), ('1010', '15576', '15577', '73.08000000'), ('448', '15576', '15576', '243.61333333'), ('1119', '15576', '15577', '667.77333333'), ('1558', '15576', '15577', '848.53500000'), ('2716', '15576', '15578', '555.19000000'), ('407', '15576', '15576', '437.65666667'), ('755', '15576', '15576', '551.59000000'), ('1040', '15576', '15576', '175.78000000'), ('3574', '15576', '15576', '360.75000000'), ('3379', '15576', '15578', '608.86500000'), ('3591', '15576', '15576', '402.61500000'), ('3689', '15576', '15576', '754.68000000'), ('5432', '15576', '15576', '41.57000000'), ('3259', '15576', '15576', '152.22000000'), ('3505', '15576', '15577', '258.57857143'), ('105', '15576', '15576', '109.10000000'), ('366', '15576', '15576', '438.96000000'), ('597', '15576', '15576', '561.92000000'), ('624', '15576', '15576', '734.98000000'), ('1425', '15576', '15576', '918.16750000'), ('3496', '15576', '15576', '683.63000000'), ('345', '15576', '15576', '487.09888889'), ('539', '15576', '15576', '987.81333333'), ('2099', '15576', '15577', '173.31500000'), ('2739', '15576', '15576', '239.23000000'), ('3176', '15576', '15576', '16.00000000'), ('3271', '15576', '15576', '121.54000000'), ('3307', '15576', '15577', '165.22500000'), ('833', '15576', '15576', '709.85000000'), ('4255', '15576', '15576', '579.71000000'), ('3497', '15576', '15576', '255.74750000'), ('3534', '15576', '15576', '458.20000000'), ('3763', '15576', '15577', '272.60571429'), ('3922', '15576', '15576', '652.87000000'), ('4347', '15576', '15576', '1069.74250000'), ('128', '15575', '15576', '680.97500000'), ('910', '15575', '15576', '461.85375000'), ('1262', '15575', '15576', '763.09333333'), ('1204', '15575', '15576', '504.04250000'), ('3114', '15575', '15577', '1242.15250000'), ('3683', '15575', '15575', '595.22666667'), ('3121', '15575', '15577', '812.20500000')]",NO,,,"SELECT AVG(t.Price) as avg_total_price
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE';","[(453.15031082529475,)]",YES,,,"SELECT AVG(Price) AS avg_total_price
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE';","[(453.15031082529475,)]",YES,,"SELECT AVG(t.Price) AS avg_total_price
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE g.Country = 'CZE';","[(453.15031082529475,)]",YES,,
1511,"For the customers who paid in the euro, what is their average total price of the transactions?",,simple,SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR',"[(23.189848484848483,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT
  c.currency,
  AVG(t.price) AS avg_transaction_value,
  MIN(t.date) AS start_date,
  MAX(t.date) AS end_date
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  c.currency = 'EUR'
GROUP BY
  c.currency
 -- Generated by Cortex Analyst
;","[('EUR', '23.18984848', '15576', '15577')]",NO,,,"SELECT AVG(t.Price) as avg_total_price_eur
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE c.Currency = 'EUR'","[(23.189848484848483,)]",YES,,,"SELECT AVG(total_price) AS avg_total_price
FROM (
  SELECT t.CustomerID, SUM(t.Price) AS total_price
  FROM transactions_1k t
  JOIN customers c ON t.CustomerID = c.CustomerID
  WHERE c.Currency = 'EUR'
  GROUP BY t.CustomerID
);","[(36.44119047619048,)]",NO,,"SELECT AVG(total_price) AS avg_total_price_eur
FROM (
  SELECT t.CustomerID, SUM(t.Price) AS total_price
  FROM transactions_1k t
  JOIN customers c ON t.CustomerID = c.CustomerID
  WHERE c.Currency = 'EUR'
  GROUP BY t.CustomerID
) sub;","[(36.44119047619048,)]",NO,,
1512,Which customer paid the most in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1,"[(19182,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT
  t.customerid,
  c.segment,
  SUM(t.price) AS total_spending
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-25'
GROUP BY
  t.customerid,
  c.segment
ORDER BY
  total_spending DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('19182', 'KAM', '6287.70')]",YES,,,"SELECT CustomerID, SUM(Price) as TotalPaid FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY TotalPaid DESC LIMIT 1;","[(19182, 6287.7)]",YES,,,"SELECT t.CustomerID, SUM(t.Price) as TotalPaid
FROM transactions_1k t
WHERE t.Date = '2012-08-25'
GROUP BY t.CustomerID
ORDER BY TotalPaid DESC
LIMIT 1;","[(19182, 6287.7)]",YES,,"SELECT t.CustomerID, SUM(t.Price) AS TotalPaid
FROM transactions_1k t
WHERE t.Date = '2012-08-25'
GROUP BY t.CustomerID
ORDER BY TotalPaid DESC
LIMIT 1;","[(19182, 6287.7)]",YES,,
1513,Which country's gas station had the first paid cusomer in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' ORDER BY T1.Time DESC LIMIT 1,"[('CZE',)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    time,
    price
  FROM debit_card_specializing.public.transactions_1k
), first_transaction AS (
  SELECT
    t.gasstationid,
    t.date,
    t.time
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25' AND t.price > 0
  ORDER BY
    t.time
  LIMIT 1
)
SELECT DISTINCT
  g.country
FROM first_transaction AS ft
LEFT OUTER JOIN __gasstations AS g
  ON ft.gasstationid = g.gasstationid
 -- Generated by Cortex Analyst
;","[('CZE',)]",YES,,,"SELECT t.Date, t.Time, t.GasStationID, g.Country FROM transactions_1k t JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-25' ORDER BY t.Time ASC LIMIT 1;","[('2012-08-25', '00:07:00', 3712, 'CZE')]",YES,,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-25'
ORDER BY t.Time ASC
LIMIT 1;","[('CZE',)]",YES,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-25'
ORDER BY t.Time ASC
LIMIT 1;","[('CZE',)]",YES,,
1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,'2012/8/24' can be represented by '2012-08-24'; ,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',"[('CZK',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  t.customerid,
  c.currency
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-24' AND t.time = '16:25:00'
 -- Generated by Cortex Analyst
;","[('22994', 'CZK'), ('40705', 'CZK'), ('18399', 'CZK')]",NO,,,"SELECT t.CustomerID, c.Currency FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00' LIMIT 1;","[(18399, 'CZK')]",YES,,,"SELECT c.Currency
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-24' AND t.Time = '16:25:00'
LIMIT 5;","[('CZK',), ('CZK',), ('CZK',)]",NO,,"SELECT c.Currency
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-24'
  AND t.Time = '16:25:00';","[('CZK',), ('CZK',), ('CZK',)]",NO,,
1515,What segment did the customer have at 2012/8/23 21:20:00?,'2012/8/23' can be represented by '2012-08-23',simple,SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.date = '2012-08-23' AND T1.time = '21:20:00',"[('KAM',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  t.customerid,
  c.segment
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-23' AND t.time = '21:20:00'
 -- Generated by Cortex Analyst
;","[('9627', 'KAM')]",YES,,,SELECT c.Segment FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-23' AND t.Time = '21:20:00' LIMIT 1;,"[('KAM',)]",YES,,,"SELECT c.Segment
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-23' AND t.Time = '21:20:00'
LIMIT 5;","[('KAM',)]",YES,,"SELECT c.Segment
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-23'
  AND t.Time = '21:20:00'
LIMIT 1;","[('KAM',)]",YES,,
1516,How many transactions were paid in CZK in the morning of 2012/8/26?,'2012/8/26' can be represented by '2012-08-26'; The morning refers to the time before '13:00:00',moderate,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time < '13:00:00' AND T2.Currency = 'CZK',"[(68,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    transactionid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  c.currency = 'CZK' AND t.date = '2012-08-26' AND t.time < '13:00:00'
 -- Generated by Cortex Analyst
;","[('68',)]",YES,,,SELECT COUNT(*) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE t.Date = '2012-08-26' AND t.Time < '13:00:00' AND c.Currency = 'CZK';,"[(68,)]",YES,,,"SELECT COUNT(*) 
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-26'
  AND t.Time < '13:00:00'
  AND c.Currency = 'CZK';","[(68,)]",YES,,"SELECT COUNT(*) AS num_transactions
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-26'
  AND t.Time < '13:00:00'
  AND c.Currency = 'CZK';","[(68,)]",YES,,
1517,"For the earliest customer, what segment did he/she have?",,simple,SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY Date ASC LIMIT 1,"[('KAM',)]","WITH __customers AS (
  SELECT
    customerid,
    segment
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    date
  FROM debit_card_specializing.public.transactions_1k
), earliest_customer AS (
  SELECT
    t.customerid
  FROM __transactions_1k AS t
  ORDER BY
    t.date ASC
  LIMIT 1
)
SELECT
  c.customerid,
  c.segment
FROM earliest_customer AS ec
JOIN __customers AS c
  ON ec.customerid = c.customerid
 -- Generated by Cortex Analyst
;","[('49788', 'KAM')]",YES,,,"SELECT c.Segment FROM customers c JOIN transactions_1k t ON c.CustomerID = t.CustomerID ORDER BY t.Date ASC, t.Time ASC LIMIT 1;","[('KAM',)]",YES,,,"SELECT c.Segment
FROM customers c
JOIN (
    SELECT CustomerID
    FROM customers
    ORDER BY CustomerID ASC
    LIMIT 1
) earliest ON c.CustomerID = earliest.CustomerID;","[('SME',)]",NO,,"SELECT c.Segment
FROM customers c
JOIN yearmonth y ON c.CustomerID = y.CustomerID
ORDER BY y.Date ASC
LIMIT 1;","[('KAM',)]",YES,,
1518,"For the deal happened at 2012/8/24 12:42:00, which country was it?",'2012/8/24 12:42:00' can refer to date = '2012-08-24' AND T1.time = '12:42:00' in the database,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00',"[('CZE',), ('CZE',)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  g.country
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  t.date = '2012-08-24' AND t.time = '12:42:00'
 -- Generated by Cortex Analyst
;","[('CZE',), ('CZE',)]",YES,,,SELECT g.Country FROM transactions_1k t INNER JOIN gasstations g ON t.GasStationID = g.GasStationID WHERE t.Date = '2012-08-24' AND t.Time = '12:42:00' LIMIT 1;,"[('CZE',)]",NO,,,"SELECT G.Country
FROM transactions_1k T
JOIN gasstations G ON T.GasStationID = G.GasStationID
WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00'
LIMIT 5;","[('CZE',), ('CZE',)]",YES,,"SELECT G.Country
FROM transactions_1k T
JOIN gasstations G ON T.GasStationID = G.GasStationID
WHERE T.Date = '2012-08-24' AND T.Time = '12:42:00';","[('CZE',), ('CZE',)]",YES,,
1519,What was the product id of the transaction happened at 2012/8/23 21:20:00?,'2012/8/23 21:20:00' can refer to date = '2012-08-23' AND T1.time = '21:20:00' in the database,simple,SELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00',"[(2,)]","WITH __transactions_1k AS (
  SELECT
    productid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
)
SELECT
  T1.productid
FROM __transactions_1k AS T1
WHERE
  T1.date = '2012-08-23' AND T1.time = '21:20:00'
 -- Generated by Cortex Analyst
;","[('2',)]",YES,,,SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00';,"[(2,)]",YES,,,SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' LIMIT 5;,"[(2,)]",YES,,"SELECT ProductID
FROM transactions_1k
WHERE Date = '2012-08-23' AND Time = '21:20:00';","[(2,)]",YES,,
1520,"For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",'2012/8/24' can be represented by '2012-08-24'; expense and the consumption has the similar meaning.,moderate,"SELECT T1.CustomerID, T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND T2.Date = '201201'","[(40333, 201201, 4084.9), (7630, 201201, 24953.81)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), target_customer AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-24' AND t.price = 124.05
)
SELECT
  t.date,
  t.price
FROM __transactions_1k AS t
INNER JOIN target_customer AS tc
  ON t.customerid = tc.customerid
WHERE
  DATE_TRUNC('MONTH', t.date) = '2012-01-01'
ORDER BY
  t.date DESC NULLS LAST
 -- Generated by Cortex Analyst
;",,NO,,,"SELECT Date, Price FROM transactions_1k WHERE CustomerID = 40333 AND Date >= '2012-01-01' AND Date < '2012-02-01' ORDER BY Date;",,NO,,,"SELECT Date, Consumption
FROM yearmonth
WHERE CustomerID = (
    SELECT CustomerID
    FROM transactions_1k
    WHERE Date = '2012-08-24' AND Price = 124.05
    LIMIT 1
)
AND Date = 201201
LIMIT 5;","[(201201, 4084.9)]",NO,,"SELECT y.Date, y.Consumption
FROM yearmonth y
WHERE y.CustomerID = (
    SELECT t.CustomerID
    FROM transactions_1k t
    WHERE t.Date = '2012-08-24' AND t.Price = 124.05
    LIMIT 1
)
AND y.Date = 201201;","[(201201, 4084.9)]",NO,,
1521,"For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",Czech Republic can be represented as the Country value in the gasstations table is 'CZE'; '2012/8/26' can be represented by '2012-08-26'; during 8:00-9:00 can be represented as Time BETWEEN '08:00:00' AND '09:00:00',moderate,SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T2.Country = 'CZE',"[(14,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid,
    date,
    time
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  COUNT(t.transactionid) AS transaction_count
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  g.country = 'CZE'
  AND t.date = '2012-08-26'
  AND t.time BETWEEN '08:00:00' AND '09:00:00'
 -- Generated by Cortex Analyst
;","[('14',)]",YES,,,"SELECT COUNT(*) FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-26'
AND t.Time BETWEEN '08:00:00' AND '09:00:00'
AND g.Country = 'CZE'","[(14,)]",YES,,,"SELECT COUNT(*) AS transaction_count
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-26'
  AND t.Time BETWEEN '08:00:00' AND '09:00:00'
  AND g.Country = 'CZE';","[(14,)]",YES,,"SELECT COUNT(*) AS transaction_count
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-26'
  AND t.Time BETWEEN '08:00:00' AND '09:00:00'
  AND g.Country = 'CZE';","[(14,)]",YES,,
1522,"There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",June of 2013 means Date contains '201306' in the yearmonth.date of the database,simple,SELECT T2.Currency FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201306' AND T1.Consumption = 214582.17,"[('CZK',)]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), customer_sales AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_sales
  FROM __transactions_1k AS t
  WHERE
    DATE_TRUNC('MONTH', t.date) = '2013-06-01'
  GROUP BY
    t.customerid
  HAVING
    total_sales = 214582.17
)
SELECT DISTINCT
  c.currency
FROM customer_sales AS cs
LEFT OUTER JOIN __customers AS c
  ON cs.customerid = c.customerid
 -- Generated by Cortex Analyst
;",,NO,,,SELECT DISTINCT t.ProductID FROM transactions_1k t WHERE t.CustomerID = 33810 AND t.Date LIKE '2013-06%' LIMIT 5;,,NO,,,"SELECT c.Currency
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201306 AND y.Consumption = 214582.17
LIMIT 1;","[('CZK',)]",YES,,"SELECT c.Currency
FROM yearmonth y
JOIN customers c ON y.CustomerID = c.CustomerID
WHERE y.Date = 201306 AND y.Consumption = 214582.17;","[('CZK',)]",YES,,
1523,Which country was the card owner of No.667467 in?,,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CardID = '667467',"[('CZE',)]","WITH __transactions_1k AS (
  SELECT
    cardid,
    gasstationid
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT DISTINCT
  t.cardid,
  g.country
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
WHERE
  t.cardid = 667467
ORDER BY
  g.country DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('667467', 'CZE')]",YES,,,"SELECT c.Currency
FROM customers c
JOIN transactions_1k t ON c.CustomerID = t.CustomerID
WHERE t.CardID = 667467
LIMIT 1;","[('CZK',)]",NO,,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.CardID = 667467
LIMIT 5;","[('CZE',)]",YES,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.CardID = 667467
LIMIT 1;","[('CZE',)]",YES,,
1524,What's the nationality of the customer who spent 548.4 in 2012/8/24?,'2012/8/24' can be represented by '2012-08-24',simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Price = 548.4,"[('CZE',)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
)
SELECT DISTINCT
  c.currency
FROM __transactions_1k AS t
LEFT OUTER JOIN __customers AS c
  ON t.customerid = c.customerid
WHERE
  t.date = '2012-08-24' AND t.price = 548.4
 -- Generated by Cortex Analyst
;","[('CZK',)]",NO,,,"SELECT c.Currency
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-24' AND t.Price = 548.4
LIMIT 1;","[('CZK',)]",NO,,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-24'
GROUP BY t.CustomerID, g.Country
HAVING SUM(t.Price) = 548.4
LIMIT 5;",,NO,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.Date = '2012-08-24'
  AND t.Price = 548.4
LIMIT 1;","[('CZE',)]",YES,,
1525,What is the percentage of the customers who used EUR in 2012/8/25?,'2012/8/25' can be represented by '2012-08-25',simple,"SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS FLOAT) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25'","[(1.6470588235294117,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date
  FROM debit_card_specializing.public.transactions_1k
), __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), total_customers AS (
  SELECT
    COUNT(DISTINCT t.customerid) AS total
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25'
), eur_customers AS (
  SELECT
    COUNT(DISTINCT t.customerid) AS eur_count
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __customers AS c
    ON t.customerid = c.customerid
  WHERE
    t.date = '2012-08-25' AND c.currency = 'EUR'
)
SELECT
  eur_count / NULLIF(CAST(total AS FLOAT), 0) AS eur_customer_percentage
FROM total_customers, eur_customers
 -- Generated by Cortex Analyst
;","[('0.027027027027027029',)]",NO,,,"SELECT ROUND(100.0 * COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25'), 2) AS eur_percent
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-25' AND c.Currency = 'EUR';","[(2.7,)]",NO,,,"SELECT 
  ROUND(
    100.0 * COUNT(DISTINCT t.CustomerID) / (SELECT COUNT(*) FROM customers), 
    2
  ) AS percentage_eur_customers
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
WHERE t.Date = '2012-08-25' AND c.Currency = 'EUR';","[(0.02,)]",NO,,"SELECT 
  100.0 * COUNT(DISTINCT c.CustomerID) / 
    (SELECT COUNT(DISTINCT CustomerID) FROM transactions_1k WHERE Date = '2012-08-25') AS eur_percentage
FROM 
  transactions_1k t
  JOIN customers c ON t.CustomerID = c.CustomerID
WHERE 
  t.Date = '2012-08-25'
  AND c.Currency = 'EUR';","[(2.7027027027027026,)]",NO,,
1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",'2012/8/24' can be represented by '2012-08-24'; Consumption decrease rate = (consumption_2012 - consumption_2013) / consumption_2012,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","[(-5.815242674672346,)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), target_customer AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.date = '2012-08-25' AND t.price = 634.8
), yearly_consumption AS (
  SELECT
    cc.customerid,
    CAST(SUBSTRING(cc.date, 1, 4) AS INT) AS year,
    SUM(cc.consumption) AS yearly_consumption
  FROM __customer_consumption AS cc
  JOIN target_customer AS tc
    ON cc.customerid = tc.customerid
  WHERE
    CAST(SUBSTRING(cc.date, 1, 4) AS INT) IN (2012, 2013)
  GROUP BY
    cc.customerid,
    SUBSTRING(cc.date, 1, 4)
)
SELECT
  c2012.customerid,
  c2012.yearly_consumption AS consumption_2012,
  c2013.yearly_consumption AS consumption_2013,
  (
    c2012.yearly_consumption - c2013.yearly_consumption
  ) / NULLIF(NULLIF(c2012.yearly_consumption, 0), 0) AS decrease_rate
FROM yearly_consumption AS c2012
LEFT JOIN yearly_consumption AS c2013
  ON c2012.customerid = c2013.customerid AND c2013.year = 2013
WHERE
  c2012.year = 2012
 -- Generated by Cortex Analyst
;","[('6718', '158447.52', '1079858.30', '-5.81524267')]",NO,,,SELECT SUM(Price) as total_2013 FROM transactions_1k WHERE CustomerID = 6718 AND Date >= '2013-01-01' AND Date < '2014-01-01';,"[(None,)]",NO,,,"WITH t AS (
  SELECT CustomerID
  FROM transactions_1k
  WHERE Date = '2012-08-25' AND Price = 634.8
  LIMIT 1
),
c2012 AS (
  SELECT CustomerID, SUM(Consumption) AS c2012
  FROM yearmonth
  WHERE Date BETWEEN 201201 AND 201212
  GROUP BY CustomerID
),
c2013 AS (
  SELECT CustomerID, SUM(Consumption) AS c2013
  FROM yearmonth
  WHERE Date BETWEEN 201301 AND 201312
  GROUP BY CustomerID
)
SELECT t.CustomerID,
       c2012.c2012,
       c2013.c2013,
       CASE WHEN c2012.c2012 IS NOT NULL AND c2012.c2012 != 0
            THEN (c2012.c2012 - c2013.c2013) / c2012.c2012
            ELSE NULL END AS consumption_decrease_rate
FROM t
LEFT JOIN c2012 ON t.CustomerID = c2012.CustomerID
LEFT JOIN c2013 ON t.CustomerID = c2013.CustomerID
LIMIT 1;","[(6718, 158447.52, 1079858.3, -5.815242674672346)]",YES,,"WITH target_customer AS (
  SELECT CustomerID
  FROM transactions_1k
  WHERE Date = '2012-08-25' AND Price = 634.8
  LIMIT 1
),
consumption_2012 AS (
  SELECT Consumption
  FROM yearmonth
  WHERE CustomerID = (SELECT CustomerID FROM target_customer)
    AND CAST(SUBSTR(CAST(Date AS TEXT), 1, 4) AS INTEGER) = 2012
),
consumption_2013 AS (
  SELECT Consumption
  FROM yearmonth
  WHERE CustomerID = (SELECT CustomerID FROM target_customer)
    AND CAST(SUBSTR(CAST(Date AS TEXT), 1, 4) AS INTEGER) = 2013
)
SELECT
  ( ( (SELECT SUM(Consumption) FROM consumption_2012) - (SELECT SUM(Consumption) FROM consumption_2013) )
    / NULLIF((SELECT SUM(Consumption) FROM consumption_2012), 0) ) AS consumption_decrease_rate;","[(-5.815242674672346,)]",YES,,
1527,Which gas station has the highest amount of revenue?,,simple,SELECT GasStationID FROM transactions_1k GROUP BY GasStationID ORDER BY SUM(Price) DESC LIMIT 1,"[(4347,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
)
SELECT
  t.gasstationid,
  g.country,
  MIN(t.date) AS start_date,
  MAX(t.date) AS end_date,
  SUM(t.price) AS total_revenue
FROM __transactions_1k AS t
LEFT OUTER JOIN __gasstations AS g
  ON t.gasstationid = g.gasstationid
GROUP BY
  t.gasstationid,
  g.country
ORDER BY
  total_revenue DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('4347', 'CZE', '15576', '15576', '8557.94')]",YES,,,SELECT * FROM gasstations WHERE GasStationID = 4347;,"[(4347, 4, 'CZE', 'Premium')]",YES,,,"SELECT g.GasStationID, SUM(t.Amount * t.Price) AS TotalRevenue
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
GROUP BY g.GasStationID
ORDER BY TotalRevenue DESC
LIMIT 1;","[(3250, 1540190.2599999998)]",NO,,"SELECT 
    t.GasStationID,
    SUM(t.Price) AS TotalRevenue
FROM 
    transactions_1k t
GROUP BY 
    t.GasStationID
ORDER BY 
    TotalRevenue DESC
LIMIT 1;","[(4347, 8557.94)]",YES,,
1528,"What is the percentage of ""premium"" against the overall segment in Country = ""SVK""?",,simple,"SELECT CAST(SUM(IIF(Country = 'SVK' AND Segment = 'Premium', 1, 0)) AS FLOAT) * 100 / SUM(IIF(Country = 'SVK', 1, 0)) FROM gasstations","[(35.68181818181818,)]","WITH __transactions_1k AS (
  SELECT
    gasstationid,
    transactionid
  FROM debit_card_specializing.public.transactions_1k
), __gasstations AS (
  SELECT
    country,
    gasstationid,
    segment
  FROM debit_card_specializing.public.gasstations
), svk_transactions AS (
  SELECT
    g.segment,
    COUNT(t.transactionid) AS transaction_count
  FROM __transactions_1k AS t
  LEFT OUTER JOIN __gasstations AS g
    ON t.gasstationid = g.gasstationid
  WHERE
    g.country = 'SVK'
  GROUP BY
    g.segment
)
SELECT
  segment,
  transaction_count,
  transaction_count / NULLIF(SUM(transaction_count) OVER (), 0) AS segment_percentage
FROM svk_transactions
ORDER BY
  segment_percentage DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('Premium', '53', '0.791045'), ('Discount', '6', '0.089552'), ('Value for money', '4', '0.059701'), ('Other', '3', '0.044776'), ('Noname', '1', '0.014925')]",NO,,,"SELECT COUNT(*) AS total_stations,
       SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS premium_stations
FROM gasstations
WHERE Country = 'SVK';","[(880, 314)]",NO,,,"SELECT
  100.0 * SUM(CASE WHEN LOWER(g.Segment) = 'premium' THEN 1 ELSE 0 END) / COUNT(*) AS premium_percentage
FROM gasstations g
WHERE g.Country = 'SVK';","[(35.68181818181818,)]",YES,,"SELECT
  100.0 * COUNT(CASE WHEN LOWER(g.Segment) = 'premium' THEN 1 END) / COUNT(*) AS premium_percentage
FROM
  gasstations g
WHERE
  g.Country = 'SVK';","[(35.68181818181818,)]",YES,,
1529,"What is the amount spent by customer ""38508"" at the gas stations? How much had the customer spent in January 2012?",January 2012 refers to the Date value = '201201',moderate,"SELECT SUM(T1.Price) , SUM(IIF(T3.Date = '201201', T1.Price, 0)) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.CustomerID = '38508'","[(68740.2, 3437.01)]","WITH __transactions_1k AS (
  SELECT
    customerid,
    date,
    price
  FROM debit_card_specializing.public.transactions_1k
), total_spend AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_amount
  FROM __transactions_1k AS t
  WHERE
    t.customerid = 38508 AND t.price > 0
  GROUP BY
    t.customerid
), jan_2012_spend AS (
  SELECT
    t.customerid,
    SUM(t.price) AS jan_2012_amount
  FROM __transactions_1k AS t
  WHERE
    t.customerid = 38508 AND t.price > 0 AND t.date = '201201'
  GROUP BY
    t.customerid
)
SELECT
  ts.customerid,
  ts.total_amount AS all_time_spend,
  COALESCE(js.jan_2012_amount, 0) AS jan_2012_spend
FROM total_spend AS ts
LEFT JOIN jan_2012_spend AS js
  ON ts.customerid = js.customerid
 -- Generated by Cortex Analyst
;","[('38508', '3437.01', '0.00')]",NO,,,"SELECT SUM(Price) AS total_spent_jan2012 FROM transactions_1k WHERE CustomerID = 38508 AND substr(Date, 1, 7) = '2012-01';","[(None,)]",NO,,,"SELECT 
  SUM(Price) AS total_amount_spent,
  SUM(CASE WHEN Date = '2012-01' OR Date = '201201' THEN Price ELSE 0 END) AS amount_spent_jan_2012
FROM transactions_1k
WHERE CustomerID = 38508;","[(3437.01, 0)]",NO,,"SELECT 
    SUM(Price) AS Total_Amount_Spent, 
    SUM(CASE WHEN strftime('%Y%m', Date) = '201201' THEN Price ELSE 0 END) AS Amount_Spent_Jan_2012
FROM transactions_1k
WHERE CustomerID = 38508;","[(3437.01, 0)]",NO,,
1530,Which are the top five best selling products? Please state the full name of them.,Description of products contains full name,simple,SELECT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.Amount DESC LIMIT 5,"[('Nafta',), ('Diesel +',), ('Nafta',), ('Nafta',), ('Nafta',)]","WITH __transactions_1k AS (
  SELECT
    productid,
    amount
  FROM debit_card_specializing.public.transactions_1k
), __products AS (
  SELECT
    description,
    productid
  FROM debit_card_specializing.public.products
)
SELECT
  p.description,
  SUM(t.amount) AS total_quantity
FROM __transactions_1k AS t
LEFT OUTER JOIN __products AS p
  ON t.productid = p.productid
WHERE
  t.amount > 0
GROUP BY
  p.productid,
  p.description
ORDER BY
  total_quantity DESC NULLS LAST
LIMIT 5
 -- Generated by Cortex Analyst
;","[('Nafta', '15230'), ('Diesel +', '1120'), ('Natural', '1045'), ('Diesel', '817'), ('Nat.Super', '539')]",NO,,,"SELECT p.Description, SUM(t.Amount) as TotalAmount
FROM products p
JOIN transactions_1k t ON p.ProductID = t.ProductID
GROUP BY p.ProductID, p.Description
ORDER BY TotalAmount DESC
LIMIT 5;","[('Nafta', 15230), ('Diesel +', 1120), ('Natural', 1045), ('Diesel', 817), ('Nat.Super', 539)]",NO,,,"SELECT p.Description, SUM(t.Amount) as TotalAmount
FROM transactions_1k t
JOIN products p ON t.ProductID = p.ProductID
GROUP BY p.ProductID, p.Description
ORDER BY TotalAmount DESC
LIMIT 5;","[('Nafta', 15230), ('Diesel +', 1120), ('Natural', 1045), ('Diesel', 817), ('Nat.Super', 539)]",NO,,"SELECT p.Description, SUM(t.Amount) AS TotalSold
FROM transactions_1k t
JOIN products p ON t.ProductID = p.ProductID
GROUP BY p.Description
ORDER BY TotalSold DESC
LIMIT 5;","[('Nafta', 15230), ('Diesel +', 1120), ('Natural', 1045), ('Diesel', 817), ('Nat.Super', 539)]",NO,,
1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,average price per single item = Total(price) / Total(amount),moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency","[(12459, 203.8560787354258, 'CZK')]","WITH __customers AS (
  SELECT
    currency,
    customerid
  FROM debit_card_specializing.public.customers
), __transactions_1k AS (
  SELECT
    customerid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), customer_totals AS (
  SELECT
    t.customerid,
    SUM(t.price) AS total_spending,
    SUM(t.amount) AS total_quantity
  FROM __transactions_1k AS t
  GROUP BY
    t.customerid
), top_customer AS (
  SELECT
    ct.customerid,
    ct.total_spending,
    ct.total_quantity,
    ct.total_spending / NULLIF(NULLIF(ct.total_quantity, 0), 0) AS avg_price_per_item
  FROM customer_totals AS ct
  ORDER BY
    total_spending DESC NULLS LAST
  LIMIT 1
)
SELECT
  tc.customerid,
  tc.total_spending,
  tc.avg_price_per_item,
  c.currency
FROM top_customer AS tc
LEFT OUTER JOIN __customers AS c
  ON tc.customerid = c.customerid
 -- Generated by Cortex Analyst
;","[('19182', '8618.54', '24.27757746', 'CZK')]",NO,,,SELECT Currency FROM customers WHERE CustomerID = 19182;,"[('CZK',)]",NO,,,"SELECT 
  t.CustomerID, 
  c.Currency, 
  SUM(t.Price) AS TotalSpent, 
  (SUM(t.Price) * 1.0) / SUM(t.Amount) AS AvgPricePerItem
FROM transactions_1k t
JOIN customers c ON t.CustomerID = c.CustomerID
GROUP BY t.CustomerID, c.Currency
ORDER BY TotalSpent DESC
LIMIT 1;","[(19182, 'CZK', 8618.54, 24.277577464788735)]",NO,,"SELECT 
    t.CustomerID,
    c.Currency,
    SUM(t.Price) AS Total_Spent,
    SUM(t.Price) / SUM(t.Amount) AS Avg_Price_Per_Item
FROM 
    transactions_1k t
JOIN 
    customers c ON t.CustomerID = c.CustomerID
GROUP BY 
    t.CustomerID, c.Currency
ORDER BY 
    Total_Spent DESC
LIMIT 1;","[(19182, 'CZK', 8618.54, 24.277577464788735)]",NO,,
1532,Which country had the gas station that sold the most expensive product id No.2 for one unit?,,simple,SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.ProductID = 2 ORDER BY T1.Price DESC LIMIT 1,"[('CZE',)]","WITH __gasstations AS (
  SELECT
    country,
    gasstationid
  FROM debit_card_specializing.public.gasstations
), __transactions_1k AS (
  SELECT
    gasstationid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), unit_prices AS (
  SELECT
    t.gasstationid,
    t.price / NULLIF(NULLIF(t.amount, 0), 0) AS unit_price
  FROM __transactions_1k AS t
  WHERE
    t.productid = 2 AND t.amount > 0 AND t.price > 0
)
SELECT DISTINCT
  g.country,
  g.gasstationid,
  up.unit_price
FROM unit_prices AS up
LEFT OUTER JOIN __gasstations AS g
  ON up.gasstationid = g.gasstationid
ORDER BY
  up.unit_price DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;","[('CZE', '2709', '25.17041667')]",YES,,,"SELECT g.Country, t.GasStationID, t.Price
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.ProductID = 2 AND t.Amount = 1
ORDER BY t.Price DESC
LIMIT 1;",,NO,,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.ProductID = 2
ORDER BY t.Price DESC
LIMIT 1;","[('CZE',)]",YES,,"SELECT g.Country
FROM transactions_1k t
JOIN gasstations g ON t.GasStationID = g.GasStationID
WHERE t.ProductID = 2 AND t.Amount = 1
ORDER BY t.Price DESC
LIMIT 1;",,NO,,
1533,For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.,August of 2012 refers to the Date value = '201208' ; Price per unit of product = Price / Amount;,moderate,SELECT T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price / T1.Amount > 29.00 AND T1.ProductID = 5 AND T2.Date = '201208',"[(1903.2,), (88265.39,), (1129.2,), (126157.7,), (126157.7,), (58.19,), (1142.95,), (8878.07,), (69331.72,), (45937.22,)]","WITH __customer_consumption AS (
  SELECT
    customerid,
    date,
    consumption
  FROM debit_card_specializing.public.yearmonth
), __transactions_1k AS (
  SELECT
    customerid,
    productid,
    amount,
    price
  FROM debit_card_specializing.public.transactions_1k
), high_value_customers AS (
  SELECT DISTINCT
    t.customerid
  FROM __transactions_1k AS t
  WHERE
    t.productid = 5 AND (
      t.price / NULLIF(NULLIF(t.amount, 0), 0)
    ) > 29.00
)
SELECT
  cc.customerid,
  cc.consumption
FROM __customer_consumption AS cc
INNER JOIN high_value_customers AS hvc
  ON cc.customerid = hvc.customerid
WHERE
  cc.date = '201208'
ORDER BY
  cc.consumption DESC NULLS LAST
 -- Generated by Cortex Analyst
;","[('6768', '126157.70'), ('5443', '88265.39'), ('24700', '69331.72'), ('7626', '45937.22'), ('23861', '8878.07'), ('18831', '1903.20'), ('45868', '1142.95'), ('46933', '1129.20'), ('20447', '58.19')]",NO,,,"SELECT CustomerID, Segment
FROM customers
WHERE CustomerID IN (18831, 5443, 46933, 6768)
LIMIT 5;","[(5443, 'KAM'), (6768, 'KAM'), (18831, 'SME'), (46933, 'SME')]",NO,,,"SELECT t.CustomerID, y.Consumption
FROM transactions_1k t
JOIN yearmonth y ON t.CustomerID = y.CustomerID AND y.Date = '201208'
WHERE t.ProductID = 5
  AND (t.Price / t.Amount) > 29.00
LIMIT 5;","[(18831, 1903.2), (5443, 88265.39), (46933, 1129.2), (6768, 126157.7), (6768, 126157.7)]",NO,,"SELECT
  t.CustomerID,
  y.Consumption
FROM
  transactions_1k t
JOIN
  yearmonth y
    ON t.CustomerID = y.CustomerID
    AND y.Date = 201208
WHERE
  t.ProductID = 5
  AND t.Amount > 0
  AND (t.Price / t.Amount) > 29.00;","[(18831, 1903.2), (5443, 88265.39), (46933, 1129.2), (6768, 126157.7), (6768, 126157.7), (20447, 58.19), (45868, 1142.95), (23861, 8878.07), (24700, 69331.72), (7626, 45937.22)]",YES,,
